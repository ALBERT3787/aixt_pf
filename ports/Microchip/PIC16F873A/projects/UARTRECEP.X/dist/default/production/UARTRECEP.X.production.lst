

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Mar 04 07:38:47 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F873A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 22/03/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F873A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0000                     	;# 
    49     0001                     	;# 
    50     0002                     	;# 
    51     0003                     	;# 
    52     0004                     	;# 
    53     0005                     	;# 
    54     0006                     	;# 
    55     0007                     	;# 
    56     000A                     	;# 
    57     000B                     	;# 
    58     000C                     	;# 
    59     000D                     	;# 
    60     000E                     	;# 
    61     000E                     	;# 
    62     000F                     	;# 
    63     0010                     	;# 
    64     0011                     	;# 
    65     0012                     	;# 
    66     0013                     	;# 
    67     0014                     	;# 
    68     0015                     	;# 
    69     0015                     	;# 
    70     0016                     	;# 
    71     0017                     	;# 
    72     0018                     	;# 
    73     0019                     	;# 
    74     001A                     	;# 
    75     001B                     	;# 
    76     001B                     	;# 
    77     001C                     	;# 
    78     001D                     	;# 
    79     001E                     	;# 
    80     001F                     	;# 
    81     0081                     	;# 
    82     0085                     	;# 
    83     0086                     	;# 
    84     0087                     	;# 
    85     008C                     	;# 
    86     008D                     	;# 
    87     008E                     	;# 
    88     0091                     	;# 
    89     0092                     	;# 
    90     0093                     	;# 
    91     0094                     	;# 
    92     0098                     	;# 
    93     0099                     	;# 
    94     009C                     	;# 
    95     009D                     	;# 
    96     009E                     	;# 
    97     009F                     	;# 
    98     010C                     	;# 
    99     010D                     	;# 
   100     010E                     	;# 
   101     010F                     	;# 
   102     018C                     	;# 
   103     018D                     	;# 
   104     0000                     	;# 
   105     0001                     	;# 
   106     0002                     	;# 
   107     0003                     	;# 
   108     0004                     	;# 
   109     0005                     	;# 
   110     0006                     	;# 
   111     0007                     	;# 
   112     000A                     	;# 
   113     000B                     	;# 
   114     000C                     	;# 
   115     000D                     	;# 
   116     000E                     	;# 
   117     000E                     	;# 
   118     000F                     	;# 
   119     0010                     	;# 
   120     0011                     	;# 
   121     0012                     	;# 
   122     0013                     	;# 
   123     0014                     	;# 
   124     0015                     	;# 
   125     0015                     	;# 
   126     0016                     	;# 
   127     0017                     	;# 
   128     0018                     	;# 
   129     0019                     	;# 
   130     001A                     	;# 
   131     001B                     	;# 
   132     001B                     	;# 
   133     001C                     	;# 
   134     001D                     	;# 
   135     001E                     	;# 
   136     001F                     	;# 
   137     0081                     	;# 
   138     0085                     	;# 
   139     0086                     	;# 
   140     0087                     	;# 
   141     008C                     	;# 
   142     008D                     	;# 
   143     008E                     	;# 
   144     0091                     	;# 
   145     0092                     	;# 
   146     0093                     	;# 
   147     0094                     	;# 
   148     0098                     	;# 
   149     0099                     	;# 
   150     009C                     	;# 
   151     009D                     	;# 
   152     009E                     	;# 
   153     009F                     	;# 
   154     010C                     	;# 
   155     010D                     	;# 
   156     010E                     	;# 
   157     010F                     	;# 
   158     018C                     	;# 
   159     018D                     	;# 
   160     0019                     _TXREG	set	25
   161     0006                     _PORTBbits	set	6
   162     001A                     _RCREG	set	26
   163     0018                     _RCSTAbits	set	24
   164     000C                     _PIR1bits	set	12
   165     0064                     _TXIF	set	100
   166     0098                     _TXSTAbits	set	152
   167     0099                     _SPBRG	set	153
   168     0086                     _TRISBbits	set	134
   169     009F                     _ADCON1bits	set	159
   170                           
   171                           	psect	strings
   172     0002                     __pstrings:
   173     0002                     stringtab:
   174     0002                     __stringtab:
   175     0002                     stringcode:	
   176                           ;	String table - string pointers are 1 byte each
   177                           
   178     0002                     stringdir:
   179     0002  3000               	movlw	high stringdir
   180     0003  008A               	movwf	10
   181     0004  0804               	movf	4,w
   182     0005  0A84               	incf	4,f
   183     0006  0782               	addwf	2,f
   184     0007                     __stringbase:
   185     0007  3400               	retlw	0
   186     0008                     __end_of__stringtab:
   187     0008                     STR_1:
   188     0008  346C               	retlw	108	;'l'
   189     0009  3465               	retlw	101	;'e'
   190     000A  3464               	retlw	100	;'d'
   191     000B  3431               	retlw	49	;'1'
   192     000C  343A               	retlw	58	;':'
   193     000D  3420               	retlw	32	;' '
   194     000E  3445               	retlw	69	;'E'
   195     000F  346E               	retlw	110	;'n'
   196     0010  3463               	retlw	99	;'c'
   197     0011  3465               	retlw	101	;'e'
   198     0012  346E               	retlw	110	;'n'
   199     0013  3464               	retlw	100	;'d'
   200     0014  3469               	retlw	105	;'i'
   201     0015  3464               	retlw	100	;'d'
   202     0016  346F               	retlw	111	;'o'
   203     0017  340D               	retlw	13
   204     0018  340A               	retlw	10
   205     0019  3400               	retlw	0
   206     001A                     STR_5:
   207     001A  346C               	retlw	108	;'l'
   208     001B  3465               	retlw	101	;'e'
   209     001C  3464               	retlw	100	;'d'
   210     001D  3432               	retlw	50	;'2'
   211     001E  343A               	retlw	58	;':'
   212     001F  3420               	retlw	32	;' '
   213     0020  3445               	retlw	69	;'E'
   214     0021  346E               	retlw	110	;'n'
   215     0022  3463               	retlw	99	;'c'
   216     0023  3465               	retlw	101	;'e'
   217     0024  346E               	retlw	110	;'n'
   218     0025  3464               	retlw	100	;'d'
   219     0026  3469               	retlw	105	;'i'
   220     0027  3464               	retlw	100	;'d'
   221     0028  346F               	retlw	111	;'o'
   222     0029  340D               	retlw	13
   223     002A  340A               	retlw	10
   224     002B  3400               	retlw	0
   225     002C                     STR_3:
   226     002C  346C               	retlw	108	;'l'
   227     002D  3465               	retlw	101	;'e'
   228     002E  3464               	retlw	100	;'d'
   229     002F  3431               	retlw	49	;'1'
   230     0030  343A               	retlw	58	;':'
   231     0031  3420               	retlw	32	;' '
   232     0032  3441               	retlw	65	;'A'
   233     0033  3470               	retlw	112	;'p'
   234     0034  3461               	retlw	97	;'a'
   235     0035  3467               	retlw	103	;'g'
   236     0036  3461               	retlw	97	;'a'
   237     0037  3464               	retlw	100	;'d'
   238     0038  346F               	retlw	111	;'o'
   239     0039  340D               	retlw	13
   240     003A  340A               	retlw	10
   241     003B  3400               	retlw	0
   242     003C                     STR_7:
   243     003C  346C               	retlw	108	;'l'
   244     003D  3465               	retlw	101	;'e'
   245     003E  3464               	retlw	100	;'d'
   246     003F  3432               	retlw	50	;'2'
   247     0040  343A               	retlw	58	;':'
   248     0041  3420               	retlw	32	;' '
   249     0042  3441               	retlw	65	;'A'
   250     0043  3470               	retlw	112	;'p'
   251     0044  3461               	retlw	97	;'a'
   252     0045  3467               	retlw	103	;'g'
   253     0046  3461               	retlw	97	;'a'
   254     0047  3464               	retlw	100	;'d'
   255     0048  346F               	retlw	111	;'o'
   256     0049  340D               	retlw	13
   257     004A  340A               	retlw	10
   258     004B  3400               	retlw	0
   259     002C                     
   260                           	psect	cinit
   261     07FA                     start_initialization:	
   262                           ; #config settings
   263                           
   264     07FA                     __initialization:
   265                           
   266                           ; Clear objects allocated to BANK0
   267     07FA  1283               	bcf	3,5	;RP0=0, select bank0
   268     07FB  1303               	bcf	3,6	;RP1=0, select bank0
   269     07FC  01AE               	clrf	__pbssBANK0& (0+127)
   270     07FD                     end_of_initialization:	
   271                           ;End of C runtime variable initialization code
   272                           
   273     07FD                     __end_of__initialization:
   274     07FD  0183               	clrf	3
   275     07FE  118A  2F4A         	ljmp	_main	;jump to C main() function
   276                           
   277                           	psect	bssBANK0
   278     002E                     __pbssBANK0:
   279     002E                     _datos:
   280     002E                     	ds	1
   281                           
   282                           	psect	cstackCOMMON
   283     0000                     __pcstackCOMMON:
   284     0000                     ??_uart__read:
   285                           
   286                           	psect	cstackBANK0
   287     0020                     __pcstackBANK0:	
   288                           ; 1 bytes @ 0x0
   289                           
   290     0020                     ?_uart__read:
   291     0020                     ?_main:	
   292                           ; 1 bytes @ 0x0
   293                           
   294     0020                     ??_main:	
   295                           ; 1 bytes @ 0x0
   296                           
   297                           
   298                           ; 1 bytes @ 0x0
   299     0020                     	ds	2
   300     0022                     main@i:
   301                           
   302                           ; 2 bytes @ 0x2
   303     0022                     	ds	2
   304     0024                     main@i_247:
   305                           
   306                           ; 2 bytes @ 0x4
   307     0024                     	ds	2
   308     0026                     main@i_250:
   309                           
   310                           ; 2 bytes @ 0x6
   311     0026                     	ds	2
   312     0028                     main@i_253:
   313                           
   314                           ; 2 bytes @ 0x8
   315     0028                     	ds	2
   316     002A                     main@caracter:
   317                           
   318                           ; 1 bytes @ 0xA
   319     002A                     	ds	1
   320     002B                     main@caracter_246:
   321                           
   322                           ; 1 bytes @ 0xB
   323     002B                     	ds	1
   324     002C                     main@caracter_249:
   325                           
   326                           ; 1 bytes @ 0xC
   327     002C                     	ds	1
   328     002D                     main@caracter_252:
   329                           
   330                           ; 1 bytes @ 0xD
   331     002D                     	ds	1
   332                           
   333                           	psect	maintext
   334     074A                     __pmaintext:	
   335 ;;
   336 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   337 ;;
   338 ;; *************** function _main *****************
   339 ;; Defined at:
   340 ;;		line 19 in file "recepcionUART.c"
   341 ;; Parameters:    Size  Location     Type
   342 ;;		None
   343 ;; Auto vars:     Size  Location     Type
   344 ;;  i               2    8[BANK0 ] int 
   345 ;;  i               2    6[BANK0 ] int 
   346 ;;  i               2    4[BANK0 ] int 
   347 ;;  i               2    2[BANK0 ] int 
   348 ;;  caracter        1   13[BANK0 ] unsigned char 
   349 ;;  caracter        1   12[BANK0 ] unsigned char 
   350 ;;  caracter        1   11[BANK0 ] unsigned char 
   351 ;;  caracter        1   10[BANK0 ] unsigned char 
   352 ;; Return value:  Size  Location     Type
   353 ;;                  1    wreg      void 
   354 ;; Registers used:
   355 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   356 ;; Tracked objects:
   357 ;;		On entry : B00/0
   358 ;;		On exit  : 0/0
   359 ;;		Unchanged: 0/0
   360 ;; Data sizes:     COMMON   BANK0   BANK1
   361 ;;      Params:         0       0       0
   362 ;;      Locals:         0      12       0
   363 ;;      Temps:          0       2       0
   364 ;;      Totals:         0      14       0
   365 ;;Total ram usage:       14 bytes
   366 ;; Hardware stack levels required when called: 1
   367 ;; This function calls:
   368 ;;		_uart__read
   369 ;; This function is called by:
   370 ;;		Startup code after reset
   371 ;; This function uses a non-reentrant model
   372 ;;
   373                           
   374     074A                     _main:	
   375                           ;psect for function _main
   376                           
   377     074A                     l766:	
   378                           ;incstack = 0
   379                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   380                           
   381                           
   382                           ;recepcionUART.c: 21:     ADCON1bits.PCFG = 0;
   383     074A  30F0               	movlw	-16
   384     074B  1683               	bsf	3,5	;RP0=1, select bank1
   385     074C  1303               	bcf	3,6	;RP1=0, select bank1
   386     074D  059F               	andwf	31,f	;volatile
   387     074E                     l768:
   388                           
   389                           ;recepcionUART.c: 23:     TRISBbits.TRISB0 = 0;
   390     074E  1006               	bcf	6,0	;volatile
   391     074F                     l770:
   392                           
   393                           ;recepcionUART.c: 24:     TRISBbits.TRISB1 = 0;
   394     074F  1086               	bcf	6,1	;volatile
   395     0750                     l772:
   396                           
   397                           ;recepcionUART.c: 26:     PORTBbits.RB0 = 0;
   398     0750  1283               	bcf	3,5	;RP0=0, select bank0
   399     0751  1303               	bcf	3,6	;RP1=0, select bank0
   400     0752  1006               	bcf	6,0	;volatile
   401     0753                     l774:
   402                           
   403                           ;recepcionUART.c: 27:     PORTBbits.RB1 = 0;
   404     0753  1086               	bcf	6,1	;volatile
   405     0754                     l776:
   406                           
   407                           ;recepcionUART.c: 29:     SPBRG = 51; TXSTAbits.SYNC = 0; TXSTAbits.BRGH = 1; RCSTAbits.
      +                          SPEN = 1; TXSTAbits.TXEN = 1; RCSTAbits.CREN = 1;;
   408     0754  3033               	movlw	51
   409     0755  1683               	bsf	3,5	;RP0=1, select bank1
   410     0756  1303               	bcf	3,6	;RP1=0, select bank1
   411     0757  0099               	movwf	25	;volatile
   412     0758                     l778:
   413     0758  1218               	bcf	24,4	;volatile
   414     0759                     l780:
   415     0759  1518               	bsf	24,2	;volatile
   416     075A                     l782:
   417     075A  1283               	bcf	3,5	;RP0=0, select bank0
   418     075B  1303               	bcf	3,6	;RP1=0, select bank0
   419     075C  1798               	bsf	24,7	;volatile
   420     075D                     l784:
   421     075D  1683               	bsf	3,5	;RP0=1, select bank1
   422     075E  1303               	bcf	3,6	;RP1=0, select bank1
   423     075F  1698               	bsf	24,5	;volatile
   424     0760                     l786:
   425     0760  1283               	bcf	3,5	;RP0=0, select bank0
   426     0761  1303               	bcf	3,6	;RP1=0, select bank0
   427     0762  1618               	bsf	24,4	;volatile
   428     0763                     l788:
   429                           
   430                           ;recepcionUART.c: 33:         if((PIR1bits.RCIF ? 1 : 0)> 0){
   431     0763  1E8C               	btfss	12,5	;volatile
   432     0764  2F66               	goto	u141
   433     0765  2F67               	goto	u140
   434     0766                     u141:
   435     0766  2FE2               	goto	l818
   436     0767                     u140:
   437     0767                     l790:
   438                           
   439                           ;recepcionUART.c: 35:             datos = uart__read();
   440     0767  118A  273B  118A   	fcall	_uart__read
   441     076A  1283               	bcf	3,5	;RP0=0, select bank0
   442     076B  1303               	bcf	3,6	;RP1=0, select bank0
   443     076C  00AE               	movwf	_datos
   444     076D  2FE2               	goto	l818
   445     076E                     l37:	
   446                           ;recepcionUART.c: 41:             case 'a':
   447                           
   448                           
   449                           ;recepcionUART.c: 43:                 PORTBbits.RB0 = 1;
   450     076E  1406               	bsf	6,0	;volatile
   451     076F                     l792:
   452                           
   453                           ;recepcionUART.c: 44:                 { char caracter; for (int i = 0; (caracter = ("led
      +                          1: Encendido\r\n")[i]); ++i) { while (!TXIF); TXREG = caracter; } };
   454     076F  01A2               	clrf	main@i
   455     0770  01A3               	clrf	main@i+1
   456     0771  2F7E               	goto	l796
   457     0772                     l40:
   458     0772  1E0C               	btfss	12,4	;volatile
   459     0773  2F75               	goto	u151
   460     0774  2F76               	goto	u150
   461     0775                     u151:
   462     0775  2F72               	goto	l40
   463     0776                     u150:
   464     0776                     l794:
   465     0776  082A               	movf	main@caracter,w
   466     0777  0099               	movwf	25	;volatile
   467     0778  3001               	movlw	1
   468     0779  07A2               	addwf	main@i,f
   469     077A  1803               	skipnc
   470     077B  0AA3               	incf	main@i+1,f
   471     077C  3000               	movlw	0
   472     077D  07A3               	addwf	main@i+1,f
   473     077E                     l796:
   474     077E  0822               	movf	main@i,w
   475     077F  3E01               	addlw	low ((STR_1-__stringbase)| (0+32768))
   476     0780  0084               	movwf	4
   477     0781  118A  2002  118A   	fcall	stringdir
   478     0784  00AA               	movwf	main@caracter
   479     0785  082A               	movf	main@caracter,w
   480     0786  1D03               	btfss	3,2
   481     0787  2F89               	goto	u161
   482     0788  2F8A               	goto	u160
   483     0789                     u161:
   484     0789  2F72               	goto	l40
   485     078A                     u160:
   486     078A  2F63               	goto	l788
   487     078B                     l45:	
   488                           ;recepcionUART.c: 47:             case 'b':
   489                           
   490                           
   491                           ;recepcionUART.c: 49:                 PORTBbits.RB0 = 0;
   492     078B  1006               	bcf	6,0	;volatile
   493     078C                     l798:
   494                           
   495                           ;recepcionUART.c: 50:                 { char caracter; for (int i = 0; (caracter = ("led
      +                          1: Apagado\r\n")[i]); ++i) { while (!TXIF); TXREG = caracter; } };
   496     078C  01A4               	clrf	main@i_247
   497     078D  01A5               	clrf	main@i_247+1
   498     078E  2F9B               	goto	l802
   499     078F                     l48:
   500     078F  1E0C               	btfss	12,4	;volatile
   501     0790  2F92               	goto	u171
   502     0791  2F93               	goto	u170
   503     0792                     u171:
   504     0792  2F8F               	goto	l48
   505     0793                     u170:
   506     0793                     l800:
   507     0793  082B               	movf	main@caracter_246,w
   508     0794  0099               	movwf	25	;volatile
   509     0795  3001               	movlw	1
   510     0796  07A4               	addwf	main@i_247,f
   511     0797  1803               	skipnc
   512     0798  0AA5               	incf	main@i_247+1,f
   513     0799  3000               	movlw	0
   514     079A  07A5               	addwf	main@i_247+1,f
   515     079B                     l802:
   516     079B  0824               	movf	main@i_247,w
   517     079C  3E25               	addlw	low ((STR_3-__stringbase)| (0+32768))
   518     079D  0084               	movwf	4
   519     079E  118A  2002  118A   	fcall	stringdir
   520     07A1  00AB               	movwf	main@caracter_246
   521     07A2  082B               	movf	main@caracter_246,w
   522     07A3  1D03               	btfss	3,2
   523     07A4  2FA6               	goto	u181
   524     07A5  2FA7               	goto	u180
   525     07A6                     u181:
   526     07A6  2F8F               	goto	l48
   527     07A7                     u180:
   528     07A7  2F63               	goto	l788
   529     07A8                     l52:	
   530                           ;recepcionUART.c: 53:             case 'q':
   531                           
   532                           
   533                           ;recepcionUART.c: 55:                 PORTBbits.RB1 = 1;
   534     07A8  1486               	bsf	6,1	;volatile
   535     07A9                     l804:
   536                           
   537                           ;recepcionUART.c: 56:                 { char caracter; for (int i = 0; (caracter = ("led
      +                          2: Encendido\r\n")[i]); ++i) { while (!TXIF); TXREG = caracter; } };
   538     07A9  01A6               	clrf	main@i_250
   539     07AA  01A7               	clrf	main@i_250+1
   540     07AB  2FB8               	goto	l808
   541     07AC                     l55:
   542     07AC  1E0C               	btfss	12,4	;volatile
   543     07AD  2FAF               	goto	u191
   544     07AE  2FB0               	goto	u190
   545     07AF                     u191:
   546     07AF  2FAC               	goto	l55
   547     07B0                     u190:
   548     07B0                     l806:
   549     07B0  082C               	movf	main@caracter_249,w
   550     07B1  0099               	movwf	25	;volatile
   551     07B2  3001               	movlw	1
   552     07B3  07A6               	addwf	main@i_250,f
   553     07B4  1803               	skipnc
   554     07B5  0AA7               	incf	main@i_250+1,f
   555     07B6  3000               	movlw	0
   556     07B7  07A7               	addwf	main@i_250+1,f
   557     07B8                     l808:
   558     07B8  0826               	movf	main@i_250,w
   559     07B9  3E13               	addlw	low ((STR_5-__stringbase)| (0+32768))
   560     07BA  0084               	movwf	4
   561     07BB  118A  2002  118A   	fcall	stringdir
   562     07BE  00AC               	movwf	main@caracter_249
   563     07BF  082C               	movf	main@caracter_249,w
   564     07C0  1D03               	btfss	3,2
   565     07C1  2FC3               	goto	u201
   566     07C2  2FC4               	goto	u200
   567     07C3                     u201:
   568     07C3  2FAC               	goto	l55
   569     07C4                     u200:
   570     07C4  2F63               	goto	l788
   571     07C5                     l59:	
   572                           ;recepcionUART.c: 59:             case 'w':
   573                           
   574                           
   575                           ;recepcionUART.c: 61:                 PORTBbits.RB1 = 0;
   576     07C5  1086               	bcf	6,1	;volatile
   577     07C6                     l810:
   578                           
   579                           ;recepcionUART.c: 62:                 { char caracter; for (int i = 0; (caracter = ("led
      +                          2: Apagado\r\n")[i]); ++i) { while (!TXIF); TXREG = caracter; } };
   580     07C6  01A8               	clrf	main@i_253
   581     07C7  01A9               	clrf	main@i_253+1
   582     07C8  2FD5               	goto	l814
   583     07C9                     l62:
   584     07C9  1E0C               	btfss	12,4	;volatile
   585     07CA  2FCC               	goto	u211
   586     07CB  2FCD               	goto	u210
   587     07CC                     u211:
   588     07CC  2FC9               	goto	l62
   589     07CD                     u210:
   590     07CD                     l812:
   591     07CD  082D               	movf	main@caracter_252,w
   592     07CE  0099               	movwf	25	;volatile
   593     07CF  3001               	movlw	1
   594     07D0  07A8               	addwf	main@i_253,f
   595     07D1  1803               	skipnc
   596     07D2  0AA9               	incf	main@i_253+1,f
   597     07D3  3000               	movlw	0
   598     07D4  07A9               	addwf	main@i_253+1,f
   599     07D5                     l814:
   600     07D5  0828               	movf	main@i_253,w
   601     07D6  3E35               	addlw	low ((STR_7-__stringbase)| (0+32768))
   602     07D7  0084               	movwf	4
   603     07D8  118A  2002  118A   	fcall	stringdir
   604     07DB  00AD               	movwf	main@caracter_252
   605     07DC  082D               	movf	main@caracter_252,w
   606     07DD  1D03               	btfss	3,2
   607     07DE  2FE0               	goto	u221
   608     07DF  2FE1               	goto	u220
   609     07E0                     u221:
   610     07E0  2FC9               	goto	l62
   611     07E1                     u220:
   612     07E1  2F63               	goto	l788
   613     07E2                     l818:
   614     07E2  082E               	movf	_datos,w
   615     07E3  00A0               	movwf	??_main
   616     07E4  01A1               	clrf	??_main+1
   617                           
   618                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   619                           ; Switch size 1, requested type "simple"
   620                           ; Number of cases is 1, Range of values is 0 to 0
   621                           ; switch strategies available:
   622                           ; Name         Instructions Cycles
   623                           ; simple_byte            4     3 (average)
   624                           ; direct_byte            9     7 (fixed)
   625                           ; jumptable            260     6 (fixed)
   626                           ;	Chosen strategy is simple_byte
   627     07E5  0821               	movf	??_main+1,w
   628     07E6  3A00               	xorlw	0	; case 0
   629     07E7  1903               	skipnz
   630     07E8  2FEA               	goto	l856
   631     07E9  2F63               	goto	l788
   632     07EA                     l856:
   633                           
   634                           ; Switch size 1, requested type "simple"
   635                           ; Number of cases is 4, Range of values is 97 to 119
   636                           ; switch strategies available:
   637                           ; Name         Instructions Cycles
   638                           ; simple_byte           13     7 (average)
   639                           ; direct_byte           56    10 (fixed)
   640                           ; jumptable            263     9 (fixed)
   641                           ;	Chosen strategy is simple_byte
   642     07EA  0820               	movf	??_main,w
   643     07EB  3A61               	xorlw	97	; case 97
   644     07EC  1903               	skipnz
   645     07ED  2F6E               	goto	l37
   646     07EE  3A03               	xorlw	3	; case 98
   647     07EF  1903               	skipnz
   648     07F0  2F8B               	goto	l45
   649     07F1  3A13               	xorlw	19	; case 113
   650     07F2  1903               	skipnz
   651     07F3  2FA8               	goto	l52
   652     07F4  3A06               	xorlw	6	; case 119
   653     07F5  1903               	skipnz
   654     07F6  2FC5               	goto	l59
   655     07F7  2F63               	goto	l788
   656     07F8  118A  2800         	ljmp	start
   657     07FA                     __end_of_main:
   658                           
   659                           	psect	text1
   660     073B                     __ptext1:	
   661 ;; *************** function _uart__read *****************
   662 ;; Defined at:
   663 ;;		line 13 in file "./../../api/uart/read.c.v"
   664 ;; Parameters:    Size  Location     Type
   665 ;;		None
   666 ;; Auto vars:     Size  Location     Type
   667 ;;		None
   668 ;; Return value:  Size  Location     Type
   669 ;;                  1    wreg      unsigned char 
   670 ;; Registers used:
   671 ;;		wreg
   672 ;; Tracked objects:
   673 ;;		On entry : 0/0
   674 ;;		On exit  : 0/0
   675 ;;		Unchanged: 0/0
   676 ;; Data sizes:     COMMON   BANK0   BANK1
   677 ;;      Params:         0       0       0
   678 ;;      Locals:         0       0       0
   679 ;;      Temps:          0       0       0
   680 ;;      Totals:         0       0       0
   681 ;;Total ram usage:        0 bytes
   682 ;; Hardware stack levels used: 1
   683 ;; This function calls:
   684 ;;		Nothing
   685 ;; This function is called by:
   686 ;;		_main
   687 ;; This function uses a non-reentrant model
   688 ;;
   689                           
   690     073B                     _uart__read:	
   691                           ;psect for function _uart__read
   692                           
   693     073B                     l758:	
   694                           ;incstack = 0
   695                           ; Regs used in _uart__read: [wreg]
   696                           
   697     073B                     l23:	
   698                           ;./../../api/uart/read.c.v: 15:     while(PIR1bits.RCIF == 0);
   699                           
   700     073B  1283               	bcf	3,5	;RP0=0, select bank0
   701     073C  1303               	bcf	3,6	;RP1=0, select bank0
   702     073D  1E8C               	btfss	12,5	;volatile
   703     073E  2F40               	goto	u121
   704     073F  2F41               	goto	u120
   705     0740                     u121:
   706     0740  2F3B               	goto	l23
   707     0741                     u120:
   708     0741                     l25:
   709                           
   710                           ;./../../api/uart/read.c.v: 16:     if(RCSTAbits.OERR == 1)
   711     0741  1C98               	btfss	24,1	;volatile
   712     0742  2F44               	goto	u131
   713     0743  2F45               	goto	u130
   714     0744                     u131:
   715     0744  2F47               	goto	l26
   716     0745                     u130:
   717     0745                     l760:
   718                           
   719                           ;./../../api/uart/read.c.v: 17:     {;./../../api/uart/read.c.v: 18:         RCSTAbits.C
      +                          REN = 0;
   720     0745  1218               	bcf	24,4	;volatile
   721                           
   722                           ;./../../api/uart/read.c.v: 19:         RCSTAbits.CREN = 1;
   723     0746  1618               	bsf	24,4	;volatile
   724     0747                     l26:	
   725                           ;./../../api/uart/read.c.v: 20:     }
   726                           
   727                           
   728                           ;./../../api/uart/read.c.v: 21:     PIR1bits.RCIF = 0;
   729     0747  128C               	bcf	12,5	;volatile
   730     0748                     l762:
   731                           
   732                           ;./../../api/uart/read.c.v: 22:     return RCREG;
   733     0748  081A               	movf	26,w	;volatile
   734     0749                     l27:
   735     0749  0008               	return
   736     074A                     __end_of_uart__read:
   737     007E                     btemp	set	126	;btemp
   738     007E                     wtemp0	set	126
   739                           
   740                           	psect	config
   741                           
   742                           ;Config register CONFIG @ 0x2007
   743                           ;	Oscillator Selection bits
   744                           ;	FOSC = HS, HS oscillator
   745                           ;	Watchdog Timer Enable bit
   746                           ;	WDTE = OFF, WDT disabled
   747                           ;	Power-up Timer Enable bit
   748                           ;	PWRTE = OFF, PWRT disabled
   749                           ;	Brown-out Reset Enable bit
   750                           ;	BOREN = OFF, BOR disabled
   751                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   752                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   753                           ;	Data EEPROM Memory Code Protection bit
   754                           ;	CPD = OFF, Data EEPROM code protection off
   755                           ;	Flash Program Memory Write Enable bits
   756                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   757                           ;	In-Circuit Debugger Mode bit
   758                           ;	DEBUG = 0x1, unprogrammed default
   759                           ;	Flash Program Memory Code Protection bit
   760                           ;	CP = OFF, Code protection off
   761     2007                     	org	8199
   762     2007  3F3A               	dw	16186

Data Sizes:
    Strings     68
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            94     14      15
    BANK1            94      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0     188
                                              0 BANK0     14    14      0
                         _uart__read
 ---------------------------------------------------------------------------------
 (1) _uart__read                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _uart__read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            5E      0       0       3        0.0%
BANK0               5E      E       F       4       16.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BITBANK1            5E      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               5E      0       0       6        0.0%
ABS                  0      0       F       7        0.0%
DATA                 0      0       F       8        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Mar 04 07:38:47 2024

                      pc 0002                       l23 073B                       l40 0772  
                     l25 0741                       l26 0747                       l27 0749  
                     l52 07A8                       l45 078B                       l37 076E  
                     l62 07C9                       l55 07AC                       l48 078F  
                     l59 07C5                       fsr 0004                      l800 0793  
                    l810 07C6                      l802 079B                      l812 07CD  
                    l804 07A9                      l814 07D5                      l806 07B0  
                    l760 0745                      l808 07B8                      l762 0748  
                    l818 07E2                      l770 074F                      l780 0759  
                    l772 0750                      l758 073B                      l790 0767  
                    l782 075A                      l774 0753                      l766 074A  
                    l856 07EA                      l792 076F                      l784 075D  
                    l776 0754                      l768 074E                      l794 0776  
                    l786 0760                      l778 0758                      l796 077E  
                    l788 0763                      l798 078C                      u120 0741  
                    u200 07C4                      u121 0740                      u201 07C3  
                    u130 0745                      u210 07CD                      u131 0744  
                    u211 07CC                      u220 07E1                      u140 0767  
                    u221 07E0                      u141 0766                      u150 0776  
                    u151 0775                      u160 078A                      u161 0789  
                    u170 0793                      u171 0792                      u180 07A7  
                    u181 07A6                      u190 07B0                      u191 07AF  
                    fsr0 0004                     STR_1 0008                     STR_2 0008  
                   STR_3 002C                     STR_4 002C                     STR_5 001A  
                   STR_6 001A                     STR_7 003C                     STR_8 003C  
                   _TXIF 0064                     _main 074A                     btemp 007E  
                   start 0000             main@caracter 002A                    ?_main 0020  
                  _RCREG 001A                    _SPBRG 0099                    _TXREG 0019  
       main@caracter_252 002D         main@caracter_246 002B         main@caracter_249 002C  
                  _datos 002E                    main@i 0022                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07FA  
           __end_of_main 07FA                   ??_main 0020  __end_of__initialization 07FD  
         __pcstackCOMMON 0000               __pbssBANK0 002E               __pmaintext 074A  
             __stringtab 0002                  __ptext1 073B     end_of_initialization 07FD  
              _RCSTAbits 0018               _uart__read 073B                _PORTBbits 0006  
              _TRISBbits 0086                _TXSTAbits 0098      start_initialization 07FA  
            ?_uart__read 0020                ___latbits 0001            __pcstackBANK0 0020  
              __pstrings 0002                 _PIR1bits 000C              __stringbase 0007  
             _ADCON1bits 009F                main@i_250 0026                main@i_253 0028  
              main@i_247 0024       __end_of__stringtab 0008             ??_uart__read 0000  
     __end_of_uart__read 074A                stringcode 0002                 stringdir 0002  
               stringtab 0002  
