

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Feb 11 10:51:15 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F873A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 22/03/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F873A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0000                     	;# 
    49     0001                     	;# 
    50     0002                     	;# 
    51     0003                     	;# 
    52     0004                     	;# 
    53     0005                     	;# 
    54     0006                     	;# 
    55     0007                     	;# 
    56     000A                     	;# 
    57     000B                     	;# 
    58     000C                     	;# 
    59     000D                     	;# 
    60     000E                     	;# 
    61     000E                     	;# 
    62     000F                     	;# 
    63     0010                     	;# 
    64     0011                     	;# 
    65     0012                     	;# 
    66     0013                     	;# 
    67     0014                     	;# 
    68     0015                     	;# 
    69     0015                     	;# 
    70     0016                     	;# 
    71     0017                     	;# 
    72     0018                     	;# 
    73     0019                     	;# 
    74     001A                     	;# 
    75     001B                     	;# 
    76     001B                     	;# 
    77     001C                     	;# 
    78     001D                     	;# 
    79     001E                     	;# 
    80     001F                     	;# 
    81     0081                     	;# 
    82     0085                     	;# 
    83     0086                     	;# 
    84     0087                     	;# 
    85     008C                     	;# 
    86     008D                     	;# 
    87     008E                     	;# 
    88     0091                     	;# 
    89     0092                     	;# 
    90     0093                     	;# 
    91     0094                     	;# 
    92     0098                     	;# 
    93     0099                     	;# 
    94     009C                     	;# 
    95     009D                     	;# 
    96     009E                     	;# 
    97     009F                     	;# 
    98     010C                     	;# 
    99     010D                     	;# 
   100     010E                     	;# 
   101     010F                     	;# 
   102     018C                     	;# 
   103     018D                     	;# 
   104     0000                     	;# 
   105     0001                     	;# 
   106     0002                     	;# 
   107     0003                     	;# 
   108     0004                     	;# 
   109     0005                     	;# 
   110     0006                     	;# 
   111     0007                     	;# 
   112     000A                     	;# 
   113     000B                     	;# 
   114     000C                     	;# 
   115     000D                     	;# 
   116     000E                     	;# 
   117     000E                     	;# 
   118     000F                     	;# 
   119     0010                     	;# 
   120     0011                     	;# 
   121     0012                     	;# 
   122     0013                     	;# 
   123     0014                     	;# 
   124     0015                     	;# 
   125     0015                     	;# 
   126     0016                     	;# 
   127     0017                     	;# 
   128     0018                     	;# 
   129     0019                     	;# 
   130     001A                     	;# 
   131     001B                     	;# 
   132     001B                     	;# 
   133     001C                     	;# 
   134     001D                     	;# 
   135     001E                     	;# 
   136     001F                     	;# 
   137     0081                     	;# 
   138     0085                     	;# 
   139     0086                     	;# 
   140     0087                     	;# 
   141     008C                     	;# 
   142     008D                     	;# 
   143     008E                     	;# 
   144     0091                     	;# 
   145     0092                     	;# 
   146     0093                     	;# 
   147     0094                     	;# 
   148     0098                     	;# 
   149     0099                     	;# 
   150     009C                     	;# 
   151     009D                     	;# 
   152     009E                     	;# 
   153     009F                     	;# 
   154     010C                     	;# 
   155     010D                     	;# 
   156     010E                     	;# 
   157     010F                     	;# 
   158     018C                     	;# 
   159     018D                     	;# 
   160     0019                     _TXREG	set	25
   161     0006                     _PORTBbits	set	6
   162     001A                     _RCREG	set	26
   163     0018                     _RCSTAbits	set	24
   164     000C                     _PIR1bits	set	12
   165     0064                     _TXIF	set	100
   166     0098                     _TXSTAbits	set	152
   167     0099                     _SPBRG	set	153
   168     0086                     _TRISBbits	set	134
   169     009F                     _ADCON1bits	set	159
   170                           
   171                           	psect	strings
   172     0002                     __pstrings:
   173     0002                     stringtab:
   174     0002                     __stringtab:
   175     0002                     stringcode:	
   176                           ;	String table - string pointers are 1 byte each
   177                           
   178     0002                     stringdir:
   179     0002  3000               	movlw	high stringdir
   180     0003  008A               	movwf	10
   181     0004  0804               	movf	4,w
   182     0005  0A84               	incf	4,f
   183     0006  0782               	addwf	2,f
   184     0007                     __stringbase:
   185     0007  3400               	retlw	0
   186     0008                     __end_of__stringtab:
   187     0008                     STR_1:
   188     0008  346C               	retlw	108	;'l'
   189     0009  3465               	retlw	101	;'e'
   190     000A  3464               	retlw	100	;'d'
   191     000B  3431               	retlw	49	;'1'
   192     000C  343A               	retlw	58	;':'
   193     000D  3420               	retlw	32	;' '
   194     000E  3445               	retlw	69	;'E'
   195     000F  346E               	retlw	110	;'n'
   196     0010  3463               	retlw	99	;'c'
   197     0011  3465               	retlw	101	;'e'
   198     0012  346E               	retlw	110	;'n'
   199     0013  3464               	retlw	100	;'d'
   200     0014  3469               	retlw	105	;'i'
   201     0015  3464               	retlw	100	;'d'
   202     0016  346F               	retlw	111	;'o'
   203     0017  340D               	retlw	13
   204     0018  340A               	retlw	10
   205     0019  3400               	retlw	0
   206     001A                     STR_3:
   207     001A  346C               	retlw	108	;'l'
   208     001B  3465               	retlw	101	;'e'
   209     001C  3464               	retlw	100	;'d'
   210     001D  3431               	retlw	49	;'1'
   211     001E  343A               	retlw	58	;':'
   212     001F  3420               	retlw	32	;' '
   213     0020  3441               	retlw	65	;'A'
   214     0021  3470               	retlw	112	;'p'
   215     0022  3461               	retlw	97	;'a'
   216     0023  3467               	retlw	103	;'g'
   217     0024  3461               	retlw	97	;'a'
   218     0025  3464               	retlw	100	;'d'
   219     0026  346F               	retlw	111	;'o'
   220     0027  340D               	retlw	13
   221     0028  340A               	retlw	10
   222     0029  3400               	retlw	0
   223     001A                     
   224                           	psect	cinit
   225     07FA                     start_initialization:	
   226                           ; #config settings
   227                           
   228     07FA                     __initialization:
   229                           
   230                           ; Clear objects allocated to BANK0
   231     07FA  1283               	bcf	3,5	;RP0=0, select bank0
   232     07FB  1303               	bcf	3,6	;RP1=0, select bank0
   233     07FC  01AE               	clrf	__pbssBANK0& (0+127)
   234     07FD                     end_of_initialization:	
   235                           ;End of C runtime variable initialization code
   236                           
   237     07FD                     __end_of__initialization:
   238     07FD  0183               	clrf	3
   239     07FE  118A  2F4A         	ljmp	_main	;jump to C main() function
   240                           
   241                           	psect	bssBANK0
   242     002E                     __pbssBANK0:
   243     002E                     _datos:
   244     002E                     	ds	1
   245                           
   246                           	psect	cstackCOMMON
   247     0000                     __pcstackCOMMON:
   248     0000                     ??_uart_read:
   249                           
   250                           	psect	cstackBANK0
   251     0020                     __pcstackBANK0:	
   252                           ; 1 bytes @ 0x0
   253                           
   254     0020                     ?_uart_read:
   255     0020                     ?_main:	
   256                           ; 1 bytes @ 0x0
   257                           
   258     0020                     ??_main:	
   259                           ; 1 bytes @ 0x0
   260                           
   261                           
   262                           ; 1 bytes @ 0x0
   263     0020                     	ds	2
   264     0022                     main@i:
   265                           
   266                           ; 2 bytes @ 0x2
   267     0022                     	ds	2
   268     0024                     main@i_247:
   269                           
   270                           ; 2 bytes @ 0x4
   271     0024                     	ds	2
   272     0026                     main@i_250:
   273                           
   274                           ; 2 bytes @ 0x6
   275     0026                     	ds	2
   276     0028                     main@i_253:
   277                           
   278                           ; 2 bytes @ 0x8
   279     0028                     	ds	2
   280     002A                     main@caracter:
   281                           
   282                           ; 1 bytes @ 0xA
   283     002A                     	ds	1
   284     002B                     main@caracter_246:
   285                           
   286                           ; 1 bytes @ 0xB
   287     002B                     	ds	1
   288     002C                     main@caracter_249:
   289                           
   290                           ; 1 bytes @ 0xC
   291     002C                     	ds	1
   292     002D                     main@caracter_252:
   293                           
   294                           ; 1 bytes @ 0xD
   295     002D                     	ds	1
   296                           
   297                           	psect	maintext
   298     074A                     __pmaintext:	
   299 ;;
   300 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   301 ;;
   302 ;; *************** function _main *****************
   303 ;; Defined at:
   304 ;;		line 29 in file "recepcionUART.c"
   305 ;; Parameters:    Size  Location     Type
   306 ;;		None
   307 ;; Auto vars:     Size  Location     Type
   308 ;;  i               2    8[BANK0 ] int 
   309 ;;  i               2    6[BANK0 ] int 
   310 ;;  i               2    4[BANK0 ] int 
   311 ;;  i               2    2[BANK0 ] int 
   312 ;;  caracter        1   13[BANK0 ] unsigned char 
   313 ;;  caracter        1   12[BANK0 ] unsigned char 
   314 ;;  caracter        1   11[BANK0 ] unsigned char 
   315 ;;  caracter        1   10[BANK0 ] unsigned char 
   316 ;; Return value:  Size  Location     Type
   317 ;;                  1    wreg      void 
   318 ;; Registers used:
   319 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   320 ;; Tracked objects:
   321 ;;		On entry : B00/0
   322 ;;		On exit  : 0/0
   323 ;;		Unchanged: 0/0
   324 ;; Data sizes:     COMMON   BANK0   BANK1
   325 ;;      Params:         0       0       0
   326 ;;      Locals:         0      12       0
   327 ;;      Temps:          0       2       0
   328 ;;      Totals:         0      14       0
   329 ;;Total ram usage:       14 bytes
   330 ;; Hardware stack levels required when called: 1
   331 ;; This function calls:
   332 ;;		_uart_read
   333 ;; This function is called by:
   334 ;;		Startup code after reset
   335 ;; This function uses a non-reentrant model
   336 ;;
   337                           
   338     074A                     _main:	
   339                           ;psect for function _main
   340                           
   341     074A                     l766:	
   342                           ;incstack = 0
   343                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   344                           
   345                           
   346                           ;recepcionUART.c: 31:     ADCON1bits.PCFG = 0;
   347     074A  30F0               	movlw	-16
   348     074B  1683               	bsf	3,5	;RP0=1, select bank1
   349     074C  1303               	bcf	3,6	;RP1=0, select bank1
   350     074D  059F               	andwf	31,f	;volatile
   351     074E                     l768:
   352                           
   353                           ;recepcionUART.c: 33:     TRISBbits.TRISB0 = 0;
   354     074E  1006               	bcf	6,0	;volatile
   355     074F                     l770:
   356                           
   357                           ;recepcionUART.c: 34:     TRISBbits.TRISB1 = 0;
   358     074F  1086               	bcf	6,1	;volatile
   359     0750                     l772:
   360                           
   361                           ;recepcionUART.c: 36:     PORTBbits.RB0 = 0;
   362     0750  1283               	bcf	3,5	;RP0=0, select bank0
   363     0751  1303               	bcf	3,6	;RP1=0, select bank0
   364     0752  1006               	bcf	6,0	;volatile
   365     0753                     l774:
   366                           
   367                           ;recepcionUART.c: 37:     PORTBbits.RB1 = 0;
   368     0753  1086               	bcf	6,1	;volatile
   369     0754                     l776:
   370                           
   371                           ;recepcionUART.c: 39:     SPBRG = 51; TXSTAbits.SYNC = 0; TXSTAbits.BRGH = 1; RCSTAbits.
      +                          SPEN = 1; TXSTAbits.TXEN = 1; RCSTAbits.CREN = 1;;
   372     0754  3033               	movlw	51
   373     0755  1683               	bsf	3,5	;RP0=1, select bank1
   374     0756  1303               	bcf	3,6	;RP1=0, select bank1
   375     0757  0099               	movwf	25	;volatile
   376     0758                     l778:
   377     0758  1218               	bcf	24,4	;volatile
   378     0759                     l780:
   379     0759  1518               	bsf	24,2	;volatile
   380     075A                     l782:
   381     075A  1283               	bcf	3,5	;RP0=0, select bank0
   382     075B  1303               	bcf	3,6	;RP1=0, select bank0
   383     075C  1798               	bsf	24,7	;volatile
   384     075D                     l784:
   385     075D  1683               	bsf	3,5	;RP0=1, select bank1
   386     075E  1303               	bcf	3,6	;RP1=0, select bank1
   387     075F  1698               	bsf	24,5	;volatile
   388     0760                     l786:
   389     0760  1283               	bcf	3,5	;RP0=0, select bank0
   390     0761  1303               	bcf	3,6	;RP1=0, select bank0
   391     0762  1618               	bsf	24,4	;volatile
   392     0763                     l788:
   393                           
   394                           ;recepcionUART.c: 43:         if((PIR1bits.RCIF ? 1 : 0)> 0){
   395     0763  1E8C               	btfss	12,5	;volatile
   396     0764  2F66               	goto	u141
   397     0765  2F67               	goto	u140
   398     0766                     u141:
   399     0766  2FE2               	goto	l818
   400     0767                     u140:
   401     0767                     l790:
   402                           
   403                           ;recepcionUART.c: 45:             datos = uart_read();
   404     0767  118A  273B  118A   	fcall	_uart_read
   405     076A  1283               	bcf	3,5	;RP0=0, select bank0
   406     076B  1303               	bcf	3,6	;RP1=0, select bank0
   407     076C  00AE               	movwf	_datos
   408     076D  2FE2               	goto	l818
   409     076E                     l37:	
   410                           ;recepcionUART.c: 51:             case 'a':
   411                           
   412                           
   413                           ;recepcionUART.c: 53:                 PORTBbits.RB0 = 1;
   414     076E  1406               	bsf	6,0	;volatile
   415     076F                     l792:
   416                           
   417                           ;recepcionUART.c: 54:                 { char caracter; for (int i = 0; (caracter = ("led
      +                          1: Encendido\r\n")[i]); ++i) { while (!TXIF); TXREG = caracter; } };
   418     076F  01A2               	clrf	main@i
   419     0770  01A3               	clrf	main@i+1
   420     0771  2F7E               	goto	l796
   421     0772                     l40:
   422     0772  1E0C               	btfss	12,4	;volatile
   423     0773  2F75               	goto	u151
   424     0774  2F76               	goto	u150
   425     0775                     u151:
   426     0775  2F72               	goto	l40
   427     0776                     u150:
   428     0776                     l794:
   429     0776  082A               	movf	main@caracter,w
   430     0777  0099               	movwf	25	;volatile
   431     0778  3001               	movlw	1
   432     0779  07A2               	addwf	main@i,f
   433     077A  1803               	skipnc
   434     077B  0AA3               	incf	main@i+1,f
   435     077C  3000               	movlw	0
   436     077D  07A3               	addwf	main@i+1,f
   437     077E                     l796:
   438     077E  0822               	movf	main@i,w
   439     077F  3E01               	addlw	low ((STR_1-__stringbase)| (0+32768))
   440     0780  0084               	movwf	4
   441     0781  118A  2002  118A   	fcall	stringdir
   442     0784  00AA               	movwf	main@caracter
   443     0785  082A               	movf	main@caracter,w
   444     0786  1D03               	btfss	3,2
   445     0787  2F89               	goto	u161
   446     0788  2F8A               	goto	u160
   447     0789                     u161:
   448     0789  2F72               	goto	l40
   449     078A                     u160:
   450     078A  2F63               	goto	l788
   451     078B                     l45:	
   452                           ;recepcionUART.c: 57:             case 'b':
   453                           
   454                           
   455                           ;recepcionUART.c: 59:                 PORTBbits.RB0 = 0;
   456     078B  1006               	bcf	6,0	;volatile
   457     078C                     l798:
   458                           
   459                           ;recepcionUART.c: 60:                 { char caracter; for (int i = 0; (caracter = ("led
      +                          1: Apagado\r\n")[i]); ++i) { while (!TXIF); TXREG = caracter; } };
   460     078C  01A4               	clrf	main@i_247
   461     078D  01A5               	clrf	main@i_247+1
   462     078E  2F9B               	goto	l802
   463     078F                     l48:
   464     078F  1E0C               	btfss	12,4	;volatile
   465     0790  2F92               	goto	u171
   466     0791  2F93               	goto	u170
   467     0792                     u171:
   468     0792  2F8F               	goto	l48
   469     0793                     u170:
   470     0793                     l800:
   471     0793  082B               	movf	main@caracter_246,w
   472     0794  0099               	movwf	25	;volatile
   473     0795  3001               	movlw	1
   474     0796  07A4               	addwf	main@i_247,f
   475     0797  1803               	skipnc
   476     0798  0AA5               	incf	main@i_247+1,f
   477     0799  3000               	movlw	0
   478     079A  07A5               	addwf	main@i_247+1,f
   479     079B                     l802:
   480     079B  0824               	movf	main@i_247,w
   481     079C  3E13               	addlw	low ((STR_3-__stringbase)| (0+32768))
   482     079D  0084               	movwf	4
   483     079E  118A  2002  118A   	fcall	stringdir
   484     07A1  00AB               	movwf	main@caracter_246
   485     07A2  082B               	movf	main@caracter_246,w
   486     07A3  1D03               	btfss	3,2
   487     07A4  2FA6               	goto	u181
   488     07A5  2FA7               	goto	u180
   489     07A6                     u181:
   490     07A6  2F8F               	goto	l48
   491     07A7                     u180:
   492     07A7  2F63               	goto	l788
   493     07A8                     l52:	
   494                           ;recepcionUART.c: 63:             case 'q':
   495                           
   496                           
   497                           ;recepcionUART.c: 65:                 PORTBbits.RB1 = 1;
   498     07A8  1486               	bsf	6,1	;volatile
   499     07A9                     l804:
   500                           
   501                           ;recepcionUART.c: 66:                 { char caracter; for (int i = 0; (caracter = ("led
      +                          1: Encendido\r\n")[i]); ++i) { while (!TXIF); TXREG = caracter; } };
   502     07A9  01A6               	clrf	main@i_250
   503     07AA  01A7               	clrf	main@i_250+1
   504     07AB  2FB8               	goto	l808
   505     07AC                     l55:
   506     07AC  1E0C               	btfss	12,4	;volatile
   507     07AD  2FAF               	goto	u191
   508     07AE  2FB0               	goto	u190
   509     07AF                     u191:
   510     07AF  2FAC               	goto	l55
   511     07B0                     u190:
   512     07B0                     l806:
   513     07B0  082C               	movf	main@caracter_249,w
   514     07B1  0099               	movwf	25	;volatile
   515     07B2  3001               	movlw	1
   516     07B3  07A6               	addwf	main@i_250,f
   517     07B4  1803               	skipnc
   518     07B5  0AA7               	incf	main@i_250+1,f
   519     07B6  3000               	movlw	0
   520     07B7  07A7               	addwf	main@i_250+1,f
   521     07B8                     l808:
   522     07B8  0826               	movf	main@i_250,w
   523     07B9  3E01               	addlw	low ((STR_1-__stringbase)| (0+32768))
   524     07BA  0084               	movwf	4
   525     07BB  118A  2002  118A   	fcall	stringdir
   526     07BE  00AC               	movwf	main@caracter_249
   527     07BF  082C               	movf	main@caracter_249,w
   528     07C0  1D03               	btfss	3,2
   529     07C1  2FC3               	goto	u201
   530     07C2  2FC4               	goto	u200
   531     07C3                     u201:
   532     07C3  2FAC               	goto	l55
   533     07C4                     u200:
   534     07C4  2F63               	goto	l788
   535     07C5                     l59:	
   536                           ;recepcionUART.c: 69:             case 'w':
   537                           
   538                           
   539                           ;recepcionUART.c: 71:                 PORTBbits.RB1 = 0;
   540     07C5  1086               	bcf	6,1	;volatile
   541     07C6                     l810:
   542                           
   543                           ;recepcionUART.c: 72:                 { char caracter; for (int i = 0; (caracter = ("led
      +                          1: Apagado\r\n")[i]); ++i) { while (!TXIF); TXREG = caracter; } };
   544     07C6  01A8               	clrf	main@i_253
   545     07C7  01A9               	clrf	main@i_253+1
   546     07C8  2FD5               	goto	l814
   547     07C9                     l62:
   548     07C9  1E0C               	btfss	12,4	;volatile
   549     07CA  2FCC               	goto	u211
   550     07CB  2FCD               	goto	u210
   551     07CC                     u211:
   552     07CC  2FC9               	goto	l62
   553     07CD                     u210:
   554     07CD                     l812:
   555     07CD  082D               	movf	main@caracter_252,w
   556     07CE  0099               	movwf	25	;volatile
   557     07CF  3001               	movlw	1
   558     07D0  07A8               	addwf	main@i_253,f
   559     07D1  1803               	skipnc
   560     07D2  0AA9               	incf	main@i_253+1,f
   561     07D3  3000               	movlw	0
   562     07D4  07A9               	addwf	main@i_253+1,f
   563     07D5                     l814:
   564     07D5  0828               	movf	main@i_253,w
   565     07D6  3E13               	addlw	low ((STR_3-__stringbase)| (0+32768))
   566     07D7  0084               	movwf	4
   567     07D8  118A  2002  118A   	fcall	stringdir
   568     07DB  00AD               	movwf	main@caracter_252
   569     07DC  082D               	movf	main@caracter_252,w
   570     07DD  1D03               	btfss	3,2
   571     07DE  2FE0               	goto	u221
   572     07DF  2FE1               	goto	u220
   573     07E0                     u221:
   574     07E0  2FC9               	goto	l62
   575     07E1                     u220:
   576     07E1  2F63               	goto	l788
   577     07E2                     l818:
   578     07E2  082E               	movf	_datos,w
   579     07E3  00A0               	movwf	??_main
   580     07E4  01A1               	clrf	??_main+1
   581                           
   582                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   583                           ; Switch size 1, requested type "simple"
   584                           ; Number of cases is 1, Range of values is 0 to 0
   585                           ; switch strategies available:
   586                           ; Name         Instructions Cycles
   587                           ; simple_byte            4     3 (average)
   588                           ; direct_byte            9     7 (fixed)
   589                           ; jumptable            260     6 (fixed)
   590                           ;	Chosen strategy is simple_byte
   591     07E5  0821               	movf	??_main+1,w
   592     07E6  3A00               	xorlw	0	; case 0
   593     07E7  1903               	skipnz
   594     07E8  2FEA               	goto	l856
   595     07E9  2F63               	goto	l788
   596     07EA                     l856:
   597                           
   598                           ; Switch size 1, requested type "simple"
   599                           ; Number of cases is 4, Range of values is 97 to 119
   600                           ; switch strategies available:
   601                           ; Name         Instructions Cycles
   602                           ; simple_byte           13     7 (average)
   603                           ; direct_byte           56    10 (fixed)
   604                           ; jumptable            263     9 (fixed)
   605                           ;	Chosen strategy is simple_byte
   606     07EA  0820               	movf	??_main,w
   607     07EB  3A61               	xorlw	97	; case 97
   608     07EC  1903               	skipnz
   609     07ED  2F6E               	goto	l37
   610     07EE  3A03               	xorlw	3	; case 98
   611     07EF  1903               	skipnz
   612     07F0  2F8B               	goto	l45
   613     07F1  3A13               	xorlw	19	; case 113
   614     07F2  1903               	skipnz
   615     07F3  2FA8               	goto	l52
   616     07F4  3A06               	xorlw	6	; case 119
   617     07F5  1903               	skipnz
   618     07F6  2FC5               	goto	l59
   619     07F7  2F63               	goto	l788
   620     07F8  118A  2800         	ljmp	start
   621     07FA                     __end_of_main:
   622                           
   623                           	psect	text1
   624     073B                     __ptext1:	
   625 ;; *************** function _uart_read *****************
   626 ;; Defined at:
   627 ;;		line 33 in file "./../../api/machine/uart.c"
   628 ;; Parameters:    Size  Location     Type
   629 ;;		None
   630 ;; Auto vars:     Size  Location     Type
   631 ;;		None
   632 ;; Return value:  Size  Location     Type
   633 ;;                  1    wreg      unsigned char 
   634 ;; Registers used:
   635 ;;		wreg
   636 ;; Tracked objects:
   637 ;;		On entry : 0/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMMON   BANK0   BANK1
   641 ;;      Params:         0       0       0
   642 ;;      Locals:         0       0       0
   643 ;;      Temps:          0       0       0
   644 ;;      Totals:         0       0       0
   645 ;;Total ram usage:        0 bytes
   646 ;; Hardware stack levels used: 1
   647 ;; This function calls:
   648 ;;		Nothing
   649 ;; This function is called by:
   650 ;;		_main
   651 ;; This function uses a non-reentrant model
   652 ;;
   653                           
   654     073B                     _uart_read:	
   655                           ;psect for function _uart_read
   656                           
   657     073B                     l758:	
   658                           ;incstack = 0
   659                           ; Regs used in _uart_read: [wreg]
   660                           
   661     073B                     l23:	
   662                           ;./../../api/machine/uart.c: 35:     while(PIR1bits.RCIF == 0);
   663                           
   664     073B  1283               	bcf	3,5	;RP0=0, select bank0
   665     073C  1303               	bcf	3,6	;RP1=0, select bank0
   666     073D  1E8C               	btfss	12,5	;volatile
   667     073E  2F40               	goto	u121
   668     073F  2F41               	goto	u120
   669     0740                     u121:
   670     0740  2F3B               	goto	l23
   671     0741                     u120:
   672     0741                     l25:
   673                           
   674                           ;./../../api/machine/uart.c: 36:     if(RCSTAbits.OERR == 1)
   675     0741  1C98               	btfss	24,1	;volatile
   676     0742  2F44               	goto	u131
   677     0743  2F45               	goto	u130
   678     0744                     u131:
   679     0744  2F47               	goto	l26
   680     0745                     u130:
   681     0745                     l760:
   682                           
   683                           ;./../../api/machine/uart.c: 37:     {;./../../api/machine/uart.c: 38:         RCSTAbits
      +                          .CREN = 0;
   684     0745  1218               	bcf	24,4	;volatile
   685                           
   686                           ;./../../api/machine/uart.c: 39:         RCSTAbits.CREN = 1;
   687     0746  1618               	bsf	24,4	;volatile
   688     0747                     l26:	
   689                           ;./../../api/machine/uart.c: 40:     }
   690                           
   691                           
   692                           ;./../../api/machine/uart.c: 41:     PIR1bits.RCIF = 0;
   693     0747  128C               	bcf	12,5	;volatile
   694     0748                     l762:
   695                           
   696                           ;./../../api/machine/uart.c: 42:     return RCREG;
   697     0748  081A               	movf	26,w	;volatile
   698     0749                     l27:
   699     0749  0008               	return
   700     074A                     __end_of_uart_read:
   701     007E                     btemp	set	126	;btemp
   702     007E                     wtemp0	set	126
   703                           
   704                           	psect	config
   705                           
   706                           ;Config register CONFIG @ 0x2007
   707                           ;	Oscillator Selection bits
   708                           ;	FOSC = HS, HS oscillator
   709                           ;	Watchdog Timer Enable bit
   710                           ;	WDTE = OFF, WDT disabled
   711                           ;	Power-up Timer Enable bit
   712                           ;	PWRTE = OFF, PWRT disabled
   713                           ;	Brown-out Reset Enable bit
   714                           ;	BOREN = OFF, BOR disabled
   715                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   716                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   717                           ;	Data EEPROM Memory Code Protection bit
   718                           ;	CPD = OFF, Data EEPROM code protection off
   719                           ;	Flash Program Memory Write Enable bits
   720                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   721                           ;	In-Circuit Debugger Mode bit
   722                           ;	DEBUG = 0x1, unprogrammed default
   723                           ;	Flash Program Memory Code Protection bit
   724                           ;	CP = OFF, Code protection off
   725     2007                     	org	8199
   726     2007  3F3A               	dw	16186

Data Sizes:
    Strings     34
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            94     14      15
    BANK1            94      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0     188
                                              0 BANK0     14    14      0
                          _uart_read
 ---------------------------------------------------------------------------------
 (1) _uart_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _uart_read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            5E      0       0       3        0.0%
BANK0               5E      E       F       4       16.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BITBANK1            5E      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               5E      0       0       6        0.0%
ABS                  0      0       F       7        0.0%
DATA                 0      0       F       8        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Feb 11 10:51:15 2024

                      pc 0002                       l23 073B                       l40 0772  
                     l25 0741                       l26 0747                       l27 0749  
                     l52 07A8                       l45 078B                       l37 076E  
                     l62 07C9                       l55 07AC                       l48 078F  
                     l59 07C5                       fsr 0004                      l800 0793  
                    l810 07C6                      l802 079B                      l812 07CD  
                    l804 07A9                      l814 07D5                      l806 07B0  
                    l760 0745                      l808 07B8                      l762 0748  
                    l818 07E2                      l770 074F                      l780 0759  
                    l772 0750                      l758 073B                      l790 0767  
                    l782 075A                      l774 0753                      l766 074A  
                    l856 07EA                      l792 076F                      l784 075D  
                    l776 0754                      l768 074E                      l794 0776  
                    l786 0760                      l778 0758                      l796 077E  
                    l788 0763                      l798 078C                      u120 0741  
                    u200 07C4                      u121 0740                      u201 07C3  
                    u130 0745                      u210 07CD                      u131 0744  
                    u211 07CC                      u220 07E1                      u140 0767  
                    u221 07E0                      u141 0766                      u150 0776  
                    u151 0775                      u160 078A                      u161 0789  
                    u170 0793                      u171 0792                      u180 07A7  
                    u181 07A6                      u190 07B0                      u191 07AF  
                    fsr0 0004                     STR_1 0008                     STR_2 0008  
                   STR_3 001A                     STR_4 001A                     STR_6 0008  
                   STR_8 001A                     _TXIF 0064                     _main 074A  
                   btemp 007E                     start 0000             main@caracter 002A  
                  ?_main 0020                    _RCREG 001A                    _SPBRG 0099  
                  _TXREG 0019         main@caracter_252 002D         main@caracter_246 002B  
       main@caracter_249 002C                    _datos 002E                    main@i 0022  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07FA             __end_of_main 07FA                   ??_main 0020  
__end_of__initialization 07FD           __pcstackCOMMON 0000               __pbssBANK0 002E  
             __pmaintext 074A               __stringtab 0002                  __ptext1 073B  
   end_of_initialization 07FD        __end_of_uart_read 074A                _RCSTAbits 0018  
              _PORTBbits 0006                _TRISBbits 0086                _TXSTAbits 0098  
    start_initialization 07FA                ___latbits 0001            __pcstackBANK0 0020  
              __pstrings 0002                 _PIR1bits 000C                _uart_read 073B  
            __stringbase 0007               _ADCON1bits 009F                main@i_250 0026  
              main@i_253 0028                main@i_247 0024               ?_uart_read 0020  
     __end_of__stringtab 0008                stringcode 0002              ??_uart_read 0000  
               stringdir 0002                 stringtab 0002  
