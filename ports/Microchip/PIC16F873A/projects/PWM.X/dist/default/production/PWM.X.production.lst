

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Fri Mar 01 01:24:05 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F873A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 22/03/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F873A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0000                     	;# 
    49     0001                     	;# 
    50     0002                     	;# 
    51     0003                     	;# 
    52     0004                     	;# 
    53     0005                     	;# 
    54     0006                     	;# 
    55     0007                     	;# 
    56     000A                     	;# 
    57     000B                     	;# 
    58     000C                     	;# 
    59     000D                     	;# 
    60     000E                     	;# 
    61     000E                     	;# 
    62     000F                     	;# 
    63     0010                     	;# 
    64     0011                     	;# 
    65     0012                     	;# 
    66     0013                     	;# 
    67     0014                     	;# 
    68     0015                     	;# 
    69     0015                     	;# 
    70     0016                     	;# 
    71     0017                     	;# 
    72     0018                     	;# 
    73     0019                     	;# 
    74     001A                     	;# 
    75     001B                     	;# 
    76     001B                     	;# 
    77     001C                     	;# 
    78     001D                     	;# 
    79     001E                     	;# 
    80     001F                     	;# 
    81     0081                     	;# 
    82     0085                     	;# 
    83     0086                     	;# 
    84     0087                     	;# 
    85     008C                     	;# 
    86     008D                     	;# 
    87     008E                     	;# 
    88     0091                     	;# 
    89     0092                     	;# 
    90     0093                     	;# 
    91     0094                     	;# 
    92     0098                     	;# 
    93     0099                     	;# 
    94     009C                     	;# 
    95     009D                     	;# 
    96     009E                     	;# 
    97     009F                     	;# 
    98     010C                     	;# 
    99     010D                     	;# 
   100     010E                     	;# 
   101     010F                     	;# 
   102     018C                     	;# 
   103     018D                     	;# 
   104     0000                     	;# 
   105     0001                     	;# 
   106     0002                     	;# 
   107     0003                     	;# 
   108     0004                     	;# 
   109     0005                     	;# 
   110     0006                     	;# 
   111     0007                     	;# 
   112     000A                     	;# 
   113     000B                     	;# 
   114     000C                     	;# 
   115     000D                     	;# 
   116     000E                     	;# 
   117     000E                     	;# 
   118     000F                     	;# 
   119     0010                     	;# 
   120     0011                     	;# 
   121     0012                     	;# 
   122     0013                     	;# 
   123     0014                     	;# 
   124     0015                     	;# 
   125     0015                     	;# 
   126     0016                     	;# 
   127     0017                     	;# 
   128     0018                     	;# 
   129     0019                     	;# 
   130     001A                     	;# 
   131     001B                     	;# 
   132     001B                     	;# 
   133     001C                     	;# 
   134     001D                     	;# 
   135     001E                     	;# 
   136     001F                     	;# 
   137     0081                     	;# 
   138     0085                     	;# 
   139     0086                     	;# 
   140     0087                     	;# 
   141     008C                     	;# 
   142     008D                     	;# 
   143     008E                     	;# 
   144     0091                     	;# 
   145     0092                     	;# 
   146     0093                     	;# 
   147     0094                     	;# 
   148     0098                     	;# 
   149     0099                     	;# 
   150     009C                     	;# 
   151     009D                     	;# 
   152     009E                     	;# 
   153     009F                     	;# 
   154     010C                     	;# 
   155     010D                     	;# 
   156     010E                     	;# 
   157     010F                     	;# 
   158     018C                     	;# 
   159     018D                     	;# 
   160     0012                     _T2CONbits	set	18
   161     0011                     _TMR2	set	17
   162     001D                     _CCP2CON	set	29
   163     0012                     _T2CON	set	18
   164     001B                     _CCPR2L	set	27
   165     001F                     _ADCON0	set	31
   166     001E                     _ADRESH	set	30
   167     001F                     _ADCON0bits	set	31
   168     0087                     _TRISCbits	set	135
   169     0092                     _PR2	set	146
   170     009F                     _ADCON1	set	159
   171     009E                     _ADRESL	set	158
   172                           
   173                           	psect	cinit
   174     07F9                     start_initialization:	
   175                           ; #config settings
   176                           
   177     07F9                     __initialization:
   178                           
   179                           ; Clear objects allocated to BANK0
   180     07F9  1283               	bcf	3,5	;RP0=0, select bank0
   181     07FA  1303               	bcf	3,6	;RP1=0, select bank0
   182     07FB  01AA               	clrf	__pbssBANK0& (0+127)
   183     07FC  01AB               	clrf	(__pbssBANK0+1)& (0+127)
   184     07FD                     end_of_initialization:	
   185                           ;End of C runtime variable initialization code
   186                           
   187     07FD                     __end_of__initialization:
   188     07FD  0183               	clrf	3
   189     07FE  118A  2FA7         	ljmp	_main	;jump to C main() function
   190                           
   191                           	psect	bssBANK0
   192     002A                     __pbssBANK0:
   193     002A                     _adc:
   194     002A                     	ds	2
   195                           
   196                           	psect	cstackCOMMON
   197     0000                     __pcstackCOMMON:
   198     0000                     ??_adc__reading:
   199     0000                     ??___wmul:	
   200                           ; 1 bytes @ 0x0
   201                           
   202                           
   203                           	psect	cstackBANK0
   204     0020                     __pcstackBANK0:	
   205                           ; 1 bytes @ 0x0
   206                           
   207     0020                     ?_main:
   208     0020                     ?_adc__reading:	
   209                           ; 1 bytes @ 0x0
   210                           
   211     0020                     ?___wmul:	
   212                           ; 2 bytes @ 0x0
   213                           
   214     0020                     ___wmul@multiplier:	
   215                           ; 2 bytes @ 0x0
   216                           
   217                           
   218                           ; 2 bytes @ 0x0
   219     0020                     	ds	2
   220     0022                     ___wmul@multiplicand:
   221                           
   222                           ; 2 bytes @ 0x2
   223     0022                     	ds	2
   224     0024                     ___wmul@product:
   225                           
   226                           ; 2 bytes @ 0x4
   227     0024                     	ds	2
   228     0026                     ??_main:
   229                           
   230                           ; 1 bytes @ 0x6
   231     0026                     	ds	2
   232     0028                     main@pwm:
   233                           
   234                           ; 2 bytes @ 0x8
   235     0028                     	ds	2
   236                           
   237                           	psect	maintext
   238     07A7                     __pmaintext:	
   239 ;;
   240 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   241 ;;
   242 ;; *************** function _main *****************
   243 ;; Defined at:
   244 ;;		line 17 in file "pwm.c"
   245 ;; Parameters:    Size  Location     Type
   246 ;;		None
   247 ;; Auto vars:     Size  Location     Type
   248 ;;  pwm             2    8[BANK0 ] unsigned int 
   249 ;; Return value:  Size  Location     Type
   250 ;;                  1    wreg      void 
   251 ;; Registers used:
   252 ;;		wreg, status,2, status,0, pclath, cstack
   253 ;; Tracked objects:
   254 ;;		On entry : B00/0
   255 ;;		On exit  : 0/0
   256 ;;		Unchanged: 0/0
   257 ;; Data sizes:     COMMON   BANK0   BANK1
   258 ;;      Params:         0       0       0
   259 ;;      Locals:         0       2       0
   260 ;;      Temps:          0       2       0
   261 ;;      Totals:         0       4       0
   262 ;;Total ram usage:        4 bytes
   263 ;; Hardware stack levels required when called: 1
   264 ;; This function calls:
   265 ;;		___wmul
   266 ;;		_adc__reading
   267 ;; This function is called by:
   268 ;;		Startup code after reset
   269 ;; This function uses a non-reentrant model
   270 ;;
   271                           
   272     07A7                     _main:	
   273                           ;psect for function _main
   274                           
   275     07A7                     l696:	
   276                           ;incstack = 0
   277                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   278                           
   279                           
   280                           ;pwm.c: 19:     ADCON1 = 0b10000000; ADCON0 = 0b11001000; ADCON0bits.ADON = 1;
   281     07A7  3080               	movlw	128
   282     07A8  1683               	bsf	3,5	;RP0=1, select bank1
   283     07A9  1303               	bcf	3,6	;RP1=0, select bank1
   284     07AA  009F               	movwf	31	;volatile
   285     07AB  30C8               	movlw	200
   286     07AC  1283               	bcf	3,5	;RP0=0, select bank0
   287     07AD  1303               	bcf	3,6	;RP1=0, select bank0
   288     07AE  009F               	movwf	31	;volatile
   289     07AF                     l698:
   290     07AF  141F               	bsf	31,0	;volatile
   291                           
   292                           ;pwm.c: 20:     PR2 = 0x3E; CCPR2L = 0; TRISCbits.TRISC1 = 0; T2CON = 0b00000011; CCP2CO
      +                          N = 0b00001100; TMR2 = 0; T2CONbits.TMR2ON = 1;;
   293     07B0  303E               	movlw	62
   294     07B1  1683               	bsf	3,5	;RP0=1, select bank1
   295     07B2  1303               	bcf	3,6	;RP1=0, select bank1
   296     07B3  0092               	movwf	18	;volatile
   297     07B4                     l700:
   298     07B4  1283               	bcf	3,5	;RP0=0, select bank0
   299     07B5  1303               	bcf	3,6	;RP1=0, select bank0
   300     07B6  019B               	clrf	27	;volatile
   301     07B7                     l702:
   302     07B7  1683               	bsf	3,5	;RP0=1, select bank1
   303     07B8  1303               	bcf	3,6	;RP1=0, select bank1
   304     07B9  1087               	bcf	7,1	;volatile
   305     07BA                     l704:
   306     07BA  3003               	movlw	3
   307     07BB  1283               	bcf	3,5	;RP0=0, select bank0
   308     07BC  1303               	bcf	3,6	;RP1=0, select bank0
   309     07BD  0092               	movwf	18	;volatile
   310     07BE                     l706:
   311     07BE  300C               	movlw	12
   312     07BF  009D               	movwf	29	;volatile
   313     07C0                     l708:
   314     07C0  0191               	clrf	17	;volatile
   315     07C1                     l710:
   316     07C1  1512               	bsf	18,2	;volatile
   317     07C2                     l712:
   318                           
   319                           ;pwm.c: 24:         ADCON0bits.CHS = 2; adc__reading();
   320     07C2  081F               	movf	31,w	;volatile
   321     07C3  39C7               	andlw	-57
   322     07C4  3810               	iorlw	16
   323     07C5  009F               	movwf	31	;volatile
   324     07C6                     l714:
   325     07C6  118A  2770  118A   	fcall	_adc__reading
   326                           
   327                           ;pwm.c: 25:         adc = adc__reading();
   328     07C9  118A  2770  118A   	fcall	_adc__reading
   329     07CC  1283               	bcf	3,5	;RP0=0, select bank0
   330     07CD  1303               	bcf	3,6	;RP1=0, select bank0
   331     07CE  0821               	movf	?_adc__reading+1,w
   332     07CF  00AB               	movwf	_adc+1
   333     07D0  0820               	movf	?_adc__reading,w
   334     07D1  00AA               	movwf	_adc
   335     07D2                     l716:
   336                           
   337                           ;pwm.c: 27:         { unsigned int pwm; pwm = ((adc - 0) * (60 - 0) / (256 - 0) + 0); CC
      +                          PR2L = (pwm >> 2); };
   338     07D2  082B               	movf	_adc+1,w
   339     07D3  00A1               	movwf	___wmul@multiplier+1
   340     07D4  082A               	movf	_adc,w
   341     07D5  00A0               	movwf	___wmul@multiplier
   342     07D6  303C               	movlw	60
   343     07D7  00A2               	movwf	___wmul@multiplicand
   344     07D8  3000               	movlw	0
   345     07D9  00A3               	movwf	___wmul@multiplicand+1
   346     07DA  118A  2780  118A   	fcall	___wmul
   347     07DD  1283               	bcf	3,5	;RP0=0, select bank0
   348     07DE  1303               	bcf	3,6	;RP1=0, select bank0
   349     07DF  0820               	movf	?___wmul,w
   350     07E0  00A6               	movwf	??_main
   351     07E1  0821               	movf	?___wmul+1,w
   352     07E2  00A7               	movwf	??_main+1
   353     07E3  0827               	movf	??_main+1,w
   354     07E4  00A6               	movwf	??_main
   355     07E5  01A7               	clrf	??_main+1
   356     07E6  0826               	movf	??_main,w
   357     07E7  00A8               	movwf	main@pwm
   358     07E8  0827               	movf	??_main+1,w
   359     07E9  00A9               	movwf	main@pwm+1
   360     07EA                     l718:
   361     07EA  0829               	movf	main@pwm+1,w
   362     07EB  00A7               	movwf	??_main+1
   363     07EC  0828               	movf	main@pwm,w
   364     07ED  00A6               	movwf	??_main
   365     07EE  1003               	clrc
   366     07EF  0CA7               	rrf	??_main+1,f
   367     07F0  0CA6               	rrf	??_main,f
   368     07F1  1003               	clrc
   369     07F2  0CA7               	rrf	??_main+1,f
   370     07F3  0CA6               	rrf	??_main,f
   371     07F4  0826               	movf	??_main,w
   372     07F5  009B               	movwf	27	;volatile
   373     07F6  2FC2               	goto	l712
   374     07F7  118A  2800         	ljmp	start
   375     07F9                     __end_of_main:
   376                           
   377                           	psect	text1
   378     0770                     __ptext1:	
   379 ;; *************** function _adc__reading *****************
   380 ;; Defined at:
   381 ;;		line 12 in file "./../../api/adc/reading.c.v"
   382 ;; Parameters:    Size  Location     Type
   383 ;;		None
   384 ;; Auto vars:     Size  Location     Type
   385 ;;		None
   386 ;; Return value:  Size  Location     Type
   387 ;;                  2    0[BANK0 ] unsigned int 
   388 ;; Registers used:
   389 ;;		wreg
   390 ;; Tracked objects:
   391 ;;		On entry : 0/0
   392 ;;		On exit  : 0/0
   393 ;;		Unchanged: 0/0
   394 ;; Data sizes:     COMMON   BANK0   BANK1
   395 ;;      Params:         0       2       0
   396 ;;      Locals:         0       0       0
   397 ;;      Temps:          0       0       0
   398 ;;      Totals:         0       2       0
   399 ;;Total ram usage:        2 bytes
   400 ;; Hardware stack levels used: 1
   401 ;; This function calls:
   402 ;;		Nothing
   403 ;; This function is called by:
   404 ;;		_main
   405 ;; This function uses a non-reentrant model
   406 ;;
   407                           
   408     0770                     _adc__reading:	
   409                           ;psect for function _adc__reading
   410                           
   411     0770                     l676:	
   412                           ;incstack = 0
   413                           ; Regs used in _adc__reading: [wreg]
   414                           
   415                           
   416                           ;./../../api/adc/reading.c.v: 13:     ADCON0bits.GO_DONE = 1;
   417     0770  1283               	bcf	3,5	;RP0=0, select bank0
   418     0771  1303               	bcf	3,6	;RP1=0, select bank0
   419     0772  151F               	bsf	31,2	;volatile
   420     0773                     l27:	
   421                           ;./../../api/adc/reading.c.v: 14:     while (ADCON0bits.GO_DONE == 1);
   422                           
   423     0773  191F               	btfsc	31,2	;volatile
   424     0774  2F76               	goto	u61
   425     0775  2F77               	goto	u60
   426     0776                     u61:
   427     0776  2F73               	goto	l27
   428     0777                     u60:
   429     0777                     l678:
   430                           
   431                           ;./../../api/adc/reading.c.v: 15:     return (ADRESH << 8) | ADRESL;
   432     0777  081E               	movf	30,w	;volatile
   433     0778  00A1               	movwf	?_adc__reading+1
   434     0779  1683               	bsf	3,5	;RP0=1, select bank1
   435     077A  1303               	bcf	3,6	;RP1=0, select bank1
   436     077B  081E               	movf	30,w	;volatile
   437     077C  1283               	bcf	3,5	;RP0=0, select bank0
   438     077D  1303               	bcf	3,6	;RP1=0, select bank0
   439     077E  00A0               	movwf	?_adc__reading
   440     077F                     l30:
   441     077F  0008               	return
   442     0780                     __end_of_adc__reading:
   443                           
   444                           	psect	text2
   445     0780                     __ptext2:	
   446 ;; *************** function ___wmul *****************
   447 ;; Defined at:
   448 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
   449 ;; Parameters:    Size  Location     Type
   450 ;;  multiplier      2    0[BANK0 ] unsigned int 
   451 ;;  multiplicand    2    2[BANK0 ] unsigned int 
   452 ;; Auto vars:     Size  Location     Type
   453 ;;  product         2    4[BANK0 ] unsigned int 
   454 ;; Return value:  Size  Location     Type
   455 ;;                  2    0[BANK0 ] unsigned int 
   456 ;; Registers used:
   457 ;;		wreg, status,2, status,0
   458 ;; Tracked objects:
   459 ;;		On entry : 0/0
   460 ;;		On exit  : 0/0
   461 ;;		Unchanged: 0/0
   462 ;; Data sizes:     COMMON   BANK0   BANK1
   463 ;;      Params:         0       4       0
   464 ;;      Locals:         0       2       0
   465 ;;      Temps:          0       0       0
   466 ;;      Totals:         0       6       0
   467 ;;Total ram usage:        6 bytes
   468 ;; Hardware stack levels used: 1
   469 ;; This function calls:
   470 ;;		Nothing
   471 ;; This function is called by:
   472 ;;		_main
   473 ;; This function uses a non-reentrant model
   474 ;;
   475                           
   476     0780                     ___wmul:	
   477                           ;psect for function ___wmul
   478                           
   479     0780                     l682:	
   480                           ;incstack = 0
   481                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   482                           
   483     0780  1283               	bcf	3,5	;RP0=0, select bank0
   484     0781  1303               	bcf	3,6	;RP1=0, select bank0
   485     0782  01A4               	clrf	___wmul@product
   486     0783  01A5               	clrf	___wmul@product+1
   487     0784                     l684:
   488     0784  1C20               	btfss	___wmul@multiplier,0
   489     0785  2F87               	goto	u71
   490     0786  2F88               	goto	u70
   491     0787                     u71:
   492     0787  2F8E               	goto	l126
   493     0788                     u70:
   494     0788                     l686:
   495     0788  0822               	movf	___wmul@multiplicand,w
   496     0789  07A4               	addwf	___wmul@product,f
   497     078A  1803               	skipnc
   498     078B  0AA5               	incf	___wmul@product+1,f
   499     078C  0823               	movf	___wmul@multiplicand+1,w
   500     078D  07A5               	addwf	___wmul@product+1,f
   501     078E                     l126:
   502     078E  3001               	movlw	1
   503     078F                     u85:
   504     078F  1003               	clrc
   505     0790  0DA2               	rlf	___wmul@multiplicand,f
   506     0791  0DA3               	rlf	___wmul@multiplicand+1,f
   507     0792  3EFF               	addlw	-1
   508     0793  1D03               	skipz
   509     0794  2F8F               	goto	u85
   510     0795                     l688:
   511     0795  3001               	movlw	1
   512     0796                     u95:
   513     0796  1003               	clrc
   514     0797  0CA1               	rrf	___wmul@multiplier+1,f
   515     0798  0CA0               	rrf	___wmul@multiplier,f
   516     0799  3EFF               	addlw	-1
   517     079A  1D03               	skipz
   518     079B  2F96               	goto	u95
   519     079C                     l690:
   520     079C  0820               	movf	___wmul@multiplier,w
   521     079D  0421               	iorwf	___wmul@multiplier+1,w
   522     079E  1D03               	btfss	3,2
   523     079F  2FA1               	goto	u101
   524     07A0  2FA2               	goto	u100
   525     07A1                     u101:
   526     07A1  2F84               	goto	l684
   527     07A2                     u100:
   528     07A2                     l692:
   529     07A2  0825               	movf	___wmul@product+1,w
   530     07A3  00A1               	movwf	?___wmul+1
   531     07A4  0824               	movf	___wmul@product,w
   532     07A5  00A0               	movwf	?___wmul
   533     07A6                     l128:
   534     07A6  0008               	return
   535     07A7                     __end_of___wmul:
   536     007E                     btemp	set	126	;btemp
   537     007E                     wtemp0	set	126
   538                           
   539                           	psect	config
   540                           
   541                           ;Config register CONFIG @ 0x2007
   542                           ;	Oscillator Selection bits
   543                           ;	FOSC = HS, HS oscillator
   544                           ;	Watchdog Timer Enable bit
   545                           ;	WDTE = OFF, WDT disabled
   546                           ;	Power-up Timer Enable bit
   547                           ;	PWRTE = OFF, PWRT disabled
   548                           ;	Brown-out Reset Enable bit
   549                           ;	BOREN = OFF, BOR disabled
   550                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   551                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   552                           ;	Data EEPROM Memory Code Protection bit
   553                           ;	CPD = OFF, Data EEPROM code protection off
   554                           ;	Flash Program Memory Write Enable bits
   555                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   556                           ;	In-Circuit Debugger Mode bit
   557                           ;	DEBUG = 0x1, unprogrammed default
   558                           ;	Flash Program Memory Code Protection bit
   559                           ;	CP = OFF, Code protection off
   560     2007                     	org	8199
   561     2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            94     10      12
    BANK1            94      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___wmul

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     267
                                              6 BANK0      4     4      0
                             ___wmul
                       _adc__reading
 ---------------------------------------------------------------------------------
 (1) _adc__reading                                         2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     244
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___wmul
   _adc__reading

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            5E      0       0       3        0.0%
BANK0               5E      A       C       4       12.8%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BITBANK1            5E      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               5E      0       0       6        0.0%
ABS                  0      0       C       7        0.0%
DATA                 0      0       C       8        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Fri Mar 01 01:24:05 2024

                     l30 077F                       l27 0773                       u60 0777  
                     u61 0776                       u70 0788                       u71 0787  
                     u85 078F                       u95 0796      ___wmul@multiplicand 0022  
                    l126 078E                      l128 07A6                      l700 07B4  
                    l710 07C1                      l702 07B7                      l712 07C2  
                    l704 07BA                      l714 07C6                      l706 07BE  
                    l716 07D2                      l708 07C0                      l718 07EA  
                    l690 079C                      l682 0780                      l692 07A2  
                    l684 0784                      l676 0770                      l686 0788  
                    l678 0777                      l688 0795                      l696 07A7  
                    l698 07AF                      u100 07A2                      u101 07A1  
                    _PR2 0092                      _adc 002A                     _TMR2 0011  
                   _main 07A7                     btemp 007E                     start 0000  
           _adc__reading 0770                    ?_main 0020                    _T2CON 0012  
                  status 0003                    wtemp0 007E          __initialization 07F9  
           __end_of_main 07F9                   ??_main 0026                   _ADCON0 001F  
                 _ADCON1 009F                   _ADRESH 001E                   _ADRESL 009E  
                 _CCPR2L 001B                   ___wmul 0780  __end_of__initialization 07FD  
         __pcstackCOMMON 0000               __pbssBANK0 002A               __pmaintext 07A7  
                ?___wmul 0020                  _CCP2CON 001D                  __ptext1 0770  
                __ptext2 0780                _T2CONbits 0012                  main@pwm 0028  
   end_of_initialization 07FD                _TRISCbits 0087           __end_of___wmul 07A7  
    start_initialization 07F9                 ??___wmul 0000            ?_adc__reading 0020  
              ___latbits 0001            __pcstackBANK0 0020           ??_adc__reading 0000  
         ___wmul@product 0024               _ADCON0bits 001F        ___wmul@multiplier 0020  
   __end_of_adc__reading 0780  
