

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Jan 06 22:04:12 2024

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    15   000000                     
    16                           ; Version 2.40
    17                           ; Generated 17/11/2021 GMT
    18                           ; 
    19                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F452 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51   000000                     _T2CONbits	set	4042
    52   000000                     _ADCON0bits	set	4034
    53   000000                     _TRISCbits	set	3988
    54   000000                     _CCPR1L	set	4030
    55   000000                     _ADCON1	set	4033
    56   000000                     _ADRES	set	4035
    57   000000                     _T2CON	set	4042
    58   000000                     _PR2	set	4043
    59   000000                     _ADCON0	set	4034
    60   000000                     _TMR2	set	4044
    61   000000                     _CCP1CON	set	4029
    62                           
    63                           ; #config settings
    64                           
    65                           	psect	cinit
    66   003D1A                     __pcinit:
    67                           	callstack 0
    68   003D1A                     start_initialization:
    69                           	callstack 0
    70   003D1A                     __initialization:
    71                           	callstack 0
    72   003D1A                     end_of_initialization:
    73                           	callstack 0
    74   003D1A                     __end_of__initialization:
    75                           	callstack 0
    76   003D1A  0100               	movlb	0
    77   003D1C  EF0C  F01F         	goto	_main	;jump to C main() function
    78                           
    79                           	psect	cstackCOMRAM
    80   000001                     __pcstackCOMRAM:
    81                           	callstack 0
    82   000001                     ?___lmul:
    83                           	callstack 0
    84   000001                     ___lmul@multiplier:
    85                           	callstack 0
    86                           
    87                           ; 4 bytes @ 0x0
    88   000001                     	ds	4
    89   000005                     ___lmul@multiplicand:
    90                           	callstack 0
    91                           
    92                           ; 4 bytes @ 0x4
    93   000005                     	ds	4
    94   000009                     ___lmul@product:
    95                           	callstack 0
    96                           
    97                           ; 4 bytes @ 0x8
    98   000009                     	ds	4
    99   00000D                     ?___aldiv:
   100                           	callstack 0
   101   00000D                     ___aldiv@dividend:
   102                           	callstack 0
   103                           
   104                           ; 4 bytes @ 0xC
   105   00000D                     	ds	4
   106   000011                     ___aldiv@divisor:
   107                           	callstack 0
   108                           
   109                           ; 4 bytes @ 0x10
   110   000011                     	ds	4
   111   000015                     ___aldiv@counter:
   112                           	callstack 0
   113                           
   114                           ; 1 bytes @ 0x14
   115   000015                     	ds	1
   116   000016                     ___aldiv@sign:
   117                           	callstack 0
   118                           
   119                           ; 1 bytes @ 0x15
   120   000016                     	ds	1
   121   000017                     ___aldiv@quotient:
   122                           	callstack 0
   123                           
   124                           ; 4 bytes @ 0x16
   125   000017                     	ds	4
   126   00001B                     ?_map:
   127                           	callstack 0
   128   00001B                     map@x:
   129                           	callstack 0
   130                           
   131                           ; 4 bytes @ 0x1A
   132   00001B                     	ds	4
   133   00001F                     map@eMin:
   134                           	callstack 0
   135                           
   136                           ; 4 bytes @ 0x1E
   137   00001F                     	ds	4
   138   000023                     map@eMax:
   139                           	callstack 0
   140                           
   141                           ; 4 bytes @ 0x22
   142   000023                     	ds	4
   143   000027                     map@sMin:
   144                           	callstack 0
   145                           
   146                           ; 4 bytes @ 0x26
   147   000027                     	ds	4
   148   00002B                     map@sMax:
   149                           	callstack 0
   150                           
   151                           ; 4 bytes @ 0x2A
   152   00002B                     	ds	4
   153   00002F                     main@valor_adc:
   154                           	callstack 0
   155                           
   156                           ; 2 bytes @ 0x2E
   157   00002F                     	ds	2
   158   000031                     main@valor_pwm:
   159                           	callstack 0
   160                           
   161                           ; 1 bytes @ 0x30
   162   000031                     	ds	1
   163                           
   164 ;;
   165 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   166 ;;
   167 ;; *************** function _main *****************
   168 ;; Defined at:
   169 ;;		line 63 in file "PWM_452.c"
   170 ;; Parameters:    Size  Location     Type
   171 ;;		None
   172 ;; Auto vars:     Size  Location     Type
   173 ;;  valor_adc       2   46[COMRAM] int 
   174 ;;  valor_pwm       1   48[COMRAM] unsigned char 
   175 ;; Return value:  Size  Location     Type
   176 ;;                  1    wreg      void 
   177 ;; Registers used:
   178 ;;		wreg, status,2, status,0, cstack
   179 ;; Tracked objects:
   180 ;;		On entry : 0/0
   181 ;;		On exit  : 0/0
   182 ;;		Unchanged: 0/0
   183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   184 ;;      Params:         0       0       0       0       0       0       0
   185 ;;      Locals:         3       0       0       0       0       0       0
   186 ;;      Temps:          0       0       0       0       0       0       0
   187 ;;      Totals:         3       0       0       0       0       0       0
   188 ;;Total ram usage:        3 bytes
   189 ;; Hardware stack levels required when called: 2
   190 ;; This function calls:
   191 ;;		_map
   192 ;; This function is called by:
   193 ;;		Startup code after reset
   194 ;; This function uses a non-reentrant model
   195 ;;
   196                           
   197                           	psect	text0
   198   003E18                     __ptext0:
   199                           	callstack 0
   200   003E18                     _main:
   201                           	callstack 29
   202   003E18  FFFF               	dw	65535	; assembler added errata NOP
   203                           
   204                           ;PWM_452.c: 65:     ADCON1 = 0x8E;
   205   003E1A  0E8E               	movlw	142
   206   003E1C  6EC1               	movwf	193,c	;volatile
   207                           
   208                           ;PWM_452.c: 66:     ADCON0 = 0xc0;
   209   003E1E  0EC0               	movlw	192
   210   003E20  6EC2               	movwf	194,c	;volatile
   211   003E22                     
   212                           ;PWM_452.c: 68:     ADCON0bits.ADON = 1;
   213   003E22  80C2               	bsf	194,0,c	;volatile
   214                           
   215                           ;PWM_452.c: 70:     PR2 = 0xC;
   216   003E24  0E0C               	movlw	12
   217   003E26  6ECB               	movwf	203,c	;volatile
   218                           
   219                           ;PWM_452.c: 71:     CCPR1L = 0;
   220   003E28  0E00               	movlw	0
   221   003E2A  6EBE               	movwf	190,c	;volatile
   222   003E2C                     
   223                           ;PWM_452.c: 72:     TRISCbits.TRISC2 = 0;
   224   003E2C  9494               	bcf	148,2,c	;volatile
   225                           
   226                           ;PWM_452.c: 73:     T2CON = 0x03;
   227   003E2E  0E03               	movlw	3
   228   003E30  6ECA               	movwf	202,c	;volatile
   229                           
   230                           ;PWM_452.c: 74:     CCP1CON = 0x0C;
   231   003E32  0E0C               	movlw	12
   232   003E34  6EBD               	movwf	189,c	;volatile
   233                           
   234                           ;PWM_452.c: 75:     TMR2 = 0;
   235   003E36  0E00               	movlw	0
   236   003E38  6ECC               	movwf	204,c	;volatile
   237   003E3A                     
   238                           ;PWM_452.c: 76:     T2CONbits.TMR2ON = 1;
   239   003E3A  84CA               	bsf	202,2,c	;volatile
   240   003E3C                     l850:
   241   003E3C  FFFF               	dw	65535	; assembler added errata NOP
   242                           
   243                           ;PWM_452.c: 79:     {;PWM_452.c: 80:         ADCON0bits.GO_DONE = 1;
   244   003E3E  84C2               	bsf	194,2,c	;volatile
   245   003E40                     l31:
   246   003E40  FFFF               	dw	65535	; assembler added errata NOP
   247   003E42  B4C2               	btfsc	194,2,c	;volatile
   248   003E44  EF26  F01F         	goto	u181
   249   003E48  EF29  F01F         	goto	u180
   250   003E4C                     u181:
   251   003E4C  FFFF               	dw	65535	; assembler added errata NOP
   252   003E4E  EF20  F01F         	goto	l31
   253   003E52                     u180:
   254   003E52  FFFF               	dw	65535	; assembler added errata NOP
   255   003E54                     
   256                           ;PWM_452.c: 82:         int valor_adc = ADRES;
   257   003E54  CFC3 F02F          	movff	4035,main@valor_adc	;volatile
   258   003E58  CFC4 F030          	movff	4036,main@valor_adc+1	;volatile
   259   003E5C                     
   260                           ;PWM_452.c: 83:         unsigned char valor_pwm = map(valor_adc, 0, 1023, 0, 50);
   261   003E5C  C02F  F01B         	movff	main@valor_adc,map@x
   262   003E60  C030  F01C         	movff	main@valor_adc+1,map@x+1
   263   003E64  0E00               	movlw	0
   264   003E66  BE1C               	btfsc	(map@x+1)^0,7,c
   265   003E68  0EFF               	movlw	-1
   266   003E6A  6E1D               	movwf	(map@x+2)^0,c
   267   003E6C  6E1E               	movwf	(map@x+3)^0,c
   268   003E6E  0E00               	movlw	0
   269   003E70  6E1F               	movwf	map@eMin^0,c
   270   003E72  0E00               	movlw	0
   271   003E74  6E20               	movwf	(map@eMin+1)^0,c
   272   003E76  0E00               	movlw	0
   273   003E78  6E21               	movwf	(map@eMin+2)^0,c
   274   003E7A  0E00               	movlw	0
   275   003E7C  6E22               	movwf	(map@eMin+3)^0,c
   276   003E7E  0EFF               	movlw	255
   277   003E80  6E23               	movwf	map@eMax^0,c
   278   003E82  0E03               	movlw	3
   279   003E84  6E24               	movwf	(map@eMax+1)^0,c
   280   003E86  0E00               	movlw	0
   281   003E88  6E25               	movwf	(map@eMax+2)^0,c
   282   003E8A  0E00               	movlw	0
   283   003E8C  6E26               	movwf	(map@eMax+3)^0,c
   284   003E8E  0E00               	movlw	0
   285   003E90  6E27               	movwf	map@sMin^0,c
   286   003E92  0E00               	movlw	0
   287   003E94  6E28               	movwf	(map@sMin+1)^0,c
   288   003E96  0E00               	movlw	0
   289   003E98  6E29               	movwf	(map@sMin+2)^0,c
   290   003E9A  0E00               	movlw	0
   291   003E9C  6E2A               	movwf	(map@sMin+3)^0,c
   292   003E9E  0E32               	movlw	50
   293   003EA0  6E2B               	movwf	map@sMax^0,c
   294   003EA2  0E00               	movlw	0
   295   003EA4  6E2C               	movwf	(map@sMax+1)^0,c
   296   003EA6  0E00               	movlw	0
   297   003EA8  6E2D               	movwf	(map@sMax+2)^0,c
   298   003EAA  0E00               	movlw	0
   299   003EAC  6E2E               	movwf	(map@sMax+3)^0,c
   300   003EAE  ECCD  F01E         	call	_map	;wreg free
   301   003EB2  501B               	movf	?_map^0,w,c
   302   003EB4  6E31               	movwf	main@valor_pwm^0,c
   303   003EB6                     
   304                           ;PWM_452.c: 84:         CCPR1L = (valor_pwm >> 2);
   305   003EB6  4031               	rrncf	main@valor_pwm^0,w,c
   306   003EB8  42E8               	rrncf	wreg,f,c
   307   003EBA  0B3F               	andlw	63
   308   003EBC  6EBE               	movwf	190,c	;volatile
   309   003EBE  EF1E  F01F         	goto	l850
   310   003EC2  EF01  F000         	goto	start
   311   003EC6                     __end_of_main:
   312                           	callstack 0
   313                           
   314 ;; *************** function _map *****************
   315 ;; Defined at:
   316 ;;		line 3 in file "./map_function.h"
   317 ;; Parameters:    Size  Location     Type
   318 ;;  x               4   26[COMRAM] long 
   319 ;;  eMin            4   30[COMRAM] long 
   320 ;;  eMax            4   34[COMRAM] long 
   321 ;;  sMin            4   38[COMRAM] long 
   322 ;;  sMax            4   42[COMRAM] long 
   323 ;; Auto vars:     Size  Location     Type
   324 ;;		None
   325 ;; Return value:  Size  Location     Type
   326 ;;                  4   26[COMRAM] long 
   327 ;; Registers used:
   328 ;;		wreg, status,2, status,0, cstack
   329 ;; Tracked objects:
   330 ;;		On entry : 0/0
   331 ;;		On exit  : 0/0
   332 ;;		Unchanged: 0/0
   333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   334 ;;      Params:        20       0       0       0       0       0       0
   335 ;;      Locals:         0       0       0       0       0       0       0
   336 ;;      Temps:          0       0       0       0       0       0       0
   337 ;;      Totals:        20       0       0       0       0       0       0
   338 ;;Total ram usage:       20 bytes
   339 ;; Hardware stack levels used: 1
   340 ;; Hardware stack levels required when called: 1
   341 ;; This function calls:
   342 ;;		___aldiv
   343 ;;		___lmul
   344 ;; This function is called by:
   345 ;;		_main
   346 ;; This function uses a non-reentrant model
   347 ;;
   348                           
   349                           	psect	text1
   350   003D9A                     __ptext1:
   351                           	callstack 0
   352   003D9A                     _map:
   353                           	callstack 0
   354   003D9A  FFFF               	dw	65535	; assembler added errata NOP
   355   003D9C                     
   356                           ;./map_function.h: 3: long map(long x, long eMin, long eMax, long sMin, long sMax);./map
      +                          _function.h: 4: {;./map_function.h: 5:   return(x -eMin)*(sMax-sMin)/(eMax-eMin)+sMin;
   357   003D9C  501F               	movf	map@eMin^0,w,c
   358   003D9E  5C1B               	subwf	map@x^0,w,c
   359   003DA0  6E01               	movwf	___lmul@multiplier^0,c
   360   003DA2  5020               	movf	(map@eMin+1)^0,w,c
   361   003DA4  581C               	subwfb	(map@x+1)^0,w,c
   362   003DA6  6E02               	movwf	(___lmul@multiplier+1)^0,c
   363   003DA8  5021               	movf	(map@eMin+2)^0,w,c
   364   003DAA  581D               	subwfb	(map@x+2)^0,w,c
   365   003DAC  6E03               	movwf	(___lmul@multiplier+2)^0,c
   366   003DAE  5022               	movf	(map@eMin+3)^0,w,c
   367   003DB0  581E               	subwfb	(map@x+3)^0,w,c
   368   003DB2  6E04               	movwf	(___lmul@multiplier+3)^0,c
   369   003DB4  5027               	movf	map@sMin^0,w,c
   370   003DB6  5C2B               	subwf	map@sMax^0,w,c
   371   003DB8  6E05               	movwf	___lmul@multiplicand^0,c
   372   003DBA  5028               	movf	(map@sMin+1)^0,w,c
   373   003DBC  582C               	subwfb	(map@sMax+1)^0,w,c
   374   003DBE  6E06               	movwf	(___lmul@multiplicand+1)^0,c
   375   003DC0  5029               	movf	(map@sMin+2)^0,w,c
   376   003DC2  582D               	subwfb	(map@sMax+2)^0,w,c
   377   003DC4  6E07               	movwf	(___lmul@multiplicand+2)^0,c
   378   003DC6  502A               	movf	(map@sMin+3)^0,w,c
   379   003DC8  582E               	subwfb	(map@sMax+3)^0,w,c
   380   003DCA  6E08               	movwf	(___lmul@multiplicand+3)^0,c
   381   003DCC  EC90  F01E         	call	___lmul	;wreg free
   382   003DD0  C001  F00D         	movff	?___lmul,___aldiv@dividend
   383   003DD4  C002  F00E         	movff	?___lmul+1,___aldiv@dividend+1
   384   003DD8  C003  F00F         	movff	?___lmul+2,___aldiv@dividend+2
   385   003DDC  C004  F010         	movff	?___lmul+3,___aldiv@dividend+3
   386   003DE0  501F               	movf	map@eMin^0,w,c
   387   003DE2  5C23               	subwf	map@eMax^0,w,c
   388   003DE4  6E11               	movwf	___aldiv@divisor^0,c
   389   003DE6  5020               	movf	(map@eMin+1)^0,w,c
   390   003DE8  5824               	subwfb	(map@eMax+1)^0,w,c
   391   003DEA  6E12               	movwf	(___aldiv@divisor+1)^0,c
   392   003DEC  5021               	movf	(map@eMin+2)^0,w,c
   393   003DEE  5825               	subwfb	(map@eMax+2)^0,w,c
   394   003DF0  6E13               	movwf	(___aldiv@divisor+2)^0,c
   395   003DF2  5022               	movf	(map@eMin+3)^0,w,c
   396   003DF4  5826               	subwfb	(map@eMax+3)^0,w,c
   397   003DF6  6E14               	movwf	(___aldiv@divisor+3)^0,c
   398   003DF8  EC63  F01F         	call	___aldiv	;wreg free
   399   003DFC  5027               	movf	map@sMin^0,w,c
   400   003DFE  240D               	addwf	?___aldiv^0,w,c
   401   003E00  6E1B               	movwf	?_map^0,c
   402   003E02  5028               	movf	(map@sMin+1)^0,w,c
   403   003E04  200E               	addwfc	(?___aldiv+1)^0,w,c
   404   003E06  6E1C               	movwf	(?_map+1)^0,c
   405   003E08  5029               	movf	(map@sMin+2)^0,w,c
   406   003E0A  200F               	addwfc	(?___aldiv+2)^0,w,c
   407   003E0C  6E1D               	movwf	(?_map+2)^0,c
   408   003E0E  502A               	movf	(map@sMin+3)^0,w,c
   409   003E10  2010               	addwfc	(?___aldiv+3)^0,w,c
   410   003E12  6E1E               	movwf	(?_map+3)^0,c
   411   003E14  0012               	return		;funcret
   412   003E16  FFFF               	dw	65535	; errata NOP
   413   003E18                     __end_of_map:
   414                           	callstack 0
   415                           
   416 ;; *************** function ___lmul *****************
   417 ;; Defined at:
   418 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
   419 ;; Parameters:    Size  Location     Type
   420 ;;  multiplier      4    0[COMRAM] unsigned long 
   421 ;;  multiplicand    4    4[COMRAM] unsigned long 
   422 ;; Auto vars:     Size  Location     Type
   423 ;;  product         4    8[COMRAM] unsigned long 
   424 ;; Return value:  Size  Location     Type
   425 ;;                  4    0[COMRAM] unsigned long 
   426 ;; Registers used:
   427 ;;		wreg, status,2, status,0
   428 ;; Tracked objects:
   429 ;;		On entry : 0/0
   430 ;;		On exit  : 0/0
   431 ;;		Unchanged: 0/0
   432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   433 ;;      Params:         8       0       0       0       0       0       0
   434 ;;      Locals:         4       0       0       0       0       0       0
   435 ;;      Temps:          0       0       0       0       0       0       0
   436 ;;      Totals:        12       0       0       0       0       0       0
   437 ;;Total ram usage:       12 bytes
   438 ;; Hardware stack levels used: 1
   439 ;; This function calls:
   440 ;;		Nothing
   441 ;; This function is called by:
   442 ;;		_map
   443 ;; This function uses a non-reentrant model
   444 ;;
   445                           
   446                           	psect	text2
   447   003D20                     __ptext2:
   448                           	callstack 0
   449   003D20                     ___lmul:
   450                           	callstack 0
   451   003D20  FFFF               	dw	65535	; assembler added errata NOP
   452   003D22  0E00               	movlw	0
   453   003D24  6E09               	movwf	___lmul@product^0,c
   454   003D26  0E00               	movlw	0
   455   003D28  6E0A               	movwf	(___lmul@product+1)^0,c
   456   003D2A  0E00               	movlw	0
   457   003D2C  6E0B               	movwf	(___lmul@product+2)^0,c
   458   003D2E  0E00               	movlw	0
   459   003D30  6E0C               	movwf	(___lmul@product+3)^0,c
   460   003D32                     l786:
   461   003D32  FFFF               	dw	65535	; assembler added errata NOP
   462   003D34  A001               	btfss	___lmul@multiplier^0,0,c
   463   003D36  EF9F  F01E         	goto	u101
   464   003D3A  EFA2  F01E         	goto	u100
   465   003D3E                     u101:
   466   003D3E  FFFF               	dw	65535	; assembler added errata NOP
   467   003D40  EFAB  F01E         	goto	l790
   468   003D44                     u100:
   469   003D44  FFFF               	dw	65535	; assembler added errata NOP
   470   003D46  5005               	movf	___lmul@multiplicand^0,w,c
   471   003D48  2609               	addwf	___lmul@product^0,f,c
   472   003D4A  5006               	movf	(___lmul@multiplicand+1)^0,w,c
   473   003D4C  220A               	addwfc	(___lmul@product+1)^0,f,c
   474   003D4E  5007               	movf	(___lmul@multiplicand+2)^0,w,c
   475   003D50  220B               	addwfc	(___lmul@product+2)^0,f,c
   476   003D52  5008               	movf	(___lmul@multiplicand+3)^0,w,c
   477   003D54  220C               	addwfc	(___lmul@product+3)^0,f,c
   478   003D56                     l790:
   479   003D56  FFFF               	dw	65535	; assembler added errata NOP
   480   003D58  90D8               	bcf	status,0,c
   481   003D5A  3605               	rlcf	___lmul@multiplicand^0,f,c
   482   003D5C  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
   483   003D5E  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
   484   003D60  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
   485   003D62  90D8               	bcf	status,0,c
   486   003D64  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
   487   003D66  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
   488   003D68  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
   489   003D6A  3201               	rrcf	___lmul@multiplier^0,f,c
   490   003D6C  5001               	movf	___lmul@multiplier^0,w,c
   491   003D6E  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
   492   003D70  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
   493   003D72  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
   494   003D74  A4D8               	btfss	status,2,c
   495   003D76  EFBF  F01E         	goto	u111
   496   003D7A  EFC2  F01E         	goto	u110
   497   003D7E                     u111:
   498   003D7E  FFFF               	dw	65535	; assembler added errata NOP
   499   003D80  EF99  F01E         	goto	l786
   500   003D84                     u110:
   501   003D84  FFFF               	dw	65535	; assembler added errata NOP
   502   003D86  C009  F001         	movff	___lmul@product,?___lmul
   503   003D8A  C00A  F002         	movff	___lmul@product+1,?___lmul+1
   504   003D8E  C00B  F003         	movff	___lmul@product+2,?___lmul+2
   505   003D92  C00C  F004         	movff	___lmul@product+3,?___lmul+3
   506   003D96  0012               	return		;funcret
   507   003D98  FFFF               	dw	65535	; errata NOP
   508   003D9A                     __end_of___lmul:
   509                           	callstack 0
   510                           
   511 ;; *************** function ___aldiv *****************
   512 ;; Defined at:
   513 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aldiv.c"
   514 ;; Parameters:    Size  Location     Type
   515 ;;  dividend        4   12[COMRAM] long 
   516 ;;  divisor         4   16[COMRAM] long 
   517 ;; Auto vars:     Size  Location     Type
   518 ;;  quotient        4   22[COMRAM] long 
   519 ;;  sign            1   21[COMRAM] unsigned char 
   520 ;;  counter         1   20[COMRAM] unsigned char 
   521 ;; Return value:  Size  Location     Type
   522 ;;                  4   12[COMRAM] long 
   523 ;; Registers used:
   524 ;;		wreg, status,2, status,0
   525 ;; Tracked objects:
   526 ;;		On entry : 0/0
   527 ;;		On exit  : 0/0
   528 ;;		Unchanged: 0/0
   529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   530 ;;      Params:         8       0       0       0       0       0       0
   531 ;;      Locals:         6       0       0       0       0       0       0
   532 ;;      Temps:          0       0       0       0       0       0       0
   533 ;;      Totals:        14       0       0       0       0       0       0
   534 ;;Total ram usage:       14 bytes
   535 ;; Hardware stack levels used: 1
   536 ;; This function calls:
   537 ;;		Nothing
   538 ;; This function is called by:
   539 ;;		_map
   540 ;; This function uses a non-reentrant model
   541 ;;
   542                           
   543                           	psect	text3
   544   003EC6                     __ptext3:
   545                           	callstack 0
   546   003EC6                     ___aldiv:
   547                           	callstack 0
   548   003EC6  FFFF               	dw	65535	; assembler added errata NOP
   549   003EC8  0E00               	movlw	0
   550   003ECA  6E16               	movwf	___aldiv@sign^0,c
   551   003ECC  BE14               	btfsc	(___aldiv@divisor+3)^0,7,c
   552   003ECE  EF6E  F01F         	goto	u120
   553   003ED2  EF6B  F01F         	goto	u121
   554   003ED6                     u121:
   555   003ED6  FFFF               	dw	65535	; assembler added errata NOP
   556   003ED8  EF79  F01F         	goto	l802
   557   003EDC                     u120:
   558   003EDC  FFFF               	dw	65535	; assembler added errata NOP
   559   003EDE  1E14               	comf	(___aldiv@divisor+3)^0,f,c
   560   003EE0  1E13               	comf	(___aldiv@divisor+2)^0,f,c
   561   003EE2  1E12               	comf	(___aldiv@divisor+1)^0,f,c
   562   003EE4  6C11               	negf	___aldiv@divisor^0,c
   563   003EE6  0E00               	movlw	0
   564   003EE8  2212               	addwfc	(___aldiv@divisor+1)^0,f,c
   565   003EEA  2213               	addwfc	(___aldiv@divisor+2)^0,f,c
   566   003EEC  2214               	addwfc	(___aldiv@divisor+3)^0,f,c
   567   003EEE  0E01               	movlw	1
   568   003EF0  6E16               	movwf	___aldiv@sign^0,c
   569   003EF2                     l802:
   570   003EF2  FFFF               	dw	65535	; assembler added errata NOP
   571   003EF4  BE10               	btfsc	(___aldiv@dividend+3)^0,7,c
   572   003EF6  EF82  F01F         	goto	u130
   573   003EFA  EF7F  F01F         	goto	u131
   574   003EFE                     u131:
   575   003EFE  FFFF               	dw	65535	; assembler added errata NOP
   576   003F00  EF8D  F01F         	goto	l808
   577   003F04                     u130:
   578   003F04  FFFF               	dw	65535	; assembler added errata NOP
   579   003F06  1E10               	comf	(___aldiv@dividend+3)^0,f,c
   580   003F08  1E0F               	comf	(___aldiv@dividend+2)^0,f,c
   581   003F0A  1E0E               	comf	(___aldiv@dividend+1)^0,f,c
   582   003F0C  6C0D               	negf	___aldiv@dividend^0,c
   583   003F0E  0E00               	movlw	0
   584   003F10  220E               	addwfc	(___aldiv@dividend+1)^0,f,c
   585   003F12  220F               	addwfc	(___aldiv@dividend+2)^0,f,c
   586   003F14  2210               	addwfc	(___aldiv@dividend+3)^0,f,c
   587   003F16  0E01               	movlw	1
   588   003F18  1A16               	xorwf	___aldiv@sign^0,f,c
   589   003F1A                     l808:
   590   003F1A  FFFF               	dw	65535	; assembler added errata NOP
   591   003F1C  0E00               	movlw	0
   592   003F1E  6E17               	movwf	___aldiv@quotient^0,c
   593   003F20  0E00               	movlw	0
   594   003F22  6E18               	movwf	(___aldiv@quotient+1)^0,c
   595   003F24  0E00               	movlw	0
   596   003F26  6E19               	movwf	(___aldiv@quotient+2)^0,c
   597   003F28  0E00               	movlw	0
   598   003F2A  6E1A               	movwf	(___aldiv@quotient+3)^0,c
   599   003F2C  5011               	movf	___aldiv@divisor^0,w,c
   600   003F2E  1012               	iorwf	(___aldiv@divisor+1)^0,w,c
   601   003F30  1013               	iorwf	(___aldiv@divisor+2)^0,w,c
   602   003F32  1014               	iorwf	(___aldiv@divisor+3)^0,w,c
   603   003F34  B4D8               	btfsc	status,2,c
   604   003F36  EF9F  F01F         	goto	u141
   605   003F3A  EFA2  F01F         	goto	u140
   606   003F3E                     u141:
   607   003F3E  FFFF               	dw	65535	; assembler added errata NOP
   608   003F40  EFE1  F01F         	goto	l830
   609   003F44                     u140:
   610   003F44  FFFF               	dw	65535	; assembler added errata NOP
   611   003F46  0E01               	movlw	1
   612   003F48  6E15               	movwf	___aldiv@counter^0,c
   613   003F4A  EFAE  F01F         	goto	l816
   614   003F4E                     l814:
   615   003F4E  FFFF               	dw	65535	; assembler added errata NOP
   616   003F50  90D8               	bcf	status,0,c
   617   003F52  3611               	rlcf	___aldiv@divisor^0,f,c
   618   003F54  3612               	rlcf	(___aldiv@divisor+1)^0,f,c
   619   003F56  3613               	rlcf	(___aldiv@divisor+2)^0,f,c
   620   003F58  3614               	rlcf	(___aldiv@divisor+3)^0,f,c
   621   003F5A  2A15               	incf	___aldiv@counter^0,f,c
   622   003F5C                     l816:
   623   003F5C  FFFF               	dw	65535	; assembler added errata NOP
   624   003F5E  AE14               	btfss	(___aldiv@divisor+3)^0,7,c
   625   003F60  EFB4  F01F         	goto	u151
   626   003F64  EFB7  F01F         	goto	u150
   627   003F68                     u151:
   628   003F68  FFFF               	dw	65535	; assembler added errata NOP
   629   003F6A  EFA7  F01F         	goto	l814
   630   003F6E                     u150:
   631   003F6E  FFFF               	dw	65535	; assembler added errata NOP
   632   003F70                     l818:
   633   003F70  FFFF               	dw	65535	; assembler added errata NOP
   634   003F72  90D8               	bcf	status,0,c
   635   003F74  3617               	rlcf	___aldiv@quotient^0,f,c
   636   003F76  3618               	rlcf	(___aldiv@quotient+1)^0,f,c
   637   003F78  3619               	rlcf	(___aldiv@quotient+2)^0,f,c
   638   003F7A  361A               	rlcf	(___aldiv@quotient+3)^0,f,c
   639   003F7C  5011               	movf	___aldiv@divisor^0,w,c
   640   003F7E  5C0D               	subwf	___aldiv@dividend^0,w,c
   641   003F80  5012               	movf	(___aldiv@divisor+1)^0,w,c
   642   003F82  580E               	subwfb	(___aldiv@dividend+1)^0,w,c
   643   003F84  5013               	movf	(___aldiv@divisor+2)^0,w,c
   644   003F86  580F               	subwfb	(___aldiv@dividend+2)^0,w,c
   645   003F88  5014               	movf	(___aldiv@divisor+3)^0,w,c
   646   003F8A  5810               	subwfb	(___aldiv@dividend+3)^0,w,c
   647   003F8C  A0D8               	btfss	status,0,c
   648   003F8E  EFCB  F01F         	goto	u161
   649   003F92  EFCE  F01F         	goto	u160
   650   003F96                     u161:
   651   003F96  FFFF               	dw	65535	; assembler added errata NOP
   652   003F98  EFD8  F01F         	goto	l826
   653   003F9C                     u160:
   654   003F9C  FFFF               	dw	65535	; assembler added errata NOP
   655   003F9E  5011               	movf	___aldiv@divisor^0,w,c
   656   003FA0  5E0D               	subwf	___aldiv@dividend^0,f,c
   657   003FA2  5012               	movf	(___aldiv@divisor+1)^0,w,c
   658   003FA4  5A0E               	subwfb	(___aldiv@dividend+1)^0,f,c
   659   003FA6  5013               	movf	(___aldiv@divisor+2)^0,w,c
   660   003FA8  5A0F               	subwfb	(___aldiv@dividend+2)^0,f,c
   661   003FAA  5014               	movf	(___aldiv@divisor+3)^0,w,c
   662   003FAC  5A10               	subwfb	(___aldiv@dividend+3)^0,f,c
   663   003FAE  8017               	bsf	___aldiv@quotient^0,0,c
   664   003FB0                     l826:
   665   003FB0  FFFF               	dw	65535	; assembler added errata NOP
   666   003FB2  90D8               	bcf	status,0,c
   667   003FB4  3214               	rrcf	(___aldiv@divisor+3)^0,f,c
   668   003FB6  3213               	rrcf	(___aldiv@divisor+2)^0,f,c
   669   003FB8  3212               	rrcf	(___aldiv@divisor+1)^0,f,c
   670   003FBA  3211               	rrcf	___aldiv@divisor^0,f,c
   671   003FBC  2E15               	decfsz	___aldiv@counter^0,f,c
   672   003FBE  EFB8  F01F         	goto	l818
   673   003FC2                     l830:
   674   003FC2  FFFF               	dw	65535	; assembler added errata NOP
   675   003FC4  5016               	movf	___aldiv@sign^0,w,c
   676   003FC6  B4D8               	btfsc	status,2,c
   677   003FC8  EFE8  F01F         	goto	u171
   678   003FCC  EFEB  F01F         	goto	u170
   679   003FD0                     u171:
   680   003FD0  FFFF               	dw	65535	; assembler added errata NOP
   681   003FD2  EFF4  F01F         	goto	l834
   682   003FD6                     u170:
   683   003FD6  FFFF               	dw	65535	; assembler added errata NOP
   684   003FD8  1E1A               	comf	(___aldiv@quotient+3)^0,f,c
   685   003FDA  1E19               	comf	(___aldiv@quotient+2)^0,f,c
   686   003FDC  1E18               	comf	(___aldiv@quotient+1)^0,f,c
   687   003FDE  6C17               	negf	___aldiv@quotient^0,c
   688   003FE0  0E00               	movlw	0
   689   003FE2  2218               	addwfc	(___aldiv@quotient+1)^0,f,c
   690   003FE4  2219               	addwfc	(___aldiv@quotient+2)^0,f,c
   691   003FE6  221A               	addwfc	(___aldiv@quotient+3)^0,f,c
   692   003FE8                     l834:
   693   003FE8  FFFF               	dw	65535	; assembler added errata NOP
   694   003FEA  C017  F00D         	movff	___aldiv@quotient,?___aldiv
   695   003FEE  C018  F00E         	movff	___aldiv@quotient+1,?___aldiv+1
   696   003FF2  C019  F00F         	movff	___aldiv@quotient+2,?___aldiv+2
   697   003FF6  C01A  F010         	movff	___aldiv@quotient+3,?___aldiv+3
   698   003FFA  0012               	return		;funcret
   699   003FFC  FFFF               	dw	65535	; errata NOP
   700   003FFE                     __end_of___aldiv:
   701                           	callstack 0
   702   003FFE  FFFF               	dw	65535	; assembler added errata NOP
   703                           
   704                           	psect	rparam
   705   000000                     
   706                           	psect	idloc
   707                           
   708                           ;Config register IDLOC0 @ 0x200000
   709                           ;	unspecified, using default values
   710   200000                     	org	2097152
   711   200000  FF                 	db	255
   712                           
   713                           ;Config register IDLOC1 @ 0x200001
   714                           ;	unspecified, using default values
   715   200001                     	org	2097153
   716   200001  FF                 	db	255
   717                           
   718                           ;Config register IDLOC2 @ 0x200002
   719                           ;	unspecified, using default values
   720   200002                     	org	2097154
   721   200002  FF                 	db	255
   722                           
   723                           ;Config register IDLOC3 @ 0x200003
   724                           ;	unspecified, using default values
   725   200003                     	org	2097155
   726   200003  FF                 	db	255
   727                           
   728                           ;Config register IDLOC4 @ 0x200004
   729                           ;	unspecified, using default values
   730   200004                     	org	2097156
   731   200004  FF                 	db	255
   732                           
   733                           ;Config register IDLOC5 @ 0x200005
   734                           ;	unspecified, using default values
   735   200005                     	org	2097157
   736   200005  FF                 	db	255
   737                           
   738                           ;Config register IDLOC6 @ 0x200006
   739                           ;	unspecified, using default values
   740   200006                     	org	2097158
   741   200006  FF                 	db	255
   742                           
   743                           ;Config register IDLOC7 @ 0x200007
   744                           ;	unspecified, using default values
   745   200007                     	org	2097159
   746   200007  FF                 	db	255
   747                           
   748                           	psect	config
   749                           
   750                           ; Padding undefined space
   751   300000                     	org	3145728
   752   300000  FF                 	db	255
   753                           
   754                           ;Config register CONFIG1H @ 0x300001
   755                           ;	Oscillator Selection bits
   756                           ;	OSC = HS, HS oscillator
   757                           ;	Oscillator System Clock Switch Enable bit
   758                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
   759   300001                     	org	3145729
   760   300001  22                 	db	34
   761                           
   762                           ;Config register CONFIG2L @ 0x300002
   763                           ;	Power-up Timer Enable bit
   764                           ;	PWRT = OFF, PWRT disabled
   765                           ;	Brown-out Reset Enable bit
   766                           ;	BOR = OFF, Brown-out Reset disabled
   767                           ;	Brown-out Reset Voltage bits
   768                           ;	BORV = 20, VBOR set to 2.0V
   769   300002                     	org	3145730
   770   300002  0D                 	db	13
   771                           
   772                           ;Config register CONFIG2H @ 0x300003
   773                           ;	Watchdog Timer Enable bit
   774                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   775                           ;	Watchdog Timer Postscale Select bits
   776                           ;	WDTPS = 128, 1:128
   777   300003                     	org	3145731
   778   300003  0E                 	db	14
   779                           
   780                           ; Padding undefined space
   781   300004                     	org	3145732
   782   300004  FF                 	db	255
   783                           
   784                           ;Config register CONFIG3H @ 0x300005
   785                           ;	CCP2 Mux bit
   786                           ;	CCP2MUX = ON, CCP2 input/output is multiplexed with RC1
   787   300005                     	org	3145733
   788   300005  01                 	db	1
   789                           
   790                           ;Config register CONFIG4L @ 0x300006
   791                           ;	Stack Full/Underflow Reset Enable bit
   792                           ;	STVR = ON, Stack Full/Underflow will cause RESET
   793                           ;	Low Voltage ICSP Enable bit
   794                           ;	LVP = ON, Low Voltage ICSP enabled
   795                           ;	Background Debugger Enable bit
   796                           ;	DEBUG = 0x1, unprogrammed default
   797   300006                     	org	3145734
   798   300006  85                 	db	133
   799                           
   800                           ; Padding undefined space
   801   300007                     	org	3145735
   802   300007  FF                 	db	255
   803                           
   804                           ;Config register CONFIG5L @ 0x300008
   805                           ;	Code Protection bit
   806                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
   807                           ;	Code Protection bit
   808                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
   809                           ;	Code Protection bit
   810                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
   811                           ;	Code Protection bit
   812                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
   813   300008                     	org	3145736
   814   300008  0F                 	db	15
   815                           
   816                           ;Config register CONFIG5H @ 0x300009
   817                           ;	Boot Block Code Protection bit
   818                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
   819                           ;	Data EEPROM Code Protection bit
   820                           ;	CPD = OFF, Data EEPROM not code protected
   821   300009                     	org	3145737
   822   300009  C0                 	db	192
   823                           
   824                           ;Config register CONFIG6L @ 0x30000A
   825                           ;	Write Protection bit
   826                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
   827                           ;	Write Protection bit
   828                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
   829                           ;	Write Protection bit
   830                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
   831                           ;	Write Protection bit
   832                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
   833   30000A                     	org	3145738
   834   30000A  0F                 	db	15
   835                           
   836                           ;Config register CONFIG6H @ 0x30000B
   837                           ;	Configuration Register Write Protection bit
   838                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
   839                           ;	Boot Block Write Protection bit
   840                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
   841                           ;	Data EEPROM Write Protection bit
   842                           ;	WRTD = OFF, Data EEPROM not write protected
   843   30000B                     	org	3145739
   844   30000B  E0                 	db	224
   845                           
   846                           ;Config register CONFIG7L @ 0x30000C
   847                           ;	Table Read Protection bit
   848                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
   849                           ;	Table Read Protection bit
   850                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
   851                           ;	Table Read Protection bit
   852                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
   853                           ;	Table Read Protection bit
   854                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
   855   30000C                     	org	3145740
   856   30000C  0F                 	db	15
   857                           
   858                           ;Config register CONFIG7H @ 0x30000D
   859                           ;	Boot Block Table Read Protection bit
   860                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
   861   30000D                     	org	3145741
   862   30000D  40                 	db	64
   863                           tosu	equ	0xFFF
   864                           tosh	equ	0xFFE
   865                           tosl	equ	0xFFD
   866                           stkptr	equ	0xFFC
   867                           pclatu	equ	0xFFB
   868                           pclath	equ	0xFFA
   869                           pcl	equ	0xFF9
   870                           tblptru	equ	0xFF8
   871                           tblptrh	equ	0xFF7
   872                           tblptrl	equ	0xFF6
   873                           tablat	equ	0xFF5
   874                           prodh	equ	0xFF4
   875                           prodl	equ	0xFF3
   876                           indf0	equ	0xFEF
   877                           postinc0	equ	0xFEE
   878                           postdec0	equ	0xFED
   879                           preinc0	equ	0xFEC
   880                           plusw0	equ	0xFEB
   881                           fsr0h	equ	0xFEA
   882                           fsr0l	equ	0xFE9
   883                           wreg	equ	0xFE8
   884                           indf1	equ	0xFE7
   885                           postinc1	equ	0xFE6
   886                           postdec1	equ	0xFE5
   887                           preinc1	equ	0xFE4
   888                           plusw1	equ	0xFE3
   889                           fsr1h	equ	0xFE2
   890                           fsr1l	equ	0xFE1
   891                           bsr	equ	0xFE0
   892                           indf2	equ	0xFDF
   893                           postinc2	equ	0xFDE
   894                           postdec2	equ	0xFDD
   895                           preinc2	equ	0xFDC
   896                           plusw2	equ	0xFDB
   897                           fsr2h	equ	0xFDA
   898                           fsr2l	equ	0xFD9
   899                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     49      49
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_map
    _map->___aldiv
    ___aldiv->___lmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1402
                                             46 COMRAM     3     3      0
                                _map
 ---------------------------------------------------------------------------------
 (1) _map                                                 20     0     20    1356
                                             26 COMRAM    20     0     20
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     452
                                             12 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _map
     ___aldiv
       ___lmul (ARG)
     ___lmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F     31      31       1       38.6%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBIGSFRhh         33      0       0      16        0.0%
BITBIGSFRhl          5      0       0      17        0.0%
BITBIGSFRlh          2      0       0      18        0.0%
BITBIGSFRllh        28      0       0      19        0.0%
BITBIGSFRlll        14      0       0      20        0.0%
ABS                  0      0       0      21        0.0%
BIGRAM             5FF      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Jan 06 22:04:12 2024

                                                          l31 3E40  
                                                          l25 3E14  
                                                          l33 3E54  
                                                          l50 3D86  
                                                          l51 3D96  
                                                         l118 3FFA  
                                                         l800 3EEE  
                                                         l810 3F2C  
                                                         l802 3EF2  
                                                         l820 3F7C  
                                                         l812 3F46  
                                                         l804 3F06  
                                                         l822 3F9E  
                                                         l814 3F4E  
                                                         l830 3FC2  
                                                         l806 3F16  
                                                         l832 3FD8  
                                                         l824 3FAE  
                                                         l816 3F5C  
                                                         l808 3F1A  
                                                         l834 3FE8  
                                                         l826 3FB0  
                                                         l818 3F70  
                                                         l850 3E3C  
                                                         l842 3E18  
                                                         l828 3FBC  
                                                         l852 3E5C  
                                                         l844 3E22  
                                                         l790 3D56  
                                                         l838 3D9C  
                                                         l854 3EB6  
                                                         l846 3E2C  
                                                         l792 3D62  
                                                         l784 3D22  
                                                         l848 3E3A  
                                                         l794 3EC8  
                                                         l786 3D32  
                                                         l796 3ECC  
                                                         l788 3D46  
                                                         l798 3EDE  
                                                         u100 3D44  
                                                         u101 3D3E  
                                                         u110 3D84  
                                                         u111 3D7E  
                                                         u120 3EDC  
                                                         u121 3ED6  
                                                         u130 3F04  
                                                         u131 3EFE  
                                                         u140 3F44  
                                                         u141 3F3E  
                                                         u150 3F6E  
                                                         u151 3F68  
                                                         u160 3F9C  
                                                         u161 3F96  
                                                         u170 3FD6  
                                                         u171 3FD0  
                                                         u180 3E52  
                                                         u181 3E4C  
                                                         _PR2 000FCB  
                                                         _map 3D9A  
                                                         wreg 000FE8  
                                                        ?_map 001B  
                                                        _TMR2 000FCC  
                                                        _main 3E18  
                                                        map@x 001B  
                                                        start 0002  
                                                ___param_bank 000000  
                                                       ??_map 002F  
                                             __end_of___aldiv 3FFE  
                                                       ?_main 0001  
                                                       _ADRES 000FC3  
                                                       _T2CON 000FCA  
                                         ___lmul@multiplicand 0005  
                                                       status 000FD8  
                                             __initialization 3D1A  
                                                __end_of_main 3EC6  
                                                      ??_main 002F  
                                               __activetblptr 000000  
                                                      _ADCON0 000FC2  
                                                      _ADCON1 000FC1  
                                                      _CCPR1L 000FBE  
                                                      ___lmul 3D20  
                                                   ??___aldiv 0015  
                                                      isa$std 000001  
                                               main@valor_adc 002F  
                                               main@valor_pwm 0031  
                                                  __accesstop 0080  
                                     __end_of__initialization 3D1A  
                                               ___rparam_used 000001  
                                              __pcstackCOMRAM 0001  
                                                     ?___lmul 0001  
                                                     _CCP1CON 000FBD  
                                              ___lmul@product 0009  
                                                     __Hparam 0000  
                                                     __Lparam 0000  
                                                     ___aldiv 3EC6  
                                                     __pcinit 3D1A  
                                                     __ramtop 0600  
                                                     __ptext0 3E18  
                                                     __ptext1 3D9A  
                                                     __ptext2 3D20  
                                                     __ptext3 3EC6  
                                                   _T2CONbits 000FCA  
                                            ___aldiv@dividend 000D  
                                                     map@eMax 0023  
                                                     map@eMin 001F  
                                                     map@sMax 002B  
                                                     map@sMin 0027  
                                        end_of_initialization 3D1A  
                                            ___aldiv@quotient 0017  
                                                   _TRISCbits 000F94  
                                              __end_of___lmul 3D9A  
                                         start_initialization 3D1A  
                                                 __end_of_map 3E18  
                                                    ??___lmul 0009  
                                                    ?___aldiv 000D  
                                             ___aldiv@divisor 0011  
                                             ___aldiv@counter 0015  
                                                  _ADCON0bits 000FC2  
                                           ___lmul@multiplier 0001  
                                                    __Hrparam 0000  
                                                    __Lrparam 0000  
                                                    isa$xinst 000000  
                                                ___aldiv@sign 0016  
