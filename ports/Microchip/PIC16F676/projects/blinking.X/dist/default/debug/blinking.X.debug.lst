

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Oct 11 18:23:22 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F676
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
     9                           	dabs	1,0x5E,2
    10  0000                     
    11                           ; Generated 22/03/2023 GMT
    12                           ; 
    13                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    14                           ; All rights reserved.
    15                           ; 
    16                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    17                           ; 
    18                           ; Redistribution and use in source and binary forms, with or without modification, are
    19                           ; permitted provided that the following conditions are met:
    20                           ; 
    21                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    22                           ;        conditions and the following disclaimer.
    23                           ; 
    24                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    25                           ;        of conditions and the following disclaimer in the documentation and/or other
    26                           ;        materials provided with the distribution. Publication is not required when
    27                           ;        this file is used in an embedded application.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC16F676 Definitions
    43                           ; 
    44                           ; SFR Addresses
    45  0000                     	;# 
    46  0001                     	;# 
    47  0002                     	;# 
    48  0003                     	;# 
    49  0004                     	;# 
    50  0005                     	;# 
    51  0007                     	;# 
    52  000A                     	;# 
    53  000B                     	;# 
    54  000C                     	;# 
    55  000E                     	;# 
    56  000E                     	;# 
    57  000F                     	;# 
    58  0010                     	;# 
    59  0019                     	;# 
    60  001E                     	;# 
    61  001F                     	;# 
    62  0081                     	;# 
    63  0085                     	;# 
    64  0087                     	;# 
    65  008C                     	;# 
    66  008E                     	;# 
    67  0090                     	;# 
    68  0091                     	;# 
    69  0095                     	;# 
    70  0095                     	;# 
    71  0096                     	;# 
    72  0096                     	;# 
    73  0099                     	;# 
    74  009A                     	;# 
    75  009A                     	;# 
    76  009B                     	;# 
    77  009C                     	;# 
    78  009D                     	;# 
    79  009E                     	;# 
    80  009F                     	;# 
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  0007                     	;# 
    88  000A                     	;# 
    89  000B                     	;# 
    90  000C                     	;# 
    91  000E                     	;# 
    92  000E                     	;# 
    93  000F                     	;# 
    94  0010                     	;# 
    95  0019                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  0081                     	;# 
    99  0085                     	;# 
   100  0087                     	;# 
   101  008C                     	;# 
   102  008E                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0095                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0096                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117                           
   118                           	psect	nvBANK0
   119  0020                     __pnvBANK0:
   120  0020                     ___port_bit:
   121  0020                     	ds	1
   122  0021                     ___addr:
   123  0021                     	ds	1
   124  0007                     _PORTC	set	7
   125  0085                     _TRISAbits	set	133
   126  0085                     _TRISA	set	133
   127                           
   128                           	psect	cinit
   129  03FD                     start_initialization:	
   130                           ; #config settings
   131                           
   132  03FD                     __initialization:
   133  03FD                     end_of_initialization:	
   134                           ;End of C runtime variable initialization code
   135                           
   136  03FD                     __end_of__initialization:
   137  03FD  0183               	clrf	3
   138  03FE  2BC9               	ljmp	_main	;jump to C main() function
   139                           
   140                           	psect	cstackBANK0
   141  0022                     __pcstackBANK0:
   142  0022                     ?_main:
   143  0022                     ??_main:	
   144                           ; 1 bytes @ 0x0
   145                           
   146                           
   147                           ; 1 bytes @ 0x0
   148  0022                     	ds	1
   149                           
   150                           	psect	maintext
   151  03C9                     __pmaintext:	
   152 ;;
   153 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   154 ;;
   155 ;; *************** function _main *****************
   156 ;; Defined at:
   157 ;;		line 26 in file "blinking.c"
   158 ;; Parameters:    Size  Location     Type
   159 ;;		None
   160 ;; Auto vars:     Size  Location     Type
   161 ;;		None
   162 ;; Return value:  Size  Location     Type
   163 ;;                  1    wreg      void 
   164 ;; Registers used:
   165 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   166 ;; Tracked objects:
   167 ;;		On entry : B00/0
   168 ;;		On exit  : 0/0
   169 ;;		Unchanged: 0/0
   170 ;; Data sizes:     COMMON   BANK0
   171 ;;      Params:         0       0
   172 ;;      Locals:         0       0
   173 ;;      Temps:          0       1
   174 ;;      Totals:         0       1
   175 ;;Total ram usage:        1 bytes
   176 ;; This function calls:
   177 ;;		Nothing
   178 ;; This function is called by:
   179 ;;		Startup code after reset
   180 ;; This function uses a non-reentrant model
   181 ;;
   182                           
   183  03C9                     _main:	
   184                           ;psect for function _main
   185                           
   186  03C9                     l644:	
   187                           ;incstack = 0
   188                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0]
   189                           
   190                           
   191                           ;blinking.c: 28:     __addr = (unsigned char)(rc5>>3) + &TRISA; __port_bit = rc5%8; if(0
      +                          ==1) *__addr |= 0x01<<__port_bit; else *__addr &= ~(0x01<<__port_bit);
   192  03C9  3087               	movlw	135
   193  03CA  1283               	bcf	3,5	;RP0=0, select bank0
   194  03CB  00A2               	movwf	??_main
   195  03CC  0822               	movf	??_main,w
   196  03CD  00A1               	movwf	___addr
   197  03CE  3005               	movlw	5
   198  03CF  00A2               	movwf	??_main
   199  03D0  0822               	movf	??_main,w
   200  03D1  00A0               	movwf	___port_bit
   201  03D2                     l648:
   202  03D2  30DF               	movlw	223
   203  03D3  00A2               	movwf	??_main
   204  03D4  0821               	movf	___addr,w
   205  03D5  0084               	movwf	4
   206  03D6  0822               	movf	??_main,w
   207  03D7  1383               	bcf	3,7	;select IRP bank0
   208  03D8  0580               	andwf	0,f
   209  03D9                     l650:
   210                           
   211                           ;blinking.c: 29:     __addr = (unsigned char)(rc4>>3) + &TRISA; __port_bit = rc4%8; if(0
      +                          ==1) *__addr |= 0x01<<__port_bit; else *__addr &= ~(0x01<<__port_bit);
   212  03D9  3087               	movlw	135
   213  03DA  00A2               	movwf	??_main
   214  03DB  0822               	movf	??_main,w
   215  03DC  00A1               	movwf	___addr
   216  03DD                     l652:
   217  03DD  3004               	movlw	4
   218  03DE  00A2               	movwf	??_main
   219  03DF  0822               	movf	??_main,w
   220  03E0  00A0               	movwf	___port_bit
   221  03E1                     l656:
   222  03E1  30EF               	movlw	239
   223  03E2  00A2               	movwf	??_main
   224  03E3  0821               	movf	___addr,w
   225  03E4  0084               	movwf	4
   226  03E5  0822               	movf	??_main,w
   227  03E6  0580               	andwf	0,f
   228  03E7                     l658:
   229                           
   230                           ;blinking.c: 30:     __addr = (unsigned char)(rc3>>3) + &TRISA; __port_bit = rc3%8; if(0
      +                          ==1) *__addr |= 0x01<<__port_bit; else *__addr &= ~(0x01<<__port_bit);
   231  03E7  3087               	movlw	135
   232  03E8  00A2               	movwf	??_main
   233  03E9  0822               	movf	??_main,w
   234  03EA  00A1               	movwf	___addr
   235  03EB                     l660:
   236  03EB  3003               	movlw	3
   237  03EC  00A2               	movwf	??_main
   238  03ED  0822               	movf	??_main,w
   239  03EE  00A0               	movwf	___port_bit
   240  03EF                     l664:
   241  03EF  30F7               	movlw	247
   242  03F0  00A2               	movwf	??_main
   243  03F1  0821               	movf	___addr,w
   244  03F2  0084               	movwf	4
   245  03F3  0822               	movf	??_main,w
   246  03F4  0580               	andwf	0,f
   247  03F5                     l666:
   248                           
   249                           ;blinking.c: 31:     TRISAbits.TRISA2 = 0;
   250  03F5  1683               	bsf	3,5	;RP0=1, select bank1
   251  03F6  1105               	bcf	5,2	;volatile
   252  03F7                     l668:
   253                           
   254                           ;blinking.c: 38:         PORTC = 0b111111;
   255  03F7  303F               	movlw	63
   256  03F8  1283               	bcf	3,5	;RP0=0, select bank0
   257  03F9  0087               	movwf	7	;volatile
   258  03FA                     l670:
   259                           
   260                           ;blinking.c: 40:         PORTC = 0b000000;
   261  03FA  0187               	clrf	7	;volatile
   262  03FB  2BF7               	goto	l668
   263  03FC  2800               	ljmp	start
   264  03FD                     __end_of_main:
   265  005E                     btemp	set	94	;btemp
   266  005E                     wtemp0	set	94
   267                           
   268                           	psect	config
   269                           
   270                           ;Config register CONFIG @ 0x2007
   271                           ;	Oscillator Selection bits
   272                           ;	FOSC = INTRCIO, INTOSC oscillator: I/O function on RA4/OSC2/CLKOUT pin, I/O function o
      +                          n RA5/OSC1/CLKIN
   273                           ;	Watchdog Timer Enable bit
   274                           ;	WDTE = OFF, WDT disabled
   275                           ;	Power-up Timer Enable bit
   276                           ;	PWRTE = OFF, PWRT disabled
   277                           ;	RA3/MCLR pin function select
   278                           ;	MCLRE = OFF, RA3/MCLR pin function is digital I/O, MCLR internally tied to VDD
   279                           ;	Brown-out Detect Enable bit
   280                           ;	BOREN = OFF, BOD disabled
   281                           ;	Code Protection bit
   282                           ;	CP = OFF, Program Memory code protection is disabled
   283                           ;	Data Code Protection bit
   284                           ;	CPD = OFF, Data memory code protection is disabled
   285  2007                     	org	8199
   286  2007  3F94               	dw	16276

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62      1       3

Pointer List with Targets:

    __addr	PTR unsigned char  size(1) Largest target is 1
		 -> NULL(NULL[0]), TRISA(SFR1[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            3E      0       0       3        0.0%
BANK0               3E      1       3       4        4.8%
ABS                  0      0       3       5        0.0%
DATA                 0      0       3       6        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Oct 11 18:23:22 2023

                    l650 03D9                      l660 03EB                      l652 03DD  
                    l644 03C9                      l670 03FA                      l664 03EF  
                    l656 03E1                      l648 03D2                      l666 03F5  
                    l658 03E7                      l668 03F7                      fsr0 0004  
                    indf 0000                     _main 03C9                     btemp 005E  
                   start 0000                    ?_main 0022                    _PORTC 0007  
                  _TRISA 0085                    status 0003                    wtemp0 005E  
        __initialization 03FD             __end_of_main 03FD                   ??_main 0022  
                 ___addr 0021  __end_of__initialization 03FD               ___port_bit 0020  
             __pmaintext 03C9     end_of_initialization 03FD                _TRISAbits 0085  
    start_initialization 03FD                ___latbits 0000            __pcstackBANK0 0022  
              __pnvBANK0 0020  
