

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Jan 10 23:17:56 2024

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    15   000000                     
    16                           ; Version 2.40
    17                           ; Generated 17/11/2021 GMT
    18                           ; 
    19                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F2550 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51   000000                     _RCREG	set	4014
    52   000000                     _TXREG	set	4013
    53   000000                     _TRISCbits	set	3988
    54   000000                     _RCSTAbits	set	4011
    55   000000                     _TXSTAbits	set	4012
    56   000000                     _SPBRG	set	4015
    57                           
    58                           ; #config settings
    59                           
    60                           	psect	cinit
    61   007E22                     __pcinit:
    62                           	callstack 0
    63   007E22                     start_initialization:
    64                           	callstack 0
    65   007E22                     __initialization:
    66                           	callstack 0
    67   007E22                     end_of_initialization:
    68                           	callstack 0
    69   007E22                     __end_of__initialization:
    70                           	callstack 0
    71   007E22  0100               	movlb	0
    72   007E24  EF18  F03F         	goto	_main	;jump to C main() function
    73                           
    74                           	psect	cstackCOMRAM
    75   000001                     __pcstackCOMRAM:
    76                           	callstack 0
    77   000001                     ?___aldiv:
    78                           	callstack 0
    79   000001                     USART_Tx@data:
    80                           	callstack 0
    81   000001                     ___aldiv@dividend:
    82                           	callstack 0
    83                           
    84                           ; 4 bytes @ 0x0
    85   000001                     	ds	4
    86   000005                     ___aldiv@divisor:
    87                           	callstack 0
    88                           
    89                           ; 4 bytes @ 0x4
    90   000005                     	ds	4
    91   000009                     ___aldiv@counter:
    92                           	callstack 0
    93                           
    94                           ; 1 bytes @ 0x8
    95   000009                     	ds	1
    96   00000A                     ___aldiv@sign:
    97                           	callstack 0
    98                           
    99                           ; 1 bytes @ 0x9
   100   00000A                     	ds	1
   101   00000B                     ___aldiv@quotient:
   102                           	callstack 0
   103                           
   104                           ; 4 bytes @ 0xA
   105   00000B                     	ds	4
   106   00000F                     USART_Init@BAUD:
   107                           	callstack 0
   108                           
   109                           ; 4 bytes @ 0xE
   110   00000F                     	ds	4
   111   000013                     _USART_Init$824:
   112                           	callstack 0
   113                           
   114                           ; 4 bytes @ 0x12
   115   000013                     	ds	4
   116   000017                     ??_main:
   117                           
   118                           ; 1 bytes @ 0x16
   119   000017                     	ds	2
   120                           
   121 ;;
   122 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   123 ;;
   124 ;; *************** function _main *****************
   125 ;; Defined at:
   126 ;;		line 75 in file "Serial_2550.c"
   127 ;; Parameters:    Size  Location     Type
   128 ;;		None
   129 ;; Auto vars:     Size  Location     Type
   130 ;;		None
   131 ;; Return value:  Size  Location     Type
   132 ;;                  1    wreg      void 
   133 ;; Registers used:
   134 ;;		wreg, status,2, status,0, cstack
   135 ;; Tracked objects:
   136 ;;		On entry : 0/0
   137 ;;		On exit  : 0/0
   138 ;;		Unchanged: 0/0
   139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   140 ;;      Params:         0       0       0       0       0       0       0       0       0
   141 ;;      Locals:         0       0       0       0       0       0       0       0       0
   142 ;;      Temps:          2       0       0       0       0       0       0       0       0
   143 ;;      Totals:         2       0       0       0       0       0       0       0       0
   144 ;;Total ram usage:        2 bytes
   145 ;; Hardware stack levels required when called: 2
   146 ;; This function calls:
   147 ;;		_USART_Init
   148 ;;		_USART_Tx
   149 ;; This function is called by:
   150 ;;		Startup code after reset
   151 ;; This function uses a non-reentrant model
   152 ;;
   153                           
   154                           	psect	text0
   155   007E30                     __ptext0:
   156                           	callstack 0
   157   007E30                     _main:
   158                           	callstack 29
   159   007E30                     
   160                           ;Serial_2550.c: 76:     USART_Init(9600);
   161   007E30  0E80               	movlw	128
   162   007E32  6E0F               	movwf	USART_Init@BAUD^0,c
   163   007E34  0E25               	movlw	37
   164   007E36  6E10               	movwf	(USART_Init@BAUD+1)^0,c
   165   007E38  0E00               	movlw	0
   166   007E3A  6E11               	movwf	(USART_Init@BAUD+2)^0,c
   167   007E3C  0E00               	movlw	0
   168   007E3E  6E12               	movwf	(USART_Init@BAUD+3)^0,c
   169   007E40  EC42  F03F         	call	_USART_Init	;wreg free
   170   007E44                     l853:
   171                           
   172                           ;Serial_2550.c: 79:          USART_Tx(0x33);
   173   007E44  0E33               	movlw	51
   174   007E46  EC14  F03F         	call	_USART_Tx
   175   007E4A                     
   176                           ;Serial_2550.c: 80:          _delay((unsigned long)((500)*(8000000/4000.0)));
   177   007E4A  0E06               	movlw	6
   178   007E4C  6E18               	movwf	(??_main+1)^0,c
   179   007E4E  0E13               	movlw	19
   180   007E50  6E17               	movwf	??_main^0,c
   181   007E52  0EAE               	movlw	174
   182   007E54                     u137:
   183   007E54  2EE8               	decfsz	wreg,f,c
   184   007E56  D7FE               	bra	u137
   185   007E58  2E17               	decfsz	??_main^0,f,c
   186   007E5A  D7FC               	bra	u137
   187   007E5C  2E18               	decfsz	(??_main+1)^0,f,c
   188   007E5E  D7FA               	bra	u137
   189   007E60                     
   190                           ;Serial_2550.c: 81:          USART_Tx(0x99);
   191   007E60  0E99               	movlw	153
   192   007E62  EC14  F03F         	call	_USART_Tx
   193   007E66                     
   194                           ;Serial_2550.c: 82:          _delay((unsigned long)((500)*(8000000/4000.0)));
   195   007E66  0E06               	movlw	6
   196   007E68  6E18               	movwf	(??_main+1)^0,c
   197   007E6A  0E13               	movlw	19
   198   007E6C  6E17               	movwf	??_main^0,c
   199   007E6E  0EAE               	movlw	174
   200   007E70                     u147:
   201   007E70  2EE8               	decfsz	wreg,f,c
   202   007E72  D7FE               	bra	u147
   203   007E74  2E17               	decfsz	??_main^0,f,c
   204   007E76  D7FC               	bra	u147
   205   007E78  2E18               	decfsz	(??_main+1)^0,f,c
   206   007E7A  D7FA               	bra	u147
   207   007E7C  EF22  F03F         	goto	l853
   208   007E80  EF00  F000         	goto	start
   209   007E84                     __end_of_main:
   210                           	callstack 0
   211                           
   212 ;; *************** function _USART_Tx *****************
   213 ;; Defined at:
   214 ;;		line 32 in file "USART.c"
   215 ;; Parameters:    Size  Location     Type
   216 ;;  data            1    wreg     unsigned char 
   217 ;; Auto vars:     Size  Location     Type
   218 ;;  data            1    0[COMRAM] unsigned char 
   219 ;; Return value:  Size  Location     Type
   220 ;;                  1    wreg      void 
   221 ;; Registers used:
   222 ;;		wreg
   223 ;; Tracked objects:
   224 ;;		On entry : 0/0
   225 ;;		On exit  : 0/0
   226 ;;		Unchanged: 0/0
   227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   228 ;;      Params:         0       0       0       0       0       0       0       0       0
   229 ;;      Locals:         1       0       0       0       0       0       0       0       0
   230 ;;      Temps:          0       0       0       0       0       0       0       0       0
   231 ;;      Totals:         1       0       0       0       0       0       0       0       0
   232 ;;Total ram usage:        1 bytes
   233 ;; Hardware stack levels used: 1
   234 ;; This function calls:
   235 ;;		Nothing
   236 ;; This function is called by:
   237 ;;		_main
   238 ;; This function uses a non-reentrant model
   239 ;;
   240                           
   241                           	psect	text1
   242   007E28                     __ptext1:
   243                           	callstack 0
   244   007E28                     _USART_Tx:
   245                           	callstack 30
   246                           
   247                           ;incstack = 0
   248                           ;USART_Tx@data stored from wreg
   249   007E28  6E01               	movwf	USART_Tx@data^0,c
   250   007E2A                     
   251                           ;USART.c: 33:     TXREG=data;
   252   007E2A  C001  FFAD         	movff	USART_Tx@data,4013	;volatile
   253   007E2E  0012               	return		;funcret
   254   007E30                     __end_of_USART_Tx:
   255                           	callstack 0
   256                           
   257 ;; *************** function _USART_Init *****************
   258 ;; Defined at:
   259 ;;		line 14 in file "USART.c"
   260 ;; Parameters:    Size  Location     Type
   261 ;;  BAUD            4   14[COMRAM] long 
   262 ;; Auto vars:     Size  Location     Type
   263 ;;		None
   264 ;; Return value:  Size  Location     Type
   265 ;;                  1    wreg      void 
   266 ;; Registers used:
   267 ;;		wreg, status,2, status,0, cstack
   268 ;; Tracked objects:
   269 ;;		On entry : 0/0
   270 ;;		On exit  : 0/0
   271 ;;		Unchanged: 0/0
   272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   273 ;;      Params:         4       0       0       0       0       0       0       0       0
   274 ;;      Locals:         4       0       0       0       0       0       0       0       0
   275 ;;      Temps:          0       0       0       0       0       0       0       0       0
   276 ;;      Totals:         8       0       0       0       0       0       0       0       0
   277 ;;Total ram usage:        8 bytes
   278 ;; Hardware stack levels used: 1
   279 ;; Hardware stack levels required when called: 1
   280 ;; This function calls:
   281 ;;		___aldiv
   282 ;; This function is called by:
   283 ;;		_main
   284 ;; This function uses a non-reentrant model
   285 ;;
   286                           
   287                           	psect	text2
   288   007E84                     __ptext2:
   289                           	callstack 0
   290   007E84                     _USART_Init:
   291                           	callstack 29
   292   007E84                     
   293                           ;USART.c: 16:     TRISCbits.RC6=0;
   294   007E84  9C94               	bcf	148,6,c	;volatile
   295                           
   296                           ;USART.c: 17:     TRISCbits.RC7=1;
   297   007E86  8E94               	bsf	148,7,c	;volatile
   298   007E88                     
   299                           ;USART.c: 19:     SPBRG=(unsigned char)((8000000/BAUD)/64)-1;
   300   007E88  C00F  F005         	movff	USART_Init@BAUD,___aldiv@divisor
   301   007E8C  C010  F006         	movff	USART_Init@BAUD+1,___aldiv@divisor+1
   302   007E90  C011  F007         	movff	USART_Init@BAUD+2,___aldiv@divisor+2
   303   007E94  C012  F008         	movff	USART_Init@BAUD+3,___aldiv@divisor+3
   304   007E98  0E00               	movlw	0
   305   007E9A  6E01               	movwf	___aldiv@dividend^0,c
   306   007E9C  0E12               	movlw	18
   307   007E9E  6E02               	movwf	(___aldiv@dividend+1)^0,c
   308   007EA0  0E7A               	movlw	122
   309   007EA2  6E03               	movwf	(___aldiv@dividend+2)^0,c
   310   007EA4  0E00               	movlw	0
   311   007EA6  6E04               	movwf	(___aldiv@dividend+3)^0,c
   312   007EA8  EC7A  F03F         	call	___aldiv	;wreg free
   313   007EAC  C001  F013         	movff	?___aldiv,_USART_Init$824
   314   007EB0  C002  F014         	movff	?___aldiv+1,_USART_Init$824+1
   315   007EB4  C003  F015         	movff	?___aldiv+2,_USART_Init$824+2
   316   007EB8  C004  F016         	movff	?___aldiv+3,_USART_Init$824+3
   317                           
   318                           ;USART.c: 19:     SPBRG=(unsigned char)((8000000/BAUD)/64)-1;
   319   007EBC  C013  F001         	movff	_USART_Init$824,___aldiv@dividend
   320   007EC0  C014  F002         	movff	_USART_Init$824+1,___aldiv@dividend+1
   321   007EC4  C015  F003         	movff	_USART_Init$824+2,___aldiv@dividend+2
   322   007EC8  C016  F004         	movff	_USART_Init$824+3,___aldiv@dividend+3
   323   007ECC  0E40               	movlw	64
   324   007ECE  6E05               	movwf	___aldiv@divisor^0,c
   325   007ED0  0E00               	movlw	0
   326   007ED2  6E06               	movwf	(___aldiv@divisor+1)^0,c
   327   007ED4  0E00               	movlw	0
   328   007ED6  6E07               	movwf	(___aldiv@divisor+2)^0,c
   329   007ED8  0E00               	movlw	0
   330   007EDA  6E08               	movwf	(___aldiv@divisor+3)^0,c
   331   007EDC  EC7A  F03F         	call	___aldiv	;wreg free
   332   007EE0  0401               	decf	?___aldiv^0,w,c
   333   007EE2  6EAF               	movwf	175,c	;volatile
   334   007EE4                     
   335                           ;USART.c: 21:     TXSTAbits.BRGH=0;
   336   007EE4  94AC               	bcf	172,2,c	;volatile
   337   007EE6                     
   338                           ;USART.c: 22:     TXSTAbits.SYNC=0;
   339   007EE6  98AC               	bcf	172,4,c	;volatile
   340   007EE8                     
   341                           ;USART.c: 23:     RCSTAbits.SPEN =1;
   342   007EE8  8EAB               	bsf	171,7,c	;volatile
   343   007EEA                     
   344                           ;USART.c: 25:     TXSTAbits.TX9=0;
   345   007EEA  9CAC               	bcf	172,6,c	;volatile
   346   007EEC                     
   347                           ;USART.c: 26:     TXSTAbits.TXEN=1;
   348   007EEC  8AAC               	bsf	172,5,c	;volatile
   349   007EEE                     
   350                           ;USART.c: 28:     RCSTAbits.RC9=0;
   351   007EEE  9CAB               	bcf	171,6,c	;volatile
   352   007EF0                     
   353                           ;USART.c: 29:     RCSTAbits.CREN=1;
   354   007EF0  88AB               	bsf	171,4,c	;volatile
   355   007EF2  0012               	return		;funcret
   356   007EF4                     __end_of_USART_Init:
   357                           	callstack 0
   358                           
   359 ;; *************** function ___aldiv *****************
   360 ;; Defined at:
   361 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aldiv.c"
   362 ;; Parameters:    Size  Location     Type
   363 ;;  dividend        4    0[COMRAM] long 
   364 ;;  divisor         4    4[COMRAM] long 
   365 ;; Auto vars:     Size  Location     Type
   366 ;;  quotient        4   10[COMRAM] long 
   367 ;;  sign            1    9[COMRAM] unsigned char 
   368 ;;  counter         1    8[COMRAM] unsigned char 
   369 ;; Return value:  Size  Location     Type
   370 ;;                  4    0[COMRAM] long 
   371 ;; Registers used:
   372 ;;		wreg, status,2, status,0
   373 ;; Tracked objects:
   374 ;;		On entry : 0/0
   375 ;;		On exit  : 0/0
   376 ;;		Unchanged: 0/0
   377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   378 ;;      Params:         8       0       0       0       0       0       0       0       0
   379 ;;      Locals:         6       0       0       0       0       0       0       0       0
   380 ;;      Temps:          0       0       0       0       0       0       0       0       0
   381 ;;      Totals:        14       0       0       0       0       0       0       0       0
   382 ;;Total ram usage:       14 bytes
   383 ;; Hardware stack levels used: 1
   384 ;; This function calls:
   385 ;;		Nothing
   386 ;; This function is called by:
   387 ;;		_USART_Init
   388 ;; This function uses a non-reentrant model
   389 ;;
   390                           
   391                           	psect	text3
   392   007EF4                     __ptext3:
   393                           	callstack 0
   394   007EF4                     ___aldiv:
   395                           	callstack 29
   396   007EF4  0E00               	movlw	0
   397   007EF6  6E0A               	movwf	___aldiv@sign^0,c
   398   007EF8  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
   399   007EFA  EF83  F03F         	goto	u70
   400   007EFE  EF81  F03F         	goto	u71
   401   007F02                     u71:
   402   007F02  EF8D  F03F         	goto	l797
   403   007F06                     u70:
   404   007F06  1E08               	comf	(___aldiv@divisor+3)^0,f,c
   405   007F08  1E07               	comf	(___aldiv@divisor+2)^0,f,c
   406   007F0A  1E06               	comf	(___aldiv@divisor+1)^0,f,c
   407   007F0C  6C05               	negf	___aldiv@divisor^0,c
   408   007F0E  0E00               	movlw	0
   409   007F10  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
   410   007F12  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
   411   007F14  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
   412   007F16  0E01               	movlw	1
   413   007F18  6E0A               	movwf	___aldiv@sign^0,c
   414   007F1A                     l797:
   415   007F1A  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
   416   007F1C  EF94  F03F         	goto	u80
   417   007F20  EF92  F03F         	goto	u81
   418   007F24                     u81:
   419   007F24  EF9E  F03F         	goto	l803
   420   007F28                     u80:
   421   007F28  1E04               	comf	(___aldiv@dividend+3)^0,f,c
   422   007F2A  1E03               	comf	(___aldiv@dividend+2)^0,f,c
   423   007F2C  1E02               	comf	(___aldiv@dividend+1)^0,f,c
   424   007F2E  6C01               	negf	___aldiv@dividend^0,c
   425   007F30  0E00               	movlw	0
   426   007F32  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
   427   007F34  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
   428   007F36  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
   429   007F38  0E01               	movlw	1
   430   007F3A  1A0A               	xorwf	___aldiv@sign^0,f,c
   431   007F3C                     l803:
   432   007F3C  0E00               	movlw	0
   433   007F3E  6E0B               	movwf	___aldiv@quotient^0,c
   434   007F40  0E00               	movlw	0
   435   007F42  6E0C               	movwf	(___aldiv@quotient+1)^0,c
   436   007F44  0E00               	movlw	0
   437   007F46  6E0D               	movwf	(___aldiv@quotient+2)^0,c
   438   007F48  0E00               	movlw	0
   439   007F4A  6E0E               	movwf	(___aldiv@quotient+3)^0,c
   440   007F4C  5005               	movf	___aldiv@divisor^0,w,c
   441   007F4E  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
   442   007F50  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
   443   007F52  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
   444   007F54  B4D8               	btfsc	status,2,c
   445   007F56  EFAF  F03F         	goto	u91
   446   007F5A  EFB1  F03F         	goto	u90
   447   007F5E                     u91:
   448   007F5E  EFE7  F03F         	goto	l825
   449   007F62                     u90:
   450   007F62  0E01               	movlw	1
   451   007F64  6E09               	movwf	___aldiv@counter^0,c
   452   007F66  EFBB  F03F         	goto	l811
   453   007F6A                     l809:
   454   007F6A  90D8               	bcf	status,0,c
   455   007F6C  3605               	rlcf	___aldiv@divisor^0,f,c
   456   007F6E  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
   457   007F70  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
   458   007F72  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
   459   007F74  2A09               	incf	___aldiv@counter^0,f,c
   460   007F76                     l811:
   461   007F76  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
   462   007F78  EFC0  F03F         	goto	u101
   463   007F7C  EFC2  F03F         	goto	u100
   464   007F80                     u101:
   465   007F80  EFB5  F03F         	goto	l809
   466   007F84                     u100:
   467   007F84                     l813:
   468   007F84  90D8               	bcf	status,0,c
   469   007F86  360B               	rlcf	___aldiv@quotient^0,f,c
   470   007F88  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
   471   007F8A  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
   472   007F8C  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
   473   007F8E  5005               	movf	___aldiv@divisor^0,w,c
   474   007F90  5C01               	subwf	___aldiv@dividend^0,w,c
   475   007F92  5006               	movf	(___aldiv@divisor+1)^0,w,c
   476   007F94  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
   477   007F96  5007               	movf	(___aldiv@divisor+2)^0,w,c
   478   007F98  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
   479   007F9A  5008               	movf	(___aldiv@divisor+3)^0,w,c
   480   007F9C  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
   481   007F9E  A0D8               	btfss	status,0,c
   482   007FA0  EFD4  F03F         	goto	u111
   483   007FA4  EFD6  F03F         	goto	u110
   484   007FA8                     u111:
   485   007FA8  EFDF  F03F         	goto	l821
   486   007FAC                     u110:
   487   007FAC  5005               	movf	___aldiv@divisor^0,w,c
   488   007FAE  5E01               	subwf	___aldiv@dividend^0,f,c
   489   007FB0  5006               	movf	(___aldiv@divisor+1)^0,w,c
   490   007FB2  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
   491   007FB4  5007               	movf	(___aldiv@divisor+2)^0,w,c
   492   007FB6  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
   493   007FB8  5008               	movf	(___aldiv@divisor+3)^0,w,c
   494   007FBA  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
   495   007FBC  800B               	bsf	___aldiv@quotient^0,0,c
   496   007FBE                     l821:
   497   007FBE  90D8               	bcf	status,0,c
   498   007FC0  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
   499   007FC2  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
   500   007FC4  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
   501   007FC6  3205               	rrcf	___aldiv@divisor^0,f,c
   502   007FC8  2E09               	decfsz	___aldiv@counter^0,f,c
   503   007FCA  EFC2  F03F         	goto	l813
   504   007FCE                     l825:
   505   007FCE  500A               	movf	___aldiv@sign^0,w,c
   506   007FD0  B4D8               	btfsc	status,2,c
   507   007FD2  EFED  F03F         	goto	u121
   508   007FD6  EFEF  F03F         	goto	u120
   509   007FDA                     u121:
   510   007FDA  EFF7  F03F         	goto	l829
   511   007FDE                     u120:
   512   007FDE  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
   513   007FE0  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
   514   007FE2  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
   515   007FE4  6C0B               	negf	___aldiv@quotient^0,c
   516   007FE6  0E00               	movlw	0
   517   007FE8  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
   518   007FEA  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
   519   007FEC  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
   520   007FEE                     l829:
   521   007FEE  C00B  F001         	movff	___aldiv@quotient,?___aldiv
   522   007FF2  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
   523   007FF6  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
   524   007FFA  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
   525   007FFE  0012               	return		;funcret
   526   008000                     __end_of___aldiv:
   527                           	callstack 0
   528   000000                     
   529                           	psect	rparam
   530   000000                     
   531                           	psect	idloc
   532                           
   533                           ;Config register IDLOC0 @ 0x200000
   534                           ;	unspecified, using default values
   535   200000                     	org	2097152
   536   200000  FF                 	db	255
   537                           
   538                           ;Config register IDLOC1 @ 0x200001
   539                           ;	unspecified, using default values
   540   200001                     	org	2097153
   541   200001  FF                 	db	255
   542                           
   543                           ;Config register IDLOC2 @ 0x200002
   544                           ;	unspecified, using default values
   545   200002                     	org	2097154
   546   200002  FF                 	db	255
   547                           
   548                           ;Config register IDLOC3 @ 0x200003
   549                           ;	unspecified, using default values
   550   200003                     	org	2097155
   551   200003  FF                 	db	255
   552                           
   553                           ;Config register IDLOC4 @ 0x200004
   554                           ;	unspecified, using default values
   555   200004                     	org	2097156
   556   200004  FF                 	db	255
   557                           
   558                           ;Config register IDLOC5 @ 0x200005
   559                           ;	unspecified, using default values
   560   200005                     	org	2097157
   561   200005  FF                 	db	255
   562                           
   563                           ;Config register IDLOC6 @ 0x200006
   564                           ;	unspecified, using default values
   565   200006                     	org	2097158
   566   200006  FF                 	db	255
   567                           
   568                           ;Config register IDLOC7 @ 0x200007
   569                           ;	unspecified, using default values
   570   200007                     	org	2097159
   571   200007  FF                 	db	255
   572                           
   573                           	psect	config
   574                           
   575                           ;Config register CONFIG1L @ 0x300000
   576                           ;	PLL Prescaler Selection bits
   577                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   578                           ;	System Clock Postscaler Selection bits
   579                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   580                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   581                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   582   300000                     	org	3145728
   583   300000  00                 	db	0
   584                           
   585                           ;Config register CONFIG1H @ 0x300001
   586                           ;	Oscillator Selection bits
   587                           ;	FOSC = HS, HS oscillator (HS)
   588                           ;	Fail-Safe Clock Monitor Enable bit
   589                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   590                           ;	Internal/External Oscillator Switchover bit
   591                           ;	IESO = OFF, Oscillator Switchover mode disabled
   592   300001                     	org	3145729
   593   300001  0C                 	db	12
   594                           
   595                           ;Config register CONFIG2L @ 0x300002
   596                           ;	Power-up Timer Enable bit
   597                           ;	PWRT = ON, PWRT enabled
   598                           ;	Brown-out Reset Enable bits
   599                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   600                           ;	Brown-out Reset Voltage bits
   601                           ;	BORV = 3, Minimum setting 2.05V
   602                           ;	USB Voltage Regulator Enable bit
   603                           ;	VREGEN = OFF, USB voltage regulator disabled
   604   300002                     	org	3145730
   605   300002  18                 	db	24
   606                           
   607                           ;Config register CONFIG2H @ 0x300003
   608                           ;	Watchdog Timer Enable bit
   609                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   610                           ;	Watchdog Timer Postscale Select bits
   611                           ;	WDTPS = 32768, 1:32768
   612   300003                     	org	3145731
   613   300003  1E                 	db	30
   614                           
   615                           ; Padding undefined space
   616   300004                     	org	3145732
   617   300004  FF                 	db	255
   618                           
   619                           ;Config register CONFIG3H @ 0x300005
   620                           ;	CCP2 MUX bit
   621                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   622                           ;	PORTB A/D Enable bit
   623                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   624                           ;	Low-Power Timer 1 Oscillator Enable bit
   625                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   626                           ;	MCLR Pin Enable bit
   627                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   628   300005                     	org	3145733
   629   300005  81                 	db	129
   630                           
   631                           ;Config register CONFIG4L @ 0x300006
   632                           ;	Stack Full/Underflow Reset Enable bit
   633                           ;	STVREN = ON, Stack full/underflow will cause Reset
   634                           ;	Single-Supply ICSP Enable bit
   635                           ;	LVP = ON, Single-Supply ICSP enabled
   636                           ;	Extended Instruction Set Enable bit
   637                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   638                           ;	Background Debugger Enable bit
   639                           ;	DEBUG = 0x1, unprogrammed default
   640   300006                     	org	3145734
   641   300006  85                 	db	133
   642                           
   643                           ; Padding undefined space
   644   300007                     	org	3145735
   645   300007  FF                 	db	255
   646                           
   647                           ;Config register CONFIG5L @ 0x300008
   648                           ;	Code Protection bit
   649                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   650                           ;	Code Protection bit
   651                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   652                           ;	Code Protection bit
   653                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   654                           ;	Code Protection bit
   655                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   656   300008                     	org	3145736
   657   300008  0F                 	db	15
   658                           
   659                           ;Config register CONFIG5H @ 0x300009
   660                           ;	Boot Block Code Protection bit
   661                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   662                           ;	Data EEPROM Code Protection bit
   663                           ;	CPD = OFF, Data EEPROM is not code-protected
   664   300009                     	org	3145737
   665   300009  C0                 	db	192
   666                           
   667                           ;Config register CONFIG6L @ 0x30000A
   668                           ;	Write Protection bit
   669                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   670                           ;	Write Protection bit
   671                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   672                           ;	Write Protection bit
   673                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   674                           ;	Write Protection bit
   675                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   676   30000A                     	org	3145738
   677   30000A  0F                 	db	15
   678                           
   679                           ;Config register CONFIG6H @ 0x30000B
   680                           ;	Configuration Register Write Protection bit
   681                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   682                           ;	Boot Block Write Protection bit
   683                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   684                           ;	Data EEPROM Write Protection bit
   685                           ;	WRTD = OFF, Data EEPROM is not write-protected
   686   30000B                     	org	3145739
   687   30000B  E0                 	db	224
   688                           
   689                           ;Config register CONFIG7L @ 0x30000C
   690                           ;	Table Read Protection bit
   691                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   692                           ;	Table Read Protection bit
   693                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   694                           ;	Table Read Protection bit
   695                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   696                           ;	Table Read Protection bit
   697                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   698   30000C                     	org	3145740
   699   30000C  0F                 	db	15
   700                           
   701                           ;Config register CONFIG7H @ 0x30000D
   702                           ;	Boot Block Table Read Protection bit
   703                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   704   30000D                     	org	3145741
   705   30000D  40                 	db	64
   706                           tosu	equ	0xFFF
   707                           tosh	equ	0xFFE
   708                           tosl	equ	0xFFD
   709                           stkptr	equ	0xFFC
   710                           pclatu	equ	0xFFB
   711                           pclath	equ	0xFFA
   712                           pcl	equ	0xFF9
   713                           tblptru	equ	0xFF8
   714                           tblptrh	equ	0xFF7
   715                           tblptrl	equ	0xFF6
   716                           tablat	equ	0xFF5
   717                           prodh	equ	0xFF4
   718                           prodl	equ	0xFF3
   719                           indf0	equ	0xFEF
   720                           postinc0	equ	0xFEE
   721                           postdec0	equ	0xFED
   722                           preinc0	equ	0xFEC
   723                           plusw0	equ	0xFEB
   724                           fsr0h	equ	0xFEA
   725                           fsr0l	equ	0xFE9
   726                           wreg	equ	0xFE8
   727                           indf1	equ	0xFE7
   728                           postinc1	equ	0xFE6
   729                           postdec1	equ	0xFE5
   730                           preinc1	equ	0xFE4
   731                           plusw1	equ	0xFE3
   732                           fsr1h	equ	0xFE2
   733                           fsr1l	equ	0xFE1
   734                           bsr	equ	0xFE0
   735                           indf2	equ	0xFDF
   736                           postinc2	equ	0xFDE
   737                           postdec2	equ	0xFDD
   738                           preinc2	equ	0xFDC
   739                           plusw2	equ	0xFDB
   740                           fsr2h	equ	0xFDA
   741                           fsr2l	equ	0xFD9
   742                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     24      24
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_USART_Init
    _USART_Init->___aldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     740
                                             22 COMRAM     2     2      0
                         _USART_Init
                           _USART_Tx
 ---------------------------------------------------------------------------------
 (1) _USART_Tx                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4     725
                                             14 COMRAM     8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     604
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _USART_Init
     ___aldiv
   _USART_Tx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     18      18       1       25.3%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBIGSFRhh         50      0       0      20        0.0%
BITBIGSFRhll        16      0       0      21        0.0%
BITBIGSFRl          34      0       0      22        0.0%
ABS                  0      0       0      23        0.0%
BIGRAM             7FF      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Jan 10 23:17:56 2024

                     l32 7E2E                       l29 7EF2                       u70 7F06  
                     u71 7F02                       u80 7F28                       u81 7F24  
                     u90 7F62                       u91 7F5E                      l117 7FFE  
                    l801 7F38                      l811 7F76                      l803 7F3C  
                    l821 7FBE                      l813 7F84                      l805 7F4C  
                    l823 7FC8                      l815 7F8E                      l807 7F62  
                    l817 7FAC                      l809 7F6A                      l825 7FCE  
                    l841 7EE8                      l833 7E84                      l827 7FDE  
                    l819 7FBC                      l843 7EEA                      l835 7E88  
                    l851 7E30                      l829 7FEE                      l845 7EEC  
                    l837 7EE4                      l773 7E2A                      l853 7E44  
                    l791 7EF8                      l847 7EEE                      l839 7EE6  
                    l855 7E4A                      l793 7F06                      l849 7EF0  
                    l857 7E60                      l795 7F16                      l859 7E66  
                    l797 7F1A                      l789 7EF4                      l799 7F28  
                    u100 7F84                      u101 7F80                      u110 7FAC  
                    u111 7FA8                      u120 7FDE                      u121 7FDA  
                    u137 7E54                      u147 7E70                      wreg 000FE8  
                   _main 7E30                     start 0000             ___param_bank 000000  
        __end_of___aldiv 8000                    ?_main 0001                    _RCREG 000FAE  
                  _SPBRG 000FAF                    _TXREG 000FAD         __end_of_USART_Tx 7E30  
           USART_Tx@data 0001                    status 000FD8              ?_USART_Init 000F  
        __initialization 7E22             __end_of_main 7E84                   ??_main 0017  
          __activetblptr 000000                ??___aldiv 0009                   isa$std 000001  
             __accesstop 0060  __end_of__initialization 7E22            ___rparam_used 000001  
         __pcstackCOMRAM 0001                ?_USART_Tx 0001               ??_USART_Tx 0001  
           ??_USART_Init 0013                  __Hparam 0000                  __Lparam 0000  
                ___aldiv 7EF4           USART_Init@BAUD 000F                  __pcinit 7E22  
                __ramtop 0800                  __ptext0 7E30                  __ptext1 7E28  
                __ptext2 7E84                  __ptext3 7EF4         ___aldiv@dividend 0001  
     __end_of_USART_Init 7EF4     end_of_initialization 7E22                _RCSTAbits 000FAB  
       ___aldiv@quotient 000B                _TRISCbits 000F94                _TXSTAbits 000FAC  
    start_initialization 7E22                 ?___aldiv 0001          ___aldiv@divisor 0005  
        ___aldiv@counter 0009                 _USART_Tx 7E28                 __Hrparam 0000  
               __Lrparam 0000                 isa$xinst 000000           _USART_Init$824 0013  
           ___aldiv@sign 000A               _USART_Init 7E84  
