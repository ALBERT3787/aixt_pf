

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Jan 06 14:28:35 2024

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    15   000000                     
    16                           ; Version 2.40
    17                           ; Generated 17/11/2021 GMT
    18                           ; 
    19                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F2550 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51   000000                     _T2CONbits	set	4042
    52   000000                     _ADCON0bits	set	4034
    53   000000                     _TRISCbits	set	3988
    54   000000                     _CCPR1L	set	4030
    55   000000                     _ADCON2	set	4032
    56   000000                     _ADCON1	set	4033
    57   000000                     _ADRES	set	4035
    58   000000                     _T2CON	set	4042
    59   000000                     _PR2	set	4043
    60   000000                     _ADCON0	set	4034
    61   000000                     _TMR2	set	4044
    62   000000                     _CCP1CON	set	4029
    63                           
    64                           ; #config settings
    65                           
    66                           	psect	cinit
    67   007D62                     __pcinit:
    68                           	callstack 0
    69   007D62                     start_initialization:
    70                           	callstack 0
    71   007D62                     __initialization:
    72                           	callstack 0
    73   007D62                     end_of_initialization:
    74                           	callstack 0
    75   007D62                     __end_of__initialization:
    76                           	callstack 0
    77   007D62  0100               	movlb	0
    78   007D64  EF26  F03F         	goto	_main	;jump to C main() function
    79                           
    80                           	psect	cstackCOMRAM
    81   000001                     __pcstackCOMRAM:
    82                           	callstack 0
    83   000001                     ?___lmul:
    84                           	callstack 0
    85   000001                     ___lmul@multiplier:
    86                           	callstack 0
    87                           
    88                           ; 4 bytes @ 0x0
    89   000001                     	ds	4
    90   000005                     ___lmul@multiplicand:
    91                           	callstack 0
    92                           
    93                           ; 4 bytes @ 0x4
    94   000005                     	ds	4
    95   000009                     ___lmul@product:
    96                           	callstack 0
    97                           
    98                           ; 4 bytes @ 0x8
    99   000009                     	ds	4
   100   00000D                     ?___aldiv:
   101                           	callstack 0
   102   00000D                     ___aldiv@dividend:
   103                           	callstack 0
   104                           
   105                           ; 4 bytes @ 0xC
   106   00000D                     	ds	4
   107   000011                     ___aldiv@divisor:
   108                           	callstack 0
   109                           
   110                           ; 4 bytes @ 0x10
   111   000011                     	ds	4
   112   000015                     ___aldiv@counter:
   113                           	callstack 0
   114                           
   115                           ; 1 bytes @ 0x14
   116   000015                     	ds	1
   117   000016                     ___aldiv@sign:
   118                           	callstack 0
   119                           
   120                           ; 1 bytes @ 0x15
   121   000016                     	ds	1
   122   000017                     ___aldiv@quotient:
   123                           	callstack 0
   124                           
   125                           ; 4 bytes @ 0x16
   126   000017                     	ds	4
   127   00001B                     ?_map:
   128                           	callstack 0
   129   00001B                     map@x:
   130                           	callstack 0
   131                           
   132                           ; 4 bytes @ 0x1A
   133   00001B                     	ds	4
   134   00001F                     map@eMin:
   135                           	callstack 0
   136                           
   137                           ; 4 bytes @ 0x1E
   138   00001F                     	ds	4
   139   000023                     map@eMax:
   140                           	callstack 0
   141                           
   142                           ; 4 bytes @ 0x22
   143   000023                     	ds	4
   144   000027                     map@sMin:
   145                           	callstack 0
   146                           
   147                           ; 4 bytes @ 0x26
   148   000027                     	ds	4
   149   00002B                     map@sMax:
   150                           	callstack 0
   151                           
   152                           ; 4 bytes @ 0x2A
   153   00002B                     	ds	4
   154   00002F                     main@valor_adc:
   155                           	callstack 0
   156                           
   157                           ; 2 bytes @ 0x2E
   158   00002F                     	ds	2
   159   000031                     main@valor_pwm:
   160                           	callstack 0
   161                           
   162                           ; 1 bytes @ 0x30
   163   000031                     	ds	1
   164                           
   165 ;;
   166 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   167 ;;
   168 ;; *************** function _main *****************
   169 ;; Defined at:
   170 ;;		line 78 in file "PWM.c"
   171 ;; Parameters:    Size  Location     Type
   172 ;;		None
   173 ;; Auto vars:     Size  Location     Type
   174 ;;  valor_adc       2   46[COMRAM] int 
   175 ;;  valor_pwm       1   48[COMRAM] unsigned char 
   176 ;; Return value:  Size  Location     Type
   177 ;;                  1    wreg      void 
   178 ;; Registers used:
   179 ;;		wreg, status,2, status,0, cstack
   180 ;; Tracked objects:
   181 ;;		On entry : 0/0
   182 ;;		On exit  : 0/0
   183 ;;		Unchanged: 0/0
   184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   185 ;;      Params:         0       0       0       0       0       0       0       0       0
   186 ;;      Locals:         3       0       0       0       0       0       0       0       0
   187 ;;      Temps:          0       0       0       0       0       0       0       0       0
   188 ;;      Totals:         3       0       0       0       0       0       0       0       0
   189 ;;Total ram usage:        3 bytes
   190 ;; Hardware stack levels required when called: 2
   191 ;; This function calls:
   192 ;;		_map
   193 ;; This function is called by:
   194 ;;		Startup code after reset
   195 ;; This function uses a non-reentrant model
   196 ;;
   197                           
   198                           	psect	text0
   199   007E4C                     __ptext0:
   200                           	callstack 0
   201   007E4C                     _main:
   202                           	callstack 29
   203   007E4C                     
   204                           ;PWM.c: 80:     ADCON1 = 0x0E;
   205   007E4C  0E0E               	movlw	14
   206   007E4E  6EC1               	movwf	193,c	;volatile
   207                           
   208                           ;PWM.c: 81:     ADCON0 = 0x00;
   209   007E50  0E00               	movlw	0
   210   007E52  6EC2               	movwf	194,c	;volatile
   211                           
   212                           ;PWM.c: 82:     ADCON2 = 0x97;
   213   007E54  0E97               	movlw	151
   214   007E56  6EC0               	movwf	192,c	;volatile
   215   007E58                     
   216                           ;PWM.c: 83:     ADCON0bits.ADON = 1;
   217   007E58  80C2               	bsf	194,0,c	;volatile
   218                           
   219                           ;PWM.c: 85:     PR2 = 0xC;
   220   007E5A  0E0C               	movlw	12
   221   007E5C  6ECB               	movwf	203,c	;volatile
   222                           
   223                           ;PWM.c: 86:     CCPR1L = 0;
   224   007E5E  0E00               	movlw	0
   225   007E60  6EBE               	movwf	190,c	;volatile
   226   007E62                     
   227                           ;PWM.c: 87:     TRISCbits.TRISC2 = 0;
   228   007E62  9494               	bcf	148,2,c	;volatile
   229                           
   230                           ;PWM.c: 88:     T2CON = 0x03;
   231   007E64  0E03               	movlw	3
   232   007E66  6ECA               	movwf	202,c	;volatile
   233                           
   234                           ;PWM.c: 89:     CCP1CON = 0x0C;
   235   007E68  0E0C               	movlw	12
   236   007E6A  6EBD               	movwf	189,c	;volatile
   237                           
   238                           ;PWM.c: 90:     TMR2 = 0;
   239   007E6C  0E00               	movlw	0
   240   007E6E  6ECC               	movwf	204,c	;volatile
   241   007E70                     
   242                           ;PWM.c: 91:     T2CONbits.TMR2ON = 1;
   243   007E70  84CA               	bsf	202,2,c	;volatile
   244   007E72                     l852:
   245                           
   246                           ;PWM.c: 94:     {;PWM.c: 95:         ADCON0bits.GO_DONE = 1;
   247   007E72  82C2               	bsf	194,1,c	;volatile
   248   007E74                     l33:
   249   007E74  B2C2               	btfsc	194,1,c	;volatile
   250   007E76  EF3F  F03F         	goto	u181
   251   007E7A  EF41  F03F         	goto	u180
   252   007E7E                     u181:
   253   007E7E  EF3A  F03F         	goto	l33
   254   007E82                     u180:
   255   007E82                     
   256                           ;PWM.c: 97:         int valor_adc = ADRES;
   257   007E82  CFC3 F02F          	movff	4035,main@valor_adc	;volatile
   258   007E86  CFC4 F030          	movff	4036,main@valor_adc+1	;volatile
   259   007E8A                     
   260                           ;PWM.c: 98:         unsigned char valor_pwm = map(valor_adc, 0, 1023, 0, 50);
   261   007E8A  C02F  F01B         	movff	main@valor_adc,map@x
   262   007E8E  C030  F01C         	movff	main@valor_adc+1,map@x+1
   263   007E92  0E00               	movlw	0
   264   007E94  BE1C               	btfsc	(map@x+1)^0,7,c
   265   007E96  0EFF               	movlw	-1
   266   007E98  6E1D               	movwf	(map@x+2)^0,c
   267   007E9A  6E1E               	movwf	(map@x+3)^0,c
   268   007E9C  0E00               	movlw	0
   269   007E9E  6E1F               	movwf	map@eMin^0,c
   270   007EA0  0E00               	movlw	0
   271   007EA2  6E20               	movwf	(map@eMin+1)^0,c
   272   007EA4  0E00               	movlw	0
   273   007EA6  6E21               	movwf	(map@eMin+2)^0,c
   274   007EA8  0E00               	movlw	0
   275   007EAA  6E22               	movwf	(map@eMin+3)^0,c
   276   007EAC  0EFF               	movlw	255
   277   007EAE  6E23               	movwf	map@eMax^0,c
   278   007EB0  0E03               	movlw	3
   279   007EB2  6E24               	movwf	(map@eMax+1)^0,c
   280   007EB4  0E00               	movlw	0
   281   007EB6  6E25               	movwf	(map@eMax+2)^0,c
   282   007EB8  0E00               	movlw	0
   283   007EBA  6E26               	movwf	(map@eMax+3)^0,c
   284   007EBC  0E00               	movlw	0
   285   007EBE  6E27               	movwf	map@sMin^0,c
   286   007EC0  0E00               	movlw	0
   287   007EC2  6E28               	movwf	(map@sMin+1)^0,c
   288   007EC4  0E00               	movlw	0
   289   007EC6  6E29               	movwf	(map@sMin+2)^0,c
   290   007EC8  0E00               	movlw	0
   291   007ECA  6E2A               	movwf	(map@sMin+3)^0,c
   292   007ECC  0E32               	movlw	50
   293   007ECE  6E2B               	movwf	map@sMax^0,c
   294   007ED0  0E00               	movlw	0
   295   007ED2  6E2C               	movwf	(map@sMax+1)^0,c
   296   007ED4  0E00               	movlw	0
   297   007ED6  6E2D               	movwf	(map@sMax+2)^0,c
   298   007ED8  0E00               	movlw	0
   299   007EDA  6E2E               	movwf	(map@sMax+3)^0,c
   300   007EDC  ECE9  F03E         	call	_map	;wreg free
   301   007EE0  501B               	movf	?_map^0,w,c
   302   007EE2  6E31               	movwf	main@valor_pwm^0,c
   303   007EE4                     
   304                           ;PWM.c: 99:         CCPR1L = (valor_pwm >> 2);
   305   007EE4  4031               	rrncf	main@valor_pwm^0,w,c
   306   007EE6  42E8               	rrncf	wreg,f,c
   307   007EE8  0B3F               	andlw	63
   308   007EEA  6EBE               	movwf	190,c	;volatile
   309   007EEC  EF39  F03F         	goto	l852
   310   007EF0  EF00  F000         	goto	start
   311   007EF4                     __end_of_main:
   312                           	callstack 0
   313                           
   314 ;; *************** function _map *****************
   315 ;; Defined at:
   316 ;;		line 3 in file "./map_function.h"
   317 ;; Parameters:    Size  Location     Type
   318 ;;  x               4   26[COMRAM] long 
   319 ;;  eMin            4   30[COMRAM] long 
   320 ;;  eMax            4   34[COMRAM] long 
   321 ;;  sMin            4   38[COMRAM] long 
   322 ;;  sMax            4   42[COMRAM] long 
   323 ;; Auto vars:     Size  Location     Type
   324 ;;		None
   325 ;; Return value:  Size  Location     Type
   326 ;;                  4   26[COMRAM] long 
   327 ;; Registers used:
   328 ;;		wreg, status,2, status,0, cstack
   329 ;; Tracked objects:
   330 ;;		On entry : 0/0
   331 ;;		On exit  : 0/0
   332 ;;		Unchanged: 0/0
   333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   334 ;;      Params:        20       0       0       0       0       0       0       0       0
   335 ;;      Locals:         0       0       0       0       0       0       0       0       0
   336 ;;      Temps:          0       0       0       0       0       0       0       0       0
   337 ;;      Totals:        20       0       0       0       0       0       0       0       0
   338 ;;Total ram usage:       20 bytes
   339 ;; Hardware stack levels used: 1
   340 ;; Hardware stack levels required when called: 1
   341 ;; This function calls:
   342 ;;		___aldiv
   343 ;;		___lmul
   344 ;; This function is called by:
   345 ;;		_main
   346 ;; This function uses a non-reentrant model
   347 ;;
   348                           
   349                           	psect	text1
   350   007DD2                     __ptext1:
   351                           	callstack 0
   352   007DD2                     _map:
   353                           	callstack 29
   354   007DD2                     
   355                           ;./map_function.h: 3: long map(long x, long eMin, long eMax, long sMin, long sMax);./map
      +                          _function.h: 4: {;./map_function.h: 5:   return(x -eMin)*(sMax-sMin)/(eMax-eMin)+sMin;
   356   007DD2  501F               	movf	map@eMin^0,w,c
   357   007DD4  5C1B               	subwf	map@x^0,w,c
   358   007DD6  6E01               	movwf	___lmul@multiplier^0,c
   359   007DD8  5020               	movf	(map@eMin+1)^0,w,c
   360   007DDA  581C               	subwfb	(map@x+1)^0,w,c
   361   007DDC  6E02               	movwf	(___lmul@multiplier+1)^0,c
   362   007DDE  5021               	movf	(map@eMin+2)^0,w,c
   363   007DE0  581D               	subwfb	(map@x+2)^0,w,c
   364   007DE2  6E03               	movwf	(___lmul@multiplier+2)^0,c
   365   007DE4  5022               	movf	(map@eMin+3)^0,w,c
   366   007DE6  581E               	subwfb	(map@x+3)^0,w,c
   367   007DE8  6E04               	movwf	(___lmul@multiplier+3)^0,c
   368   007DEA  5027               	movf	map@sMin^0,w,c
   369   007DEC  5C2B               	subwf	map@sMax^0,w,c
   370   007DEE  6E05               	movwf	___lmul@multiplicand^0,c
   371   007DF0  5028               	movf	(map@sMin+1)^0,w,c
   372   007DF2  582C               	subwfb	(map@sMax+1)^0,w,c
   373   007DF4  6E06               	movwf	(___lmul@multiplicand+1)^0,c
   374   007DF6  5029               	movf	(map@sMin+2)^0,w,c
   375   007DF8  582D               	subwfb	(map@sMax+2)^0,w,c
   376   007DFA  6E07               	movwf	(___lmul@multiplicand+2)^0,c
   377   007DFC  502A               	movf	(map@sMin+3)^0,w,c
   378   007DFE  582E               	subwfb	(map@sMax+3)^0,w,c
   379   007E00  6E08               	movwf	(___lmul@multiplicand+3)^0,c
   380   007E02  ECB4  F03E         	call	___lmul	;wreg free
   381   007E06  C001  F00D         	movff	?___lmul,___aldiv@dividend
   382   007E0A  C002  F00E         	movff	?___lmul+1,___aldiv@dividend+1
   383   007E0E  C003  F00F         	movff	?___lmul+2,___aldiv@dividend+2
   384   007E12  C004  F010         	movff	?___lmul+3,___aldiv@dividend+3
   385   007E16  501F               	movf	map@eMin^0,w,c
   386   007E18  5C23               	subwf	map@eMax^0,w,c
   387   007E1A  6E11               	movwf	___aldiv@divisor^0,c
   388   007E1C  5020               	movf	(map@eMin+1)^0,w,c
   389   007E1E  5824               	subwfb	(map@eMax+1)^0,w,c
   390   007E20  6E12               	movwf	(___aldiv@divisor+1)^0,c
   391   007E22  5021               	movf	(map@eMin+2)^0,w,c
   392   007E24  5825               	subwfb	(map@eMax+2)^0,w,c
   393   007E26  6E13               	movwf	(___aldiv@divisor+2)^0,c
   394   007E28  5022               	movf	(map@eMin+3)^0,w,c
   395   007E2A  5826               	subwfb	(map@eMax+3)^0,w,c
   396   007E2C  6E14               	movwf	(___aldiv@divisor+3)^0,c
   397   007E2E  EC7A  F03F         	call	___aldiv	;wreg free
   398   007E32  5027               	movf	map@sMin^0,w,c
   399   007E34  240D               	addwf	?___aldiv^0,w,c
   400   007E36  6E1B               	movwf	?_map^0,c
   401   007E38  5028               	movf	(map@sMin+1)^0,w,c
   402   007E3A  200E               	addwfc	(?___aldiv+1)^0,w,c
   403   007E3C  6E1C               	movwf	(?_map+1)^0,c
   404   007E3E  5029               	movf	(map@sMin+2)^0,w,c
   405   007E40  200F               	addwfc	(?___aldiv+2)^0,w,c
   406   007E42  6E1D               	movwf	(?_map+2)^0,c
   407   007E44  502A               	movf	(map@sMin+3)^0,w,c
   408   007E46  2010               	addwfc	(?___aldiv+3)^0,w,c
   409   007E48  6E1E               	movwf	(?_map+3)^0,c
   410   007E4A  0012               	return		;funcret
   411   007E4C                     __end_of_map:
   412                           	callstack 0
   413                           
   414 ;; *************** function ___lmul *****************
   415 ;; Defined at:
   416 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
   417 ;; Parameters:    Size  Location     Type
   418 ;;  multiplier      4    0[COMRAM] unsigned long 
   419 ;;  multiplicand    4    4[COMRAM] unsigned long 
   420 ;; Auto vars:     Size  Location     Type
   421 ;;  product         4    8[COMRAM] unsigned long 
   422 ;; Return value:  Size  Location     Type
   423 ;;                  4    0[COMRAM] unsigned long 
   424 ;; Registers used:
   425 ;;		wreg, status,2, status,0
   426 ;; Tracked objects:
   427 ;;		On entry : 0/0
   428 ;;		On exit  : 0/0
   429 ;;		Unchanged: 0/0
   430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   431 ;;      Params:         8       0       0       0       0       0       0       0       0
   432 ;;      Locals:         4       0       0       0       0       0       0       0       0
   433 ;;      Temps:          0       0       0       0       0       0       0       0       0
   434 ;;      Totals:        12       0       0       0       0       0       0       0       0
   435 ;;Total ram usage:       12 bytes
   436 ;; Hardware stack levels used: 1
   437 ;; This function calls:
   438 ;;		Nothing
   439 ;; This function is called by:
   440 ;;		_map
   441 ;; This function uses a non-reentrant model
   442 ;;
   443                           
   444                           	psect	text2
   445   007D68                     __ptext2:
   446                           	callstack 0
   447   007D68                     ___lmul:
   448                           	callstack 29
   449   007D68  0E00               	movlw	0
   450   007D6A  6E09               	movwf	___lmul@product^0,c
   451   007D6C  0E00               	movlw	0
   452   007D6E  6E0A               	movwf	(___lmul@product+1)^0,c
   453   007D70  0E00               	movlw	0
   454   007D72  6E0B               	movwf	(___lmul@product+2)^0,c
   455   007D74  0E00               	movlw	0
   456   007D76  6E0C               	movwf	(___lmul@product+3)^0,c
   457   007D78                     l788:
   458   007D78  A001               	btfss	___lmul@multiplier^0,0,c
   459   007D7A  EFC1  F03E         	goto	u101
   460   007D7E  EFC3  F03E         	goto	u100
   461   007D82                     u101:
   462   007D82  EFCB  F03E         	goto	l792
   463   007D86                     u100:
   464   007D86  5005               	movf	___lmul@multiplicand^0,w,c
   465   007D88  2609               	addwf	___lmul@product^0,f,c
   466   007D8A  5006               	movf	(___lmul@multiplicand+1)^0,w,c
   467   007D8C  220A               	addwfc	(___lmul@product+1)^0,f,c
   468   007D8E  5007               	movf	(___lmul@multiplicand+2)^0,w,c
   469   007D90  220B               	addwfc	(___lmul@product+2)^0,f,c
   470   007D92  5008               	movf	(___lmul@multiplicand+3)^0,w,c
   471   007D94  220C               	addwfc	(___lmul@product+3)^0,f,c
   472   007D96                     l792:
   473   007D96  90D8               	bcf	status,0,c
   474   007D98  3605               	rlcf	___lmul@multiplicand^0,f,c
   475   007D9A  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
   476   007D9C  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
   477   007D9E  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
   478   007DA0  90D8               	bcf	status,0,c
   479   007DA2  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
   480   007DA4  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
   481   007DA6  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
   482   007DA8  3201               	rrcf	___lmul@multiplier^0,f,c
   483   007DAA  5001               	movf	___lmul@multiplier^0,w,c
   484   007DAC  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
   485   007DAE  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
   486   007DB0  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
   487   007DB2  A4D8               	btfss	status,2,c
   488   007DB4  EFDE  F03E         	goto	u111
   489   007DB8  EFE0  F03E         	goto	u110
   490   007DBC                     u111:
   491   007DBC  EFBC  F03E         	goto	l788
   492   007DC0                     u110:
   493   007DC0  C009  F001         	movff	___lmul@product,?___lmul
   494   007DC4  C00A  F002         	movff	___lmul@product+1,?___lmul+1
   495   007DC8  C00B  F003         	movff	___lmul@product+2,?___lmul+2
   496   007DCC  C00C  F004         	movff	___lmul@product+3,?___lmul+3
   497   007DD0  0012               	return		;funcret
   498   007DD2                     __end_of___lmul:
   499                           	callstack 0
   500                           
   501 ;; *************** function ___aldiv *****************
   502 ;; Defined at:
   503 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aldiv.c"
   504 ;; Parameters:    Size  Location     Type
   505 ;;  dividend        4   12[COMRAM] long 
   506 ;;  divisor         4   16[COMRAM] long 
   507 ;; Auto vars:     Size  Location     Type
   508 ;;  quotient        4   22[COMRAM] long 
   509 ;;  sign            1   21[COMRAM] unsigned char 
   510 ;;  counter         1   20[COMRAM] unsigned char 
   511 ;; Return value:  Size  Location     Type
   512 ;;                  4   12[COMRAM] long 
   513 ;; Registers used:
   514 ;;		wreg, status,2, status,0
   515 ;; Tracked objects:
   516 ;;		On entry : 0/0
   517 ;;		On exit  : 0/0
   518 ;;		Unchanged: 0/0
   519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   520 ;;      Params:         8       0       0       0       0       0       0       0       0
   521 ;;      Locals:         6       0       0       0       0       0       0       0       0
   522 ;;      Temps:          0       0       0       0       0       0       0       0       0
   523 ;;      Totals:        14       0       0       0       0       0       0       0       0
   524 ;;Total ram usage:       14 bytes
   525 ;; Hardware stack levels used: 1
   526 ;; This function calls:
   527 ;;		Nothing
   528 ;; This function is called by:
   529 ;;		_map
   530 ;; This function uses a non-reentrant model
   531 ;;
   532                           
   533                           	psect	text3
   534   007EF4                     __ptext3:
   535                           	callstack 0
   536   007EF4                     ___aldiv:
   537                           	callstack 29
   538   007EF4  0E00               	movlw	0
   539   007EF6  6E16               	movwf	___aldiv@sign^0,c
   540   007EF8  BE14               	btfsc	(___aldiv@divisor+3)^0,7,c
   541   007EFA  EF83  F03F         	goto	u120
   542   007EFE  EF81  F03F         	goto	u121
   543   007F02                     u121:
   544   007F02  EF8D  F03F         	goto	l804
   545   007F06                     u120:
   546   007F06  1E14               	comf	(___aldiv@divisor+3)^0,f,c
   547   007F08  1E13               	comf	(___aldiv@divisor+2)^0,f,c
   548   007F0A  1E12               	comf	(___aldiv@divisor+1)^0,f,c
   549   007F0C  6C11               	negf	___aldiv@divisor^0,c
   550   007F0E  0E00               	movlw	0
   551   007F10  2212               	addwfc	(___aldiv@divisor+1)^0,f,c
   552   007F12  2213               	addwfc	(___aldiv@divisor+2)^0,f,c
   553   007F14  2214               	addwfc	(___aldiv@divisor+3)^0,f,c
   554   007F16  0E01               	movlw	1
   555   007F18  6E16               	movwf	___aldiv@sign^0,c
   556   007F1A                     l804:
   557   007F1A  BE10               	btfsc	(___aldiv@dividend+3)^0,7,c
   558   007F1C  EF94  F03F         	goto	u130
   559   007F20  EF92  F03F         	goto	u131
   560   007F24                     u131:
   561   007F24  EF9E  F03F         	goto	l810
   562   007F28                     u130:
   563   007F28  1E10               	comf	(___aldiv@dividend+3)^0,f,c
   564   007F2A  1E0F               	comf	(___aldiv@dividend+2)^0,f,c
   565   007F2C  1E0E               	comf	(___aldiv@dividend+1)^0,f,c
   566   007F2E  6C0D               	negf	___aldiv@dividend^0,c
   567   007F30  0E00               	movlw	0
   568   007F32  220E               	addwfc	(___aldiv@dividend+1)^0,f,c
   569   007F34  220F               	addwfc	(___aldiv@dividend+2)^0,f,c
   570   007F36  2210               	addwfc	(___aldiv@dividend+3)^0,f,c
   571   007F38  0E01               	movlw	1
   572   007F3A  1A16               	xorwf	___aldiv@sign^0,f,c
   573   007F3C                     l810:
   574   007F3C  0E00               	movlw	0
   575   007F3E  6E17               	movwf	___aldiv@quotient^0,c
   576   007F40  0E00               	movlw	0
   577   007F42  6E18               	movwf	(___aldiv@quotient+1)^0,c
   578   007F44  0E00               	movlw	0
   579   007F46  6E19               	movwf	(___aldiv@quotient+2)^0,c
   580   007F48  0E00               	movlw	0
   581   007F4A  6E1A               	movwf	(___aldiv@quotient+3)^0,c
   582   007F4C  5011               	movf	___aldiv@divisor^0,w,c
   583   007F4E  1012               	iorwf	(___aldiv@divisor+1)^0,w,c
   584   007F50  1013               	iorwf	(___aldiv@divisor+2)^0,w,c
   585   007F52  1014               	iorwf	(___aldiv@divisor+3)^0,w,c
   586   007F54  B4D8               	btfsc	status,2,c
   587   007F56  EFAF  F03F         	goto	u141
   588   007F5A  EFB1  F03F         	goto	u140
   589   007F5E                     u141:
   590   007F5E  EFE7  F03F         	goto	l832
   591   007F62                     u140:
   592   007F62  0E01               	movlw	1
   593   007F64  6E15               	movwf	___aldiv@counter^0,c
   594   007F66  EFBB  F03F         	goto	l818
   595   007F6A                     l816:
   596   007F6A  90D8               	bcf	status,0,c
   597   007F6C  3611               	rlcf	___aldiv@divisor^0,f,c
   598   007F6E  3612               	rlcf	(___aldiv@divisor+1)^0,f,c
   599   007F70  3613               	rlcf	(___aldiv@divisor+2)^0,f,c
   600   007F72  3614               	rlcf	(___aldiv@divisor+3)^0,f,c
   601   007F74  2A15               	incf	___aldiv@counter^0,f,c
   602   007F76                     l818:
   603   007F76  AE14               	btfss	(___aldiv@divisor+3)^0,7,c
   604   007F78  EFC0  F03F         	goto	u151
   605   007F7C  EFC2  F03F         	goto	u150
   606   007F80                     u151:
   607   007F80  EFB5  F03F         	goto	l816
   608   007F84                     u150:
   609   007F84                     l820:
   610   007F84  90D8               	bcf	status,0,c
   611   007F86  3617               	rlcf	___aldiv@quotient^0,f,c
   612   007F88  3618               	rlcf	(___aldiv@quotient+1)^0,f,c
   613   007F8A  3619               	rlcf	(___aldiv@quotient+2)^0,f,c
   614   007F8C  361A               	rlcf	(___aldiv@quotient+3)^0,f,c
   615   007F8E  5011               	movf	___aldiv@divisor^0,w,c
   616   007F90  5C0D               	subwf	___aldiv@dividend^0,w,c
   617   007F92  5012               	movf	(___aldiv@divisor+1)^0,w,c
   618   007F94  580E               	subwfb	(___aldiv@dividend+1)^0,w,c
   619   007F96  5013               	movf	(___aldiv@divisor+2)^0,w,c
   620   007F98  580F               	subwfb	(___aldiv@dividend+2)^0,w,c
   621   007F9A  5014               	movf	(___aldiv@divisor+3)^0,w,c
   622   007F9C  5810               	subwfb	(___aldiv@dividend+3)^0,w,c
   623   007F9E  A0D8               	btfss	status,0,c
   624   007FA0  EFD4  F03F         	goto	u161
   625   007FA4  EFD6  F03F         	goto	u160
   626   007FA8                     u161:
   627   007FA8  EFDF  F03F         	goto	l828
   628   007FAC                     u160:
   629   007FAC  5011               	movf	___aldiv@divisor^0,w,c
   630   007FAE  5E0D               	subwf	___aldiv@dividend^0,f,c
   631   007FB0  5012               	movf	(___aldiv@divisor+1)^0,w,c
   632   007FB2  5A0E               	subwfb	(___aldiv@dividend+1)^0,f,c
   633   007FB4  5013               	movf	(___aldiv@divisor+2)^0,w,c
   634   007FB6  5A0F               	subwfb	(___aldiv@dividend+2)^0,f,c
   635   007FB8  5014               	movf	(___aldiv@divisor+3)^0,w,c
   636   007FBA  5A10               	subwfb	(___aldiv@dividend+3)^0,f,c
   637   007FBC  8017               	bsf	___aldiv@quotient^0,0,c
   638   007FBE                     l828:
   639   007FBE  90D8               	bcf	status,0,c
   640   007FC0  3214               	rrcf	(___aldiv@divisor+3)^0,f,c
   641   007FC2  3213               	rrcf	(___aldiv@divisor+2)^0,f,c
   642   007FC4  3212               	rrcf	(___aldiv@divisor+1)^0,f,c
   643   007FC6  3211               	rrcf	___aldiv@divisor^0,f,c
   644   007FC8  2E15               	decfsz	___aldiv@counter^0,f,c
   645   007FCA  EFC2  F03F         	goto	l820
   646   007FCE                     l832:
   647   007FCE  5016               	movf	___aldiv@sign^0,w,c
   648   007FD0  B4D8               	btfsc	status,2,c
   649   007FD2  EFED  F03F         	goto	u171
   650   007FD6  EFEF  F03F         	goto	u170
   651   007FDA                     u171:
   652   007FDA  EFF7  F03F         	goto	l836
   653   007FDE                     u170:
   654   007FDE  1E1A               	comf	(___aldiv@quotient+3)^0,f,c
   655   007FE0  1E19               	comf	(___aldiv@quotient+2)^0,f,c
   656   007FE2  1E18               	comf	(___aldiv@quotient+1)^0,f,c
   657   007FE4  6C17               	negf	___aldiv@quotient^0,c
   658   007FE6  0E00               	movlw	0
   659   007FE8  2218               	addwfc	(___aldiv@quotient+1)^0,f,c
   660   007FEA  2219               	addwfc	(___aldiv@quotient+2)^0,f,c
   661   007FEC  221A               	addwfc	(___aldiv@quotient+3)^0,f,c
   662   007FEE                     l836:
   663   007FEE  C017  F00D         	movff	___aldiv@quotient,?___aldiv
   664   007FF2  C018  F00E         	movff	___aldiv@quotient+1,?___aldiv+1
   665   007FF6  C019  F00F         	movff	___aldiv@quotient+2,?___aldiv+2
   666   007FFA  C01A  F010         	movff	___aldiv@quotient+3,?___aldiv+3
   667   007FFE  0012               	return		;funcret
   668   008000                     __end_of___aldiv:
   669                           	callstack 0
   670   000000                     
   671                           	psect	rparam
   672   000000                     
   673                           	psect	idloc
   674                           
   675                           ;Config register IDLOC0 @ 0x200000
   676                           ;	unspecified, using default values
   677   200000                     	org	2097152
   678   200000  FF                 	db	255
   679                           
   680                           ;Config register IDLOC1 @ 0x200001
   681                           ;	unspecified, using default values
   682   200001                     	org	2097153
   683   200001  FF                 	db	255
   684                           
   685                           ;Config register IDLOC2 @ 0x200002
   686                           ;	unspecified, using default values
   687   200002                     	org	2097154
   688   200002  FF                 	db	255
   689                           
   690                           ;Config register IDLOC3 @ 0x200003
   691                           ;	unspecified, using default values
   692   200003                     	org	2097155
   693   200003  FF                 	db	255
   694                           
   695                           ;Config register IDLOC4 @ 0x200004
   696                           ;	unspecified, using default values
   697   200004                     	org	2097156
   698   200004  FF                 	db	255
   699                           
   700                           ;Config register IDLOC5 @ 0x200005
   701                           ;	unspecified, using default values
   702   200005                     	org	2097157
   703   200005  FF                 	db	255
   704                           
   705                           ;Config register IDLOC6 @ 0x200006
   706                           ;	unspecified, using default values
   707   200006                     	org	2097158
   708   200006  FF                 	db	255
   709                           
   710                           ;Config register IDLOC7 @ 0x200007
   711                           ;	unspecified, using default values
   712   200007                     	org	2097159
   713   200007  FF                 	db	255
   714                           
   715                           	psect	config
   716                           
   717                           ;Config register CONFIG1L @ 0x300000
   718                           ;	PLL Prescaler Selection bits
   719                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   720                           ;	System Clock Postscaler Selection bits
   721                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   722                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   723                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   724   300000                     	org	3145728
   725   300000  00                 	db	0
   726                           
   727                           ;Config register CONFIG1H @ 0x300001
   728                           ;	Oscillator Selection bits
   729                           ;	FOSC = HS, HS oscillator (HS)
   730                           ;	Fail-Safe Clock Monitor Enable bit
   731                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   732                           ;	Internal/External Oscillator Switchover bit
   733                           ;	IESO = OFF, Oscillator Switchover mode disabled
   734   300001                     	org	3145729
   735   300001  0C                 	db	12
   736                           
   737                           ;Config register CONFIG2L @ 0x300002
   738                           ;	Power-up Timer Enable bit
   739                           ;	PWRT = OFF, PWRT disabled
   740                           ;	Brown-out Reset Enable bits
   741                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   742                           ;	Brown-out Reset Voltage bits
   743                           ;	BORV = 3, Minimum setting 2.05V
   744                           ;	USB Voltage Regulator Enable bit
   745                           ;	VREGEN = OFF, USB voltage regulator disabled
   746   300002                     	org	3145730
   747   300002  19                 	db	25
   748                           
   749                           ;Config register CONFIG2H @ 0x300003
   750                           ;	Watchdog Timer Enable bit
   751                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   752                           ;	Watchdog Timer Postscale Select bits
   753                           ;	WDTPS = 32768, 1:32768
   754   300003                     	org	3145731
   755   300003  1E                 	db	30
   756                           
   757                           ; Padding undefined space
   758   300004                     	org	3145732
   759   300004  FF                 	db	255
   760                           
   761                           ;Config register CONFIG3H @ 0x300005
   762                           ;	CCP2 MUX bit
   763                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   764                           ;	PORTB A/D Enable bit
   765                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   766                           ;	Low-Power Timer 1 Oscillator Enable bit
   767                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   768                           ;	MCLR Pin Enable bit
   769                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   770   300005                     	org	3145733
   771   300005  81                 	db	129
   772                           
   773                           ;Config register CONFIG4L @ 0x300006
   774                           ;	Stack Full/Underflow Reset Enable bit
   775                           ;	STVREN = ON, Stack full/underflow will cause Reset
   776                           ;	Single-Supply ICSP Enable bit
   777                           ;	LVP = ON, Single-Supply ICSP enabled
   778                           ;	Extended Instruction Set Enable bit
   779                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   780                           ;	Background Debugger Enable bit
   781                           ;	DEBUG = 0x1, unprogrammed default
   782   300006                     	org	3145734
   783   300006  85                 	db	133
   784                           
   785                           ; Padding undefined space
   786   300007                     	org	3145735
   787   300007  FF                 	db	255
   788                           
   789                           ;Config register CONFIG5L @ 0x300008
   790                           ;	Code Protection bit
   791                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   792                           ;	Code Protection bit
   793                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   794                           ;	Code Protection bit
   795                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   796                           ;	Code Protection bit
   797                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   798   300008                     	org	3145736
   799   300008  0F                 	db	15
   800                           
   801                           ;Config register CONFIG5H @ 0x300009
   802                           ;	Boot Block Code Protection bit
   803                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   804                           ;	Data EEPROM Code Protection bit
   805                           ;	CPD = OFF, Data EEPROM is not code-protected
   806   300009                     	org	3145737
   807   300009  C0                 	db	192
   808                           
   809                           ;Config register CONFIG6L @ 0x30000A
   810                           ;	Write Protection bit
   811                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   812                           ;	Write Protection bit
   813                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   814                           ;	Write Protection bit
   815                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   816                           ;	Write Protection bit
   817                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   818   30000A                     	org	3145738
   819   30000A  0F                 	db	15
   820                           
   821                           ;Config register CONFIG6H @ 0x30000B
   822                           ;	Configuration Register Write Protection bit
   823                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   824                           ;	Boot Block Write Protection bit
   825                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   826                           ;	Data EEPROM Write Protection bit
   827                           ;	WRTD = OFF, Data EEPROM is not write-protected
   828   30000B                     	org	3145739
   829   30000B  E0                 	db	224
   830                           
   831                           ;Config register CONFIG7L @ 0x30000C
   832                           ;	Table Read Protection bit
   833                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   834                           ;	Table Read Protection bit
   835                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   836                           ;	Table Read Protection bit
   837                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   838                           ;	Table Read Protection bit
   839                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   840   30000C                     	org	3145740
   841   30000C  0F                 	db	15
   842                           
   843                           ;Config register CONFIG7H @ 0x30000D
   844                           ;	Boot Block Table Read Protection bit
   845                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   846   30000D                     	org	3145741
   847   30000D  40                 	db	64
   848                           tosu	equ	0xFFF
   849                           tosh	equ	0xFFE
   850                           tosl	equ	0xFFD
   851                           stkptr	equ	0xFFC
   852                           pclatu	equ	0xFFB
   853                           pclath	equ	0xFFA
   854                           pcl	equ	0xFF9
   855                           tblptru	equ	0xFF8
   856                           tblptrh	equ	0xFF7
   857                           tblptrl	equ	0xFF6
   858                           tablat	equ	0xFF5
   859                           prodh	equ	0xFF4
   860                           prodl	equ	0xFF3
   861                           indf0	equ	0xFEF
   862                           postinc0	equ	0xFEE
   863                           postdec0	equ	0xFED
   864                           preinc0	equ	0xFEC
   865                           plusw0	equ	0xFEB
   866                           fsr0h	equ	0xFEA
   867                           fsr0l	equ	0xFE9
   868                           wreg	equ	0xFE8
   869                           indf1	equ	0xFE7
   870                           postinc1	equ	0xFE6
   871                           postdec1	equ	0xFE5
   872                           preinc1	equ	0xFE4
   873                           plusw1	equ	0xFE3
   874                           fsr1h	equ	0xFE2
   875                           fsr1l	equ	0xFE1
   876                           bsr	equ	0xFE0
   877                           indf2	equ	0xFDF
   878                           postinc2	equ	0xFDE
   879                           postdec2	equ	0xFDD
   880                           preinc2	equ	0xFDC
   881                           plusw2	equ	0xFDB
   882                           fsr2h	equ	0xFDA
   883                           fsr2l	equ	0xFD9
   884                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     49      49
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_map
    _map->___aldiv
    ___aldiv->___lmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1402
                                             46 COMRAM     3     3      0
                                _map
 ---------------------------------------------------------------------------------
 (1) _map                                                 20     0     20    1356
                                             26 COMRAM    20     0     20
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     452
                                             12 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _map
     ___aldiv
       ___lmul (ARG)
     ___lmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     31      31       1       51.6%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
DATA                 0      0       0       4        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBIGSFRhh         33      0       0      21        0.0%
BITBIGSFRhl          5      0       0      22        0.0%
BITBIGSFRlh          1      0       0      23        0.0%
BITBIGSFRllh        28      0       0      24        0.0%
BITBIGSFRlll        34      0       0      25        0.0%
BIGRAM             7FF      0       0      26        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Jan 06 14:28:35 2024

                     l33 7E74                       l27 7E4A                       l35 7E82  
                     l52 7DC0                       l53 7DD0                      l120 7FFE  
                    l800 7F06                      l810 7F3C                      l802 7F16  
                    l820 7F84                      l812 7F4C                      l804 7F1A  
                    l830 7FC8                      l822 7F8E                      l814 7F62  
                    l806 7F28                      l824 7FAC                      l816 7F6A  
                    l832 7FCE                      l808 7F38                      l840 7DD2  
                    l834 7FDE                      l826 7FBC                      l818 7F76  
                    l850 7E70                      l836 7FEE                      l828 7FBE  
                    l852 7E72                      l844 7E4C                      l790 7D86  
                    l854 7E8A                      l846 7E58                      l792 7D96  
                    l856 7EE4                      l848 7E62                      l794 7DA0  
                    l786 7D68                      l796 7EF4                      l788 7D78  
                    l798 7EF8                      u100 7D86                      u101 7D82  
                    u110 7DC0                      u111 7DBC                      u120 7F06  
                    u121 7F02                      u130 7F28                      u131 7F24  
                    u140 7F62                      u141 7F5E                      u150 7F84  
                    u151 7F80                      u160 7FAC                      u161 7FA8  
                    u170 7FDE                      u171 7FDA                      u180 7E82  
                    u181 7E7E                      _PR2 000FCB                      _map 7DD2  
                    wreg 000FE8                     ?_map 001B                     _TMR2 000FCC  
                   _main 7E4C                     map@x 001B                     start 0000  
           ___param_bank 000000                    ??_map 002F          __end_of___aldiv 8000  
                  ?_main 0001                    _ADRES 000FC3                    _T2CON 000FCA  
    ___lmul@multiplicand 0005                    status 000FD8          __initialization 7D62  
           __end_of_main 7EF4                   ??_main 002F            __activetblptr 000000  
                 _ADCON0 000FC2                   _ADCON1 000FC1                   _ADCON2 000FC0  
                 _CCPR1L 000FBE                   ___lmul 7D68                ??___aldiv 0015  
                 isa$std 000001            main@valor_adc 002F            main@valor_pwm 0031  
             __accesstop 0060  __end_of__initialization 7D62            ___rparam_used 000001  
         __pcstackCOMRAM 0001                  ?___lmul 0001                  _CCP1CON 000FBD  
         ___lmul@product 0009                  __Hparam 0000                  __Lparam 0000  
                ___aldiv 7EF4                  __pcinit 7D62                  __ramtop 0800  
                __ptext0 7E4C                  __ptext1 7DD2                  __ptext2 7D68  
                __ptext3 7EF4                _T2CONbits 000FCA         ___aldiv@dividend 000D  
                map@eMax 0023                  map@eMin 001F                  map@sMax 002B  
                map@sMin 0027     end_of_initialization 7D62         ___aldiv@quotient 0017  
              _TRISCbits 000F94           __end_of___lmul 7DD2      start_initialization 7D62  
            __end_of_map 7E4C                 ??___lmul 0009                 ?___aldiv 000D  
        ___aldiv@divisor 0011          ___aldiv@counter 0015               _ADCON0bits 000FC2  
      ___lmul@multiplier 0001                 __Hrparam 0000                 __Lrparam 0000  
               isa$xinst 000000             ___aldiv@sign 0016  
