

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Jan 07 13:39:42 2024

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    15   000000                     
    16                           ; Version 2.40
    17                           ; Generated 17/11/2021 GMT
    18                           ; 
    19                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F2550 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51   000000                     
    52                           	psect	idataCOMRAM
    53   007EEE                     __pidataCOMRAM:
    54                           	callstack 0
    55                           
    56                           ;initializer for _display
    57   007EEE  40                 	db	64
    58   007EEF  79                 	db	121
    59   007EF0  24                 	db	36
    60   007EF1  30                 	db	48
    61   007EF2  19                 	db	25
    62   007EF3  12                 	db	18
    63   007EF4  02                 	db	2
    64   007EF5  78                 	db	120
    65   007EF6  00                 	db	0
    66   007EF7  10                 	db	16
    67   000000                     _PORTCbits	set	3970
    68   000000                     _LATB	set	3978
    69   000000                     _TRISB	set	3987
    70   000000                     _TRISCbits	set	3988
    71   000000                     _ADCON1bits	set	4033
    72                           
    73                           ; #config settings
    74                           
    75                           	psect	cinit
    76   007EF8                     __pcinit:
    77                           	callstack 0
    78   007EF8                     start_initialization:
    79                           	callstack 0
    80   007EF8                     __initialization:
    81                           	callstack 0
    82                           
    83                           ; Initialize objects allocated to COMRAM (10 bytes)
    84                           ; load TBLPTR registers with __pidataCOMRAM
    85   007EF8  0EEE               	movlw	low __pidataCOMRAM
    86   007EFA  6EF6               	movwf	tblptrl,c
    87   007EFC  0E7E               	movlw	high __pidataCOMRAM
    88   007EFE  6EF7               	movwf	tblptrh,c
    89   007F00  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    90   007F02  6EF8               	movwf	tblptru,c
    91   007F04  EE00  F001         	lfsr	0,__pdataCOMRAM
    92   007F08  EE10 F00A          	lfsr	1,10
    93   007F0C                     copy_data0:
    94   007F0C  0009               	tblrd		*+
    95   007F0E  CFF5 FFEE          	movff	tablat,postinc0
    96   007F12  50E5               	movf	postdec1,w,c
    97   007F14  50E1               	movf	fsr1l,w,c
    98   007F16  E1FA               	bnz	copy_data0
    99                           
   100                           ; Clear objects allocated to COMRAM (2 bytes)
   101   007F18  6A0C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   102   007F1A  6A0B               	clrf	__pbssCOMRAM& (0+255),c
   103   007F1C                     end_of_initialization:
   104                           	callstack 0
   105   007F1C                     __end_of__initialization:
   106                           	callstack 0
   107   007F1C  0100               	movlb	0
   108   007F1E  EF91  F03F         	goto	_main	;jump to C main() function
   109                           
   110                           	psect	bssCOMRAM
   111   00000B                     __pbssCOMRAM:
   112                           	callstack 0
   113   00000B                     _contador:
   114                           	callstack 0
   115   00000B                     	ds	2
   116                           
   117                           	psect	dataCOMRAM
   118   000001                     __pdataCOMRAM:
   119                           	callstack 0
   120   000001                     _display:
   121                           	callstack 0
   122   000001                     	ds	10
   123                           
   124                           	psect	cstackCOMRAM
   125   00000D                     __pcstackCOMRAM:
   126                           	callstack 0
   127   00000D                     ??_main:
   128                           
   129                           ; 1 bytes @ 0x0
   130   00000D                     	ds	1
   131                           
   132 ;;
   133 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   134 ;;
   135 ;; *************** function _main *****************
   136 ;; Defined at:
   137 ;;		line 79 in file "7_Segmentos.c"
   138 ;; Parameters:    Size  Location     Type
   139 ;;		None
   140 ;; Auto vars:     Size  Location     Type
   141 ;;		None
   142 ;; Return value:  Size  Location     Type
   143 ;;                  1    wreg      void 
   144 ;; Registers used:
   145 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   146 ;; Tracked objects:
   147 ;;		On entry : 0/0
   148 ;;		On exit  : 0/0
   149 ;;		Unchanged: 0/0
   150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   151 ;;      Params:         0       0       0       0       0       0       0       0       0
   152 ;;      Locals:         0       0       0       0       0       0       0       0       0
   153 ;;      Temps:          1       0       0       0       0       0       0       0       0
   154 ;;      Totals:         1       0       0       0       0       0       0       0       0
   155 ;;Total ram usage:        1 bytes
   156 ;; This function calls:
   157 ;;		Nothing
   158 ;; This function is called by:
   159 ;;		Startup code after reset
   160 ;; This function uses a non-reentrant model
   161 ;;
   162                           
   163                           	psect	text0
   164   007F22                     __ptext0:
   165                           	callstack 0
   166   007F22                     _main:
   167                           	callstack 31
   168   007F22  0E0F               	movlw	15
   169   007F24  12C1               	iorwf	193,f,c	;volatile
   170   007F26  8094               	bsf	148,0,c	;volatile
   171   007F28  8294               	bsf	148,1,c	;volatile
   172   007F2A  0E00               	movlw	0
   173   007F2C  6E93               	movwf	147,c	;volatile
   174   007F2E  0E00               	movlw	0
   175   007F30  6E8A               	movwf	138,c	;volatile
   176   007F32                     l716:
   177   007F32  A082               	btfss	130,0,c	;volatile
   178   007F34  EF9E  F03F         	goto	u11
   179   007F38  EFA0  F03F         	goto	u10
   180   007F3C                     u11:
   181   007F3C  EFCC  F03F         	goto	l732
   182   007F40                     u10:
   183   007F40                     l23:
   184   007F40  B082               	btfsc	130,0,c	;volatile
   185   007F42  EFA5  F03F         	goto	u21
   186   007F46  EFA7  F03F         	goto	u20
   187   007F4A                     u21:
   188   007F4A  EFA0  F03F         	goto	l23
   189   007F4E                     u20:
   190   007F4E  0E34               	movlw	52
   191   007F50  6E0D               	movwf	??_main^0,c
   192   007F52  0EF2               	movlw	242
   193   007F54                     u77:
   194   007F54  2EE8               	decfsz	wreg,f,c
   195   007F56  D7FE               	bra	u77
   196   007F58  2E0D               	decfsz	??_main^0,f,c
   197   007F5A  D7FC               	bra	u77
   198   007F5C  4A0B               	infsnz	_contador^0,f,c
   199   007F5E  2A0C               	incf	(_contador+1)^0,f,c
   200   007F60  0E01               	movlw	low _display
   201   007F62  240B               	addwf	_contador^0,w,c
   202   007F64  6ED9               	movwf	fsr2l,c
   203   007F66  0E00               	movlw	high _display
   204   007F68  200C               	addwfc	(_contador+1)^0,w,c
   205   007F6A  6EDA               	movwf	fsr2h,c
   206   007F6C  50DF               	movf	indf2,w,c
   207   007F6E  6E8A               	movwf	138,c	;volatile
   208   007F70  BE0C               	btfsc	(_contador+1)^0,7,c
   209   007F72  EFC4  F03F         	goto	u31
   210   007F76  500C               	movf	(_contador+1)^0,w,c
   211   007F78  E109               	bnz	u30
   212   007F7A  0E0A               	movlw	10
   213   007F7C  5C0B               	subwf	_contador^0,w,c
   214   007F7E  A0D8               	btfss	status,0,c
   215   007F80  EFC4  F03F         	goto	u31
   216   007F84  EFC6  F03F         	goto	u30
   217   007F88                     u31:
   218   007F88  EFCC  F03F         	goto	l732
   219   007F8C                     u30:
   220   007F8C  0E00               	movlw	0
   221   007F8E  6E0C               	movwf	(_contador+1)^0,c
   222   007F90  0E09               	movlw	9
   223   007F92  6E0B               	movwf	_contador^0,c
   224   007F94  C00A  FF8A         	movff	_display+9,3978	;volatile
   225   007F98                     l732:
   226   007F98  A282               	btfss	130,1,c	;volatile
   227   007F9A  EFD1  F03F         	goto	u41
   228   007F9E  EFD3  F03F         	goto	u40
   229   007FA2                     u41:
   230   007FA2  EF99  F03F         	goto	l716
   231   007FA6                     u40:
   232   007FA6                     l28:
   233   007FA6  B282               	btfsc	130,1,c	;volatile
   234   007FA8  EFD8  F03F         	goto	u51
   235   007FAC  EFDA  F03F         	goto	u50
   236   007FB0                     u51:
   237   007FB0  EFD3  F03F         	goto	l28
   238   007FB4                     u50:
   239   007FB4  0E34               	movlw	52
   240   007FB6  6E0D               	movwf	??_main^0,c
   241   007FB8  0EF2               	movlw	242
   242   007FBA                     u87:
   243   007FBA  2EE8               	decfsz	wreg,f,c
   244   007FBC  D7FE               	bra	u87
   245   007FBE  2E0D               	decfsz	??_main^0,f,c
   246   007FC0  D7FC               	bra	u87
   247   007FC2  060B               	decf	_contador^0,f,c
   248   007FC4  A0D8               	btfss	status,0,c
   249   007FC6  060C               	decf	(_contador+1)^0,f,c
   250   007FC8  0E01               	movlw	low _display
   251   007FCA  240B               	addwf	_contador^0,w,c
   252   007FCC  6ED9               	movwf	fsr2l,c
   253   007FCE  0E00               	movlw	high _display
   254   007FD0  200C               	addwfc	(_contador+1)^0,w,c
   255   007FD2  6EDA               	movwf	fsr2h,c
   256   007FD4  50DF               	movf	indf2,w,c
   257   007FD6  6E8A               	movwf	138,c	;volatile
   258   007FD8  280B               	incf	_contador^0,w,c
   259   007FDA  E106               	bnz	u61
   260   007FDC  280C               	incf	(_contador+1)^0,w,c
   261   007FDE  A4D8               	btfss	status,2,c
   262   007FE0  EFF4  F03F         	goto	u61
   263   007FE4  EFF6  F03F         	goto	u60
   264   007FE8                     u61:
   265   007FE8  EF99  F03F         	goto	l716
   266   007FEC                     u60:
   267   007FEC  0E00               	movlw	0
   268   007FEE  6E0C               	movwf	(_contador+1)^0,c
   269   007FF0  0E00               	movlw	0
   270   007FF2  6E0B               	movwf	_contador^0,c
   271   007FF4  C001  FF8A         	movff	_display,3978	;volatile
   272   007FF8  EF99  F03F         	goto	l716
   273   007FFC  EF00  F000         	goto	start
   274   008000                     __end_of_main:
   275                           	callstack 0
   276   000000                     
   277                           	psect	rparam
   278   000000                     
   279                           	psect	idloc
   280                           
   281                           ;Config register IDLOC0 @ 0x200000
   282                           ;	unspecified, using default values
   283   200000                     	org	2097152
   284   200000  FF                 	db	255
   285                           
   286                           ;Config register IDLOC1 @ 0x200001
   287                           ;	unspecified, using default values
   288   200001                     	org	2097153
   289   200001  FF                 	db	255
   290                           
   291                           ;Config register IDLOC2 @ 0x200002
   292                           ;	unspecified, using default values
   293   200002                     	org	2097154
   294   200002  FF                 	db	255
   295                           
   296                           ;Config register IDLOC3 @ 0x200003
   297                           ;	unspecified, using default values
   298   200003                     	org	2097155
   299   200003  FF                 	db	255
   300                           
   301                           ;Config register IDLOC4 @ 0x200004
   302                           ;	unspecified, using default values
   303   200004                     	org	2097156
   304   200004  FF                 	db	255
   305                           
   306                           ;Config register IDLOC5 @ 0x200005
   307                           ;	unspecified, using default values
   308   200005                     	org	2097157
   309   200005  FF                 	db	255
   310                           
   311                           ;Config register IDLOC6 @ 0x200006
   312                           ;	unspecified, using default values
   313   200006                     	org	2097158
   314   200006  FF                 	db	255
   315                           
   316                           ;Config register IDLOC7 @ 0x200007
   317                           ;	unspecified, using default values
   318   200007                     	org	2097159
   319   200007  FF                 	db	255
   320                           
   321                           	psect	config
   322                           
   323                           ;Config register CONFIG1L @ 0x300000
   324                           ;	PLL Prescaler Selection bits
   325                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   326                           ;	System Clock Postscaler Selection bits
   327                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   328                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   329                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   330   300000                     	org	3145728
   331   300000  00                 	db	0
   332                           
   333                           ;Config register CONFIG1H @ 0x300001
   334                           ;	Oscillator Selection bits
   335                           ;	FOSC = HS, HS oscillator (HS)
   336                           ;	Fail-Safe Clock Monitor Enable bit
   337                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   338                           ;	Internal/External Oscillator Switchover bit
   339                           ;	IESO = OFF, Oscillator Switchover mode disabled
   340   300001                     	org	3145729
   341   300001  0C                 	db	12
   342                           
   343                           ;Config register CONFIG2L @ 0x300002
   344                           ;	Power-up Timer Enable bit
   345                           ;	PWRT = OFF, PWRT disabled
   346                           ;	Brown-out Reset Enable bits
   347                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   348                           ;	Brown-out Reset Voltage bits
   349                           ;	BORV = 3, Minimum setting 2.05V
   350                           ;	USB Voltage Regulator Enable bit
   351                           ;	VREGEN = OFF, USB voltage regulator disabled
   352   300002                     	org	3145730
   353   300002  19                 	db	25
   354                           
   355                           ;Config register CONFIG2H @ 0x300003
   356                           ;	Watchdog Timer Enable bit
   357                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   358                           ;	Watchdog Timer Postscale Select bits
   359                           ;	WDTPS = 32768, 1:32768
   360   300003                     	org	3145731
   361   300003  1E                 	db	30
   362                           
   363                           ; Padding undefined space
   364   300004                     	org	3145732
   365   300004  FF                 	db	255
   366                           
   367                           ;Config register CONFIG3H @ 0x300005
   368                           ;	CCP2 MUX bit
   369                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   370                           ;	PORTB A/D Enable bit
   371                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   372                           ;	Low-Power Timer 1 Oscillator Enable bit
   373                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   374                           ;	MCLR Pin Enable bit
   375                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   376   300005                     	org	3145733
   377   300005  81                 	db	129
   378                           
   379                           ;Config register CONFIG4L @ 0x300006
   380                           ;	Stack Full/Underflow Reset Enable bit
   381                           ;	STVREN = ON, Stack full/underflow will cause Reset
   382                           ;	Single-Supply ICSP Enable bit
   383                           ;	LVP = ON, Single-Supply ICSP enabled
   384                           ;	Extended Instruction Set Enable bit
   385                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   386                           ;	Background Debugger Enable bit
   387                           ;	DEBUG = 0x1, unprogrammed default
   388   300006                     	org	3145734
   389   300006  85                 	db	133
   390                           
   391                           ; Padding undefined space
   392   300007                     	org	3145735
   393   300007  FF                 	db	255
   394                           
   395                           ;Config register CONFIG5L @ 0x300008
   396                           ;	Code Protection bit
   397                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   398                           ;	Code Protection bit
   399                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   400                           ;	Code Protection bit
   401                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   402                           ;	Code Protection bit
   403                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   404   300008                     	org	3145736
   405   300008  0F                 	db	15
   406                           
   407                           ;Config register CONFIG5H @ 0x300009
   408                           ;	Boot Block Code Protection bit
   409                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   410                           ;	Data EEPROM Code Protection bit
   411                           ;	CPD = OFF, Data EEPROM is not code-protected
   412   300009                     	org	3145737
   413   300009  C0                 	db	192
   414                           
   415                           ;Config register CONFIG6L @ 0x30000A
   416                           ;	Write Protection bit
   417                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   418                           ;	Write Protection bit
   419                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   420                           ;	Write Protection bit
   421                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   422                           ;	Write Protection bit
   423                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   424   30000A                     	org	3145738
   425   30000A  0F                 	db	15
   426                           
   427                           ;Config register CONFIG6H @ 0x30000B
   428                           ;	Configuration Register Write Protection bit
   429                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   430                           ;	Boot Block Write Protection bit
   431                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   432                           ;	Data EEPROM Write Protection bit
   433                           ;	WRTD = OFF, Data EEPROM is not write-protected
   434   30000B                     	org	3145739
   435   30000B  E0                 	db	224
   436                           
   437                           ;Config register CONFIG7L @ 0x30000C
   438                           ;	Table Read Protection bit
   439                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   440                           ;	Table Read Protection bit
   441                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   442                           ;	Table Read Protection bit
   443                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   444                           ;	Table Read Protection bit
   445                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   446   30000C                     	org	3145740
   447   30000C  0F                 	db	15
   448                           
   449                           ;Config register CONFIG7H @ 0x30000D
   450                           ;	Boot Block Table Read Protection bit
   451                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   452   30000D                     	org	3145741
   453   30000D  40                 	db	64
   454                           tosu	equ	0xFFF
   455                           tosh	equ	0xFFE
   456                           tosl	equ	0xFFD
   457                           stkptr	equ	0xFFC
   458                           pclatu	equ	0xFFB
   459                           pclath	equ	0xFFA
   460                           pcl	equ	0xFF9
   461                           tblptru	equ	0xFF8
   462                           tblptrh	equ	0xFF7
   463                           tblptrl	equ	0xFF6
   464                           tablat	equ	0xFF5
   465                           prodh	equ	0xFF4
   466                           prodl	equ	0xFF3
   467                           indf0	equ	0xFEF
   468                           postinc0	equ	0xFEE
   469                           postdec0	equ	0xFED
   470                           preinc0	equ	0xFEC
   471                           plusw0	equ	0xFEB
   472                           fsr0h	equ	0xFEA
   473                           fsr0l	equ	0xFE9
   474                           wreg	equ	0xFE8
   475                           indf1	equ	0xFE7
   476                           postinc1	equ	0xFE6
   477                           postdec1	equ	0xFE5
   478                           preinc1	equ	0xFE4
   479                           plusw1	equ	0xFE3
   480                           fsr1h	equ	0xFE2
   481                           fsr1l	equ	0xFE1
   482                           bsr	equ	0xFE0
   483                           indf2	equ	0xFDF
   484                           postinc2	equ	0xFDE
   485                           postdec2	equ	0xFDD
   486                           preinc2	equ	0xFDC
   487                           plusw2	equ	0xFDB
   488                           fsr2h	equ	0xFDA
   489                           fsr2l	equ	0xFD9
   490                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      1      13
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      26        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       6        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      1       D       1       13.7%
BITBIGSFRh          3E      0       0      21        0.0%
BITBIGSFRlh         2C      0       0      22        0.0%
BITBIGSFRllll       22      0       0      25        0.0%
BITBIGSFRllh         8      0       0      23        0.0%
BITBIGSFRlllh        7      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       D       3        0.0%
DATA                 0      0       D       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Jan 07 13:39:42 2024

                     l23 7F40                       l28 7FA6                       u10 7F40  
                     u11 7F3C                       u20 7F4E                       u21 7F4A  
                     u30 7F8C                       u31 7F88                       u40 7FA6  
                     u41 7FA2                       u50 7FB4                       u51 7FB0  
                     u60 7FEC                       u61 7FE8                       u77 7F54  
                     u87 7FBA                      l710 7F22                      l720 7F4E  
                    l712 7F26                      l730 7F94                      l722 7F5C  
                    l714 7F28                      l740 7FC8                      l724 7F60  
                    l732 7F98                      l716 7F32                      l742 7FD8  
                    l726 7F70                      l744 7FEC                      l736 7FB4  
                    l728 7F8C                      l746 7FF4                      l738 7FC2  
                    wreg 000FE8                     _LATB 000F8A                     _main 7F22  
                   indf2 000FDF                     fsr1l 000FE1                     fsr2l 000FD9  
                   start 0000             ___param_bank 000000                    ?_main 000D  
                  _TRISB 000F93                    tablat 000FF5                    status 000FD8  
        __initialization 7EF8             __end_of_main 8000                   ??_main 000D  
          __activetblptr 000000                   isa$std 000001             __pdataCOMRAM 0001  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 7F1C            ___rparam_used 000001  
         __pcstackCOMRAM 000D                  __Hparam 0000                  __Lparam 0000  
                __pcinit 7EF8                  __ramtop 0800                  __ptext0 7F22  
                _display 0001     end_of_initialization 7F1C                  postdec1 000FE5  
                postinc0 000FEE                _PORTCbits 000F82                _TRISCbits 000F94  
          __pidataCOMRAM 7EEE      start_initialization 7EF8              __pbssCOMRAM 000B  
             _ADCON1bits 000FC1                copy_data0 7F0C                 __Hrparam 0000  
               __Lrparam 0000                 _contador 000B                 isa$xinst 000000  
